[
  {
    "objectID": "notebooks/001_weather.html",
    "href": "notebooks/001_weather.html",
    "title": "Danish weather",
    "section": "",
    "text": "Weather data\nWeather data was collected… blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah\nlong_format = df.melt(id_vars=['day'], value_vars=['wind', 'precipitation'], var_name='weather', value_name='value')\nlong_format\n\n\n\n\n\n\n\n\nday\nweather\nvalue\n\n\n\n\n0\n0\nwind\n1.124467\n\n\n1\n1\nwind\n1.135152\n\n\n2\n2\nwind\n1.597665\n\n\n3\n3\nwind\n1.318885\n\n\n4\n4\nwind\n1.862039\n\n\n...\n...\n...\n...\n\n\n295\n145\nprecipitation\n1.172954\n\n\n296\n146\nprecipitation\n1.852812\n\n\n297\n147\nprecipitation\n1.202052\n\n\n298\n148\nprecipitation\n1.198011\n\n\n299\n149\nprecipitation\n1.996627\n\n\n\n\n300 rows × 3 columns\nsns.lineplot(data=long_format, x='day', y='value', hue='weather')\nplt.ylim(bottom=0) ;\n\n\n\n\n\n\n\nFigure 3.1: Danish weather: This is the weather forcast for your project\nFrom this plot, it seems Danish weather is quite unpredictable.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Danish weather</span>"
    ]
  },
  {
    "objectID": "notebooks/002_interaction.html",
    "href": "notebooks/002_interaction.html",
    "title": "Workplace interaction",
    "section": "",
    "text": "Sampling\nI sampled 100 danaes from workplaces in Denmark. More about the sampling… blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\nWorkplace individuals were interviewed by …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\ndf = pd.DataFrame({'name': danish_people, \n                   'seniority': np.random.randint(0, 5, len(danish_people)), \n                   'age': np.random.randint(22, 67, len(danish_people))})\ndf['informality'] = np.random.normal(loc=10, scale=1, size=len(danish_people))\ndf\n\n\n\n\n\n\n\n\nname\nseniority\nage\ninformality\n\n\n\n\n0\nJulie\n4\n58\n9.944085\n\n\n1\nSofie\n3\n42\n9.600922\n\n\n2\nSara\n0\n55\n8.107589\n\n\n3\nCecilie\n2\n39\n10.745701\n\n\n4\nEmma\n0\n52\n10.304008\n\n\n...\n...\n...\n...\n...\n\n\n95\nJesper\n0\n66\n8.729660\n\n\n96\nDavid\n2\n31\n10.554446\n\n\n97\nAsger\n3\n64\n10.223756\n\n\n98\nMichael\n1\n24\n11.298557\n\n\n99\nJohan\n0\n53\n10.708786\n\n\n\n\n100 rows × 4 columns\nsns.scatterplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age')\nplt.legend(title='Seniority', loc='lower right', labels=['Undergrad', 'Postgrad', 'PhD', 'Postdoc', 'Professor'])\nplt.ylim(bottom=0) ;\n\n\n\n\n\n\n\nFigure 4.1: Interaction among Danes: How Danes interact is has very little to do with age and seniority, compared to most other contries.\nSeems Danish people act very informally unaffected by age and seniority.\ninformality_age_cor = df.informality.corr(df.age)\ninformality_age_cor\n\n-0.13078736692763468\ninformality_seniority_cor = df.informality.corr(df.seniority)\ninformality_seniority_cor\n\n0.02930324759614983\nThe correlation between informality and age was -0.131 and the correlation between informality and seniority was 0.029.\nsns.lmplot(x='age', y='informality', data=df, hue='seniority', palette='viridis')\nplt.ylabel('How informal you can be')\nplt.xlabel('Age') ;\n\n\n\n\n\n\n\nFigure 4.2: Interaction among Danes: Regressions of informality against age for five levels of seniority.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workplace interaction</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html",
    "href": "notebooks/01_hicexplorer.html",
    "title": "HiCExplorer using macaque data",
    "section": "",
    "text": "Reality check",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#reality-check",
    "href": "notebooks/01_hicexplorer.html#reality-check",
    "title": "HiCExplorer using macaque data",
    "section": "",
    "text": "Conda environment\nThe notebook must be launched from the hic environment.\nCheck with the cell magic %conda info where the shell escape (! or %%bash) looks.\n\n\nKernel\nBefore using this notebook, make sure to use the ‘hic’ kernel.\nI might change the env into a seperate HiC env for each of the tools, such as HICExplorer, Cooler/cooltools, etc.\nAs of this version, there is only one environment in the repo, and it contains both Python, R, and CLI tools for use in HI-C data analysis.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#getting-started-with-an-overview",
    "href": "notebooks/01_hicexplorer.html#getting-started-with-an-overview",
    "title": "HiCExplorer using macaque data",
    "section": "Getting started with an overview",
    "text": "Getting started with an overview\nIn this notebook, we will use HiCExplorer to analysis Hi-C reads from macaque monkeys. We will follow an example from the HiCExplorer documentation.\nFirst, let’s look at the files we have. They are from SRA, and are Hi-C sequencing data from macaque fibroblasts. The data is generated for the Wang2019 paper.\n\n%%bash \n\ntree ../data/links/macaque_fastq\n\ntree ../../../../data/macaque_raw/downloaded/\n\ndu -ha ../../../../data/macaque_raw/downloaded/*.gz\n\n../data/links/macaque_fastq\n├── SRR6502335_1.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502335_1.fastq.gz\n├── SRR6502335_2.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502335_2.fastq.gz\n├── SRR6502336_1.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502336_1.fastq.gz\n├── SRR6502336_2.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502336_2.fastq.gz\n├── SRR6502337_1.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502337_1.fastq.gz\n├── SRR6502337_2.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502337_2.fastq.gz\n├── SRR6502338_1.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502338_1.fastq.gz\n├── SRR6502338_2.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502338_2.fastq.gz\n├── SRR6502339_1.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502339_1.fastq.gz\n└── SRR6502339_2.fastq.gz -&gt; ../../../../../../data/macaque_raw/downloaded/SRR6502339_2.fastq.gz\n\n0 directories, 10 files\n../../../../data/macaque_raw/downloaded/\n├── rheMac10_Mmul10.zip\n├── SraRunTable.txt\n├── SRR6502335_1.fastq.gz\n├── SRR6502335_2.fastq.gz\n├── SRR6502336_1.fastq.gz\n├── SRR6502336_2.fastq.gz\n├── SRR6502337_1.fastq.gz\n├── SRR6502337_2.fastq.gz\n├── SRR6502338_1.fastq.gz\n├── SRR6502338_2.fastq.gz\n├── SRR6502339_1.fastq.gz\n└── SRR6502339_2.fastq.gz\n\n0 directories, 12 files\n20G ../../../../data/macaque_raw/downloaded/SRR6502335_1.fastq.gz\n23G ../../../../data/macaque_raw/downloaded/SRR6502335_2.fastq.gz\n16G ../../../../data/macaque_raw/downloaded/SRR6502336_1.fastq.gz\n17G ../../../../data/macaque_raw/downloaded/SRR6502336_2.fastq.gz\n14G ../../../../data/macaque_raw/downloaded/SRR6502337_1.fastq.gz\n17G ../../../../data/macaque_raw/downloaded/SRR6502337_2.fastq.gz\n14G ../../../../data/macaque_raw/downloaded/SRR6502338_1.fastq.gz\n17G ../../../../data/macaque_raw/downloaded/SRR6502338_2.fastq.gz\n7.0G    ../../../../data/macaque_raw/downloaded/SRR6502339_1.fastq.gz\n7.6G    ../../../../data/macaque_raw/downloaded/SRR6502339_2.fastq.gz\n\n\n\nAn overview of the sequences\nWe can see summary statistics for our sequences in the SraRunTable.txt\n\nimport pandas as pd\n\nsra_runtable = pd.read_csv(\"../../../../data/macaque_raw/downloaded/SraRunTable.txt\")\nsra_runtable\n\n\n\n\n\n\n\n\nRun\nAssay Type\nAvgSpotLen\nBases\nBioProject\nBioSample\nBytes\nCenter Name\nConsent\nDATASTORE filetype\n...\nReleaseDate\ncreate_date\nversion\nSample Name\nsource_name\nSRA Study\ncell_type\ntissue\nagent\ngenotype\n\n\n\n\n0\nSRR6502335\nHi-C\n300\n73201141800\nPRJNA430777\nSAMN08375237\n31966430779\nGEO\npublic\nfastq,run.zq,sra\n...\n2019-02-12T00:00:00Z\n2018-01-23T23:05:00Z\n1\nGSM2940099\nfibroblast\nSRP131117\nfibroblast\nNaN\nNaN\nNaN\n\n\n1\nSRR6502336\nHi-C\n300\n65119970100\nPRJNA430777\nSAMN08375237\n24433383054\nGEO\npublic\nfastq,run.zq,sra\n...\n2019-02-12T00:00:00Z\n2018-01-24T00:16:00Z\n1\nGSM2940099\nfibroblast\nSRP131117\nfibroblast\nNaN\nNaN\nNaN\n\n\n2\nSRR6502337\nHi-C\n300\n52769196300\nPRJNA430777\nSAMN08375236\n23015357755\nGEO\npublic\nfastq,run.zq,sra\n...\n2019-02-12T00:00:00Z\n2018-01-24T07:21:00Z\n1\nGSM2940100\nfibroblast\nSRP131117\nfibroblast\nNaN\nNaN\nNaN\n\n\n3\nSRR6502338\nHi-C\n300\n52378949100\nPRJNA430777\nSAMN08375236\n22999581685\nGEO\npublic\nfastq,run.zq,sra\n...\n2019-02-12T00:00:00Z\n2018-01-23T22:14:00Z\n1\nGSM2940100\nfibroblast\nSRP131117\nfibroblast\nNaN\nNaN\nNaN\n\n\n4\nSRR6502339\nHi-C\n300\n28885941600\nPRJNA430777\nSAMN08375236\n10960123150\nGEO\npublic\nfastq,run.zq,sra\n...\n2019-02-12T00:00:00Z\n2018-01-23T21:03:00Z\n1\nGSM2940100\nfibroblast\nSRP131117\nfibroblast\nNaN\nNaN\nNaN\n\n\n\n\n5 rows × 30 columns\n\n\n\n\n\nPreparation of the .fastq files\nThe .fastq files were all prepared using this workflow. Briefly, it does three things on the reference genome (Mmul_10/rheMac10):\n\nindexing with bwa index\n\nindexing with samtools faidx\nindexing of restriction sites of the used restriction enzyme used (hicFindRestSites)\n\nThen, it maps all the .fastq files (each mate individually) back to the reference genome with bwa mem.\nFinally, it builds the .h5 Hi-C matrix with hicBuildMatrix, which includes some quality control of the Hi-C library. The results from the quality control can be viewed here.\nBut also, they are located in the steps/ folder as a log, so let’s read it into view:",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#functions-that-are-also-moved-into-hicstuff.py-script-for-import",
    "href": "notebooks/01_hicexplorer.html#functions-that-are-also-moved-into-hicstuff.py-script-for-import",
    "title": "HiCExplorer using macaque data",
    "section": "Functions that are also moved into hicstuff.py script for import",
    "text": "Functions that are also moved into hicstuff.py script for import\n\n# First, we will make a function to read the `.log` file into a `pandas` df. \n\nimport pandas as pd\nimport glob\n\n# All the files can be assigned to a list with glob.glob:\n# logs = glob.glob(\"../results/SRR*/*.log\")\n# they can be read with a for loop, but it's too messy to show. \n\n# The .log file is a tab-separated file with 4 tables, so we have to make our own function to read it\n# I wrapped it in a class to save all tables from each log in a single variable. \nclass HiCQCLog(): \n    def __init__(self, logfile):\n        reader = pd.read_csv(logfile, sep=\"\\t\", header=None, iterator=True)\n        t1 = reader.get_chunk(4).dropna(axis=1)\n        t1.columns=t1.iloc[0]\n        self.t1 = t1.drop(0).reset_index()\n\n        t2 = reader.get_chunk(6).dropna(axis=1)\n        t2.columns=t2.iloc[0]\n        self.t2 = t2.drop(4).reset_index()\n\n        t3 = reader.get_chunk(7) .dropna(axis=1)\n        t3.columns=t3.iloc[0]\n        self.t3 = t3.drop(10).reset_index()\n\n        t4 = reader.get_chunk(7).dropna(axis=1)\n        t4.columns=t4.iloc[0]\n        self.t4 = t4.drop(17).reset_index()\n        \n    def view(self):\n        display(self.t1, self.t2, self.t3, self.t4)\n  \n\n\n# Make a function to plot .pngs with matplotlib\n\nimport os\nimport glob\nimport matplotlib.pyplot as plt\nfrom PIL import Image\n\ndef plot_pngs_in_grid(image_folder, suffix=\".png\", ncol=3):\n    \"\"\"\n    Plots all PNG images from a specified folder in a grid.\n    \n    Parameters:\n    image_folder (str): Path to the folder containing the PNG files.\n    num_cols (int): Number of columns in the grid layout. Default is 3.\n    \n    Returns:\n    None\n    \"\"\"\n    # Find all .png files in the folder\n    # with a specified suffix (default: .png)\n    print(f\"Plotting all images in '{os.path.join(image_folder, f'*{suffix}')}'\")\n    image_files = glob.glob(os.path.join(image_folder, f'*{suffix}'))\n\n    # If no images found, print a message and return\n    if not image_files:\n        print(f\"No PNG files found in {image_folder}.\")\n        return\n    \n    # Calculate the number of rows needed\n    num_cols = ncol\n    num_images = len(image_files)\n    num_rows = (num_images + num_cols - 1) // num_cols  # Ceiling division\n\n    # Create a matplotlib figure\n    fig, axes = plt.subplots(num_rows, num_cols, figsize=(15, 5 * num_rows))\n\n    # Flatten axes in case the grid is not a perfect rectangle\n    axes = axes.flatten()\n\n    # Loop through image files and plot them\n    for i, image_file in enumerate(image_files):\n        img = Image.open(image_file)  # Open the image file\n        axes[i].imshow(img)\n        axes[i].axis('off')  # Turn off axis labels\n        axes[i].set_title(os.path.basename(image_file))  # Set image title (filename)\n\n    # Hide any remaining empty subplots if the number of images is not a perfect fit for the grid\n    for j in range(i + 1, len(axes)):\n        axes[j].axis('off')\n\n    # Adjust layout to fit images and titles nicely\n    plt.tight_layout()\n    plt.show()\n\n\nglob.glob(os.path.join(\"../steps/bwa/QC_all_samples/\", f'*.png'))\n\n['../steps/bwa/QC_all_samples/read_orientation.png',\n '../steps/bwa/QC_all_samples/distance.png',\n '../steps/bwa/QC_all_samples/pairs_discarded.png',\n '../steps/bwa/QC_all_samples/unmappable_and_non_unique.png',\n '../steps/bwa/QC_all_samples/pairs_sequenced.png']",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#results-from-bwa",
    "href": "notebooks/01_hicexplorer.html#results-from-bwa",
    "title": "HiCExplorer using macaque data",
    "section": "Results from bwa",
    "text": "Results from bwa\n\nSRR35 = HiCQCLog(\"../results/SRR6502335_QC/QC.log\")\nSRR35.view()\n\n\n!hicQC --logfiles $(echo ../results/*_QC/QC.log) --labels \"SRR35\" \"SRR36\" \"SRR37\" \"SRR38\" \"SRR39\" --outputFolder ../steps/bwa/QC_all_samples\n\n\nplot_pngs_in_grid(\"../steps/bwa/QC_all_samples/\", ncol=2)\n\nPlotting all images in '../steps/bwa/QC_all_samples/*.png'\n\n\n\n\n\n\n\n\n\n\nNormalize matrices\n\n%%bash \n\nhicNormalize -m ../steps/SRR6502335_matrix.h5 --normalize norm_range -o SRR6502335_norm0_1.h5\n\n\n\nCreate a diagnostic plot\n\n#! hicexplorer\n! hicCorrectMatrix diagnostic_plot --help\n#! hicCorrectMatrix correct --help\n\nusage: hicCorrectMatrix diagnostic_plot --matrix hic_matrix.h5 -o file.png\n\noptions:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  --matrix MATRIX, -m MATRIX\n                        Name of the Hi-C matrix to correct in .h5 format.\n                        (default: None)\n  --plotName PLOTNAME, -o PLOTNAME\n                        File name to save the diagnostic plot. (default: None)\n\nOptional arguments:\n  --chromosomes CHROMOSOMES [CHROMOSOMES ...]\n                        List of chromosomes to be included in the iterative\n                        correction. The order of the given chromosomes will be\n                        then kept for the resulting corrected matrix.\n                        (default: None)\n  --xMax XMAX           Max value for the x-axis in counts per bin. (default:\n                        None)\n  --perchr              Compute histogram per chromosome. For samples from\n                        cells with uneven number of chromosomes and/or\n                        translocations it is advisable to check the histograms\n                        per chromosome to find the most conservative\n                        `filterThreshold`. (default: False)\n  --verbose             Print processing status. (default: False)\n\n\nLet’s make a loop that produce a diagnostic plot for all matrices in the folder:\n\n%%bash \n\nfor FILE in ../steps/*.h5\ndo\necho $(basename $FILE _matrix.h5)_diag_plot.png\nhicCorrectMatrix diagnostic_plot -m $FILE -o ../figures/$(basename $FILE _matrix.h5)_diag_plot.png\ndone\n\nSRR6502335_diag_plot.png\n\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 7859 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.5428248511904763\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot SRR6502335_diag_plot.png\n\n\n\nSRR6502336_diag_plot.png\n\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 7966 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.406856232876712\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot SRR6502336_diag_plot.png\n\n\n\nSRR6502337_diag_plot.png\n\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 8187 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.5774256637168143\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot SRR6502337_diag_plot.png\n\n\n\nSRR6502338_diag_plot.png\n\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 8172 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.689724621848739\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot SRR6502338_diag_plot.png\n\n\n\nSRR6502339_diag_plot.png\n\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 8969 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.698\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot SRR6502339_diag_plot.png\n\n\n\n\nplot_pngs_in_grid(\"../figures/bwa\", suffix=\"diag_plot.png\")\n\nPlotting all images in '../figures/bwa/*diag_plot.png'\n\n\n\n\n\n\n\n\n\n\n!hicCorrectMatrix diagnostic_plot -m SRR6502335_norm0_1.h5 -o diag_plot_norm.png\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 13359 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.0545956094919804\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot diag_plot_norm.png\n\n\n\n\n\nCorrect the matrices\nAnd do the correction with the suggested values and ICE. We are going to produce a corrected matrix for both with and without --perchr (per chromosome) option\n\n%%bash \n\nhicCorrectMatrix correct -m SRR6502335_norm0_1.h5 -o ./SRR6502335_norm0_1_corrected.h5 \\\n    --correctionMethod ICE \\\n    --filterThreshold -2 5\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 13359 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:matrix contains 21229234 data points. Sparsity 0.000.\nINFO:hicexplorer.hicCorrectMatrix:filtering by z-score\nINFO:hicexplorer.iterativeCorrection:starting iterative correction\nINFO:hicexplorer.iterativeCorrection:pass 5 Estimated time 0:2:29\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.909566849589952 \nINFO:hicexplorer.iterativeCorrection:pass 10 Estimated time 0:2:27\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 8.186419342166413 \nINFO:hicexplorer.iterativeCorrection:pass 15 Estimated time 0:2:24\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8938109193741166 \nINFO:hicexplorer.iterativeCorrection:pass 20 Estimated time 0:2:23\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 7.228200439559446 \nINFO:hicexplorer.iterativeCorrection:pass 25 Estimated time 0:2:22\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8790910335275449 \nINFO:hicexplorer.iterativeCorrection:pass 30 Estimated time 0:2:21\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 6.4417019516824885 \nINFO:hicexplorer.iterativeCorrection:pass 35 Estimated time 0:2:19\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8650482568145657 \nINFO:hicexplorer.iterativeCorrection:pass 40 Estimated time 0:2:18\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 5.79991880945091 \nINFO:hicexplorer.iterativeCorrection:pass 45 Estimated time 0:2:16\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8515610325149747 \nINFO:hicexplorer.iterativeCorrection:pass 50 Estimated time 0:2:15\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 5.270362519101916 \nINFO:hicexplorer.iterativeCorrection:pass 55 Estimated time 0:2:13\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8385658927762115 \nINFO:hicexplorer.iterativeCorrection:pass 60 Estimated time 0:2:12\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 4.827433615502592 \nINFO:hicexplorer.iterativeCorrection:pass 65 Estimated time 0:2:10\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8260196439783102 \nINFO:hicexplorer.iterativeCorrection:pass 70 Estimated time 0:2:9\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 4.452080477161172 \nINFO:hicexplorer.iterativeCorrection:pass 75 Estimated time 0:2:7\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8138884899499492 \nINFO:hicexplorer.iterativeCorrection:pass 80 Estimated time 0:2:6\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 4.130200536278638 \nINFO:hicexplorer.iterativeCorrection:pass 85 Estimated time 0:2:4\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.8021442447614385 \nINFO:hicexplorer.iterativeCorrection:pass 90 Estimated time 0:2:3\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 3.8512580422883165 \nINFO:hicexplorer.iterativeCorrection:pass 95 Estimated time 0:2:1\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7907626732591944 \nINFO:hicexplorer.iterativeCorrection:pass 100 Estimated time 0:2:0\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 3.6072719429655127 \nINFO:hicexplorer.iterativeCorrection:pass 105 Estimated time 0:1:58\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7797225650077778 \nINFO:hicexplorer.iterativeCorrection:pass 110 Estimated time 0:1:57\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 3.3921051862474654 \nINFO:hicexplorer.iterativeCorrection:pass 115 Estimated time 0:1:56\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7690051179967097 \nINFO:hicexplorer.iterativeCorrection:pass 120 Estimated time 0:1:54\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 3.200969091836857 \nINFO:hicexplorer.iterativeCorrection:pass 125 Estimated time 0:1:52\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7585934895900657 \nINFO:hicexplorer.iterativeCorrection:pass 130 Estimated time 0:1:51\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 3.0300755016903764 \nINFO:hicexplorer.iterativeCorrection:pass 135 Estimated time 0:1:50\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7484724565014031 \nINFO:hicexplorer.iterativeCorrection:pass 140 Estimated time 0:1:48\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.876389735422809 \nINFO:hicexplorer.iterativeCorrection:pass 145 Estimated time 0:1:46\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7386281528121921 \nINFO:hicexplorer.iterativeCorrection:pass 150 Estimated time 0:1:45\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.7374526645210087 \nINFO:hicexplorer.iterativeCorrection:pass 155 Estimated time 0:1:43\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7290478657442472 \nINFO:hicexplorer.iterativeCorrection:pass 160 Estimated time 0:1:42\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.61125069105262 \nINFO:hicexplorer.iterativeCorrection:pass 165 Estimated time 0:1:40\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7197198745758879 \nINFO:hicexplorer.iterativeCorrection:pass 170 Estimated time 0:1:39\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.4961193680916445 \nINFO:hicexplorer.iterativeCorrection:pass 175 Estimated time 0:1:37\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7106333219153745 \nINFO:hicexplorer.iterativeCorrection:pass 180 Estimated time 0:1:36\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.3906709792194154 \nINFO:hicexplorer.iterativeCorrection:pass 185 Estimated time 0:1:34\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.7017781093737747 \nINFO:hicexplorer.iterativeCorrection:pass 190 Estimated time 0:1:33\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.2937394223838408 \nINFO:hicexplorer.iterativeCorrection:pass 195 Estimated time 0:1:31\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6931448117980591 \nINFO:hicexplorer.iterativeCorrection:pass 200 Estimated time 0:1:30\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.2043377628045153 \nINFO:hicexplorer.iterativeCorrection:pass 205 Estimated time 0:1:28\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6847246057914107 \nINFO:hicexplorer.iterativeCorrection:pass 210 Estimated time 0:1:27\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.1216251819423557 \nINFO:hicexplorer.iterativeCorrection:pass 215 Estimated time 0:1:25\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6765092093873197 \nINFO:hicexplorer.iterativeCorrection:pass 220 Estimated time 0:1:24\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 2.0448809803593457 \nINFO:hicexplorer.iterativeCorrection:pass 225 Estimated time 0:1:22\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.668490830563762 \nINFO:hicexplorer.iterativeCorrection:pass 230 Estimated time 0:1:21\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.9734839366586194 \nINFO:hicexplorer.iterativeCorrection:pass 235 Estimated time 0:1:19\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6606621228701033 \nINFO:hicexplorer.iterativeCorrection:pass 240 Estimated time 0:1:18\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.9068957766214418 \nINFO:hicexplorer.iterativeCorrection:pass 245 Estimated time 0:1:16\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6530161468589186 \nINFO:hicexplorer.iterativeCorrection:pass 250 Estimated time 0:1:15\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.844647827663914 \nINFO:hicexplorer.iterativeCorrection:pass 255 Estimated time 0:1:13\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.645546336316785 \nINFO:hicexplorer.iterativeCorrection:pass 260 Estimated time 0:1:12\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.7863301645435703 \nINFO:hicexplorer.iterativeCorrection:pass 265 Estimated time 0:1:10\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6382464685075324 \nINFO:hicexplorer.iterativeCorrection:pass 270 Estimated time 0:1:9\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.7315827201333889 \nINFO:hicexplorer.iterativeCorrection:pass 275 Estimated time 0:1:7\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6311106378031317 \nINFO:hicexplorer.iterativeCorrection:pass 280 Estimated time 0:1:6\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.680087958547833 \nINFO:hicexplorer.iterativeCorrection:pass 285 Estimated time 0:1:4\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6241332321985289 \nINFO:hicexplorer.iterativeCorrection:pass 290 Estimated time 0:1:3\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.6315647996490972 \nINFO:hicexplorer.iterativeCorrection:pass 295 Estimated time 0:1:1\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6173089122990445 \nINFO:hicexplorer.iterativeCorrection:pass 300 Estimated time 0:0:60\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.585763552799874 \nINFO:hicexplorer.iterativeCorrection:pass 305 Estimated time 0:0:58\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.6106325924406156 \nINFO:hicexplorer.iterativeCorrection:pass 310 Estimated time 0:0:57\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.542461669855522 \nINFO:hicexplorer.iterativeCorrection:pass 315 Estimated time 0:0:55\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.604099423659678 \nINFO:hicexplorer.iterativeCorrection:pass 320 Estimated time 0:0:54\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.501460167201333 \nINFO:hicexplorer.iterativeCorrection:pass 325 Estimated time 0:0:52\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5977047782747636 \nINFO:hicexplorer.iterativeCorrection:pass 330 Estimated time 0:0:51\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.4625805972958585 \nINFO:hicexplorer.iterativeCorrection:pass 335 Estimated time 0:0:49\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5914442358786719 \nINFO:hicexplorer.iterativeCorrection:pass 340 Estimated time 0:0:48\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.4256624739653576 \nINFO:hicexplorer.iterativeCorrection:pass 345 Estimated time 0:0:46\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5853135705702154 \nINFO:hicexplorer.iterativeCorrection:pass 350 Estimated time 0:0:45\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.3905610742802716 \nINFO:hicexplorer.iterativeCorrection:pass 355 Estimated time 0:0:43\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5793087392795395 \nINFO:hicexplorer.iterativeCorrection:pass 360 Estimated time 0:0:42\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.357145554466836 \nINFO:hicexplorer.iterativeCorrection:pass 365 Estimated time 0:0:40\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5734258710618427 \nINFO:hicexplorer.iterativeCorrection:pass 370 Estimated time 0:0:39\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.325297328884087 \nINFO:hicexplorer.iterativeCorrection:pass 375 Estimated time 0:0:37\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5676612572517955 \nINFO:hicexplorer.iterativeCorrection:pass 380 Estimated time 0:0:36\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.2949086703183554 \nINFO:hicexplorer.iterativeCorrection:pass 385 Estimated time 0:0:34\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5620113423856818 \nINFO:hicexplorer.iterativeCorrection:pass 390 Estimated time 0:0:33\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.2658814972347767 \nINFO:hicexplorer.iterativeCorrection:pass 395 Estimated time 0:0:31\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5564727158107357 \nINFO:hicexplorer.iterativeCorrection:pass 400 Estimated time 0:0:30\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.2381263195753522 \nINFO:hicexplorer.iterativeCorrection:pass 405 Estimated time 0:0:28\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5510421039116955 \nINFO:hicexplorer.iterativeCorrection:pass 410 Estimated time 0:0:27\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.2115613195100305 \nINFO:hicexplorer.iterativeCorrection:pass 415 Estimated time 0:0:25\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5457163628935884 \nINFO:hicexplorer.iterativeCorrection:pass 420 Estimated time 0:0:24\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.1861115474657904 \nINFO:hicexplorer.iterativeCorrection:pass 425 Estimated time 0:0:22\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5404924720673956 \nINFO:hicexplorer.iterativeCorrection:pass 430 Estimated time 0:0:21\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.1617082169612458 \nINFO:hicexplorer.iterativeCorrection:pass 435 Estimated time 0:0:19\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5353675275918063 \nINFO:hicexplorer.iterativeCorrection:pass 440 Estimated time 0:0:18\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.138288084403169 \nINFO:hicexplorer.iterativeCorrection:pass 445 Estimated time 0:0:16\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5303387366298477 \nINFO:hicexplorer.iterativeCorrection:pass 450 Estimated time 0:0:15\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.115792902168486 \nINFO:hicexplorer.iterativeCorrection:pass 455 Estimated time 0:0:13\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5254034118840032 \nINFO:hicexplorer.iterativeCorrection:pass 460 Estimated time 0:0:12\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.0941689350888613 \nINFO:hicexplorer.iterativeCorrection:pass 465 Estimated time 0:0:10\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5205589664775546 \nINFO:hicexplorer.iterativeCorrection:pass 470 Estimated time 0:0:9\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.073366531945267 \nINFO:hicexplorer.iterativeCorrection:pass 475 Estimated time 0:0:7\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5158029091534628 \nINFO:hicexplorer.iterativeCorrection:pass 480 Estimated time 0:0:6\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.05333974482263 \nINFO:hicexplorer.iterativeCorrection:pass 485 Estimated time 0:0:4\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5111328397651806 \nINFO:hicexplorer.iterativeCorrection:pass 490 Estimated time 0:0:3\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.0340459902146093 \nINFO:hicexplorer.iterativeCorrection:pass 495 Estimated time 0:0:1\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 0.5065464450364833 \nINFO:hicexplorer.iterativeCorrection:pass 500 Estimated time 0:0:0\nINFO:hicexplorer.iterativeCorrection:max delta - 1 = 1.0154457466418232 \n\n\n\n!hicInfo -m SRR6502335_norm0_1_corrected.h5\n\n# Matrix information file. Created with HiCExplorer's hicInfo version 3.7.5\nFile:   SRR6502335_norm0_1_corrected.h5\nSize:   298,615\nBin_length: 10000\nSum of matrix:  12588.40042256422\nChromosomes:length: NC_041754.1: 223616942 bp; NW_021160094.1: 26680 bp; NW_021160095.1: 32580 bp; NW_021160096.1: 33548 bp; NW_021160097.1: 37051 bp; NW_021160098.1: 39993 bp; NW_021160099.1: 40438 bp; NW_021160100.1: 43990 bp; NW_021160101.1: 48895 bp; NW_021160102.1: 50188 bp; NW_021160103.1: 51363 bp; NW_021160104.1: 35879 bp; NW_021160105.1: 54860 bp; NW_021160106.1: 55541 bp; NW_021160107.1: 55582 bp; NW_021160108.1: 59940 bp; NW_021160109.1: 82305 bp; NW_021160110.1: 118135 bp; NW_021160111.1: 133025 bp; NW_021160112.1: 52076 bp; NW_021160113.1: 116334 bp; NW_021160114.1: 65914 bp; NC_041755.1: 196197964 bp; NW_021160115.1: 30586 bp; NW_021160116.1: 35391 bp; NW_021160117.1: 40656 bp; NW_021160118.1: 51074 bp; NW_021160119.1: 48342 bp; NW_021160120.1: 52951 bp; NW_021160121.1: 86201 bp; NW_021160122.1: 92040 bp; NW_021160123.1: 52934 bp; NW_021160124.1: 54780 bp; NC_041756.1: 185288947 bp; NW_021160125.1: 25300 bp; NW_021160126.1: 29349 bp; NW_021160127.1: 29445 bp; NW_021160128.1: 29713 bp; NW_021160129.1: 36488 bp; NW_021160130.1: 29788 bp; NW_021160131.1: 42544 bp; NW_021160132.1: 43837 bp; NW_021160133.1: 51062 bp; NW_021160134.1: 54307 bp; NW_021160135.1: 54760 bp; NW_021160136.1: 59741 bp; NW_021160137.1: 70296 bp; NW_021160138.1: 72641 bp; NW_021160139.1: 94715 bp; NW_021160140.1: 130268 bp; NW_021160141.1: 134158 bp; NW_021160142.1: 47814 bp; NW_021160143.1: 30503 bp; NW_021160144.1: 1229889 bp; NC_041757.1: 169963040 bp; NW_021160145.1: 26875 bp; NW_021160146.1: 27011 bp; NW_021160147.1: 30037 bp; NW_021160148.1: 34319 bp; NW_021160149.1: 36085 bp; NW_021160150.1: 37498 bp; NW_021160151.1: 45706 bp; NW_021160152.1: 47138 bp; NW_021160153.1: 52252 bp; NW_021160154.1: 54371 bp; NW_021160155.1: 54530 bp; NW_021160156.1: 54679 bp; NW_021160157.1: 60005 bp; NW_021160158.1: 75365 bp; NW_021160159.1: 85793 bp; NW_021160160.1: 90302 bp; NW_021160161.1: 738392 bp; NC_041758.1: 187317192 bp; NW_021160162.1: 26685 bp; NW_021160163.1: 29791 bp; NW_021160164.1: 32640 bp; NW_021160165.1: 34222 bp; NW_021160166.1: 35517 bp; NW_021160167.1: 37838 bp; NW_021160168.1: 41651 bp; NW_021160169.1: 41841 bp; NW_021160170.1: 36351 bp; NW_021160171.1: 48938 bp; NW_021160172.1: 56442 bp; NW_021160173.1: 68769 bp; NW_021160174.1: 103593 bp; NW_021160175.1: 185143 bp; NW_021160176.1: 39093 bp; NC_041759.1: 179085566 bp; NW_021160177.1: 27603 bp; NW_021160178.1: 28241 bp; NW_021160179.1: 38876 bp; NW_021160180.1: 39393 bp; NW_021160181.1: 47332 bp; NW_021160182.1: 58084 bp; NW_021160183.1: 57998 bp; NW_021160184.1: 61300 bp; NW_021160185.1: 62126 bp; NW_021160186.1: 64491 bp; NW_021160187.1: 76406 bp; NW_021160188.1: 82950 bp; NW_021160189.1: 101334 bp; NW_021160190.1: 35732 bp; NC_041760.1: 169868564 bp; NW_021160191.1: 27859 bp; NW_021160192.1: 28798 bp; NW_021160193.1: 31162 bp; NW_021160194.1: 35826 bp; NW_021160195.1: 41366 bp; NW_021160196.1: 46105 bp; NW_021160197.1: 51812 bp; NW_021160198.1: 53832 bp; NW_021160199.1: 55920 bp; NW_021160200.1: 58999 bp; NW_021160201.1: 61446 bp; NW_021160202.1: 65479 bp; NW_021160203.1: 72206 bp; NW_021160204.1: 72836 bp; NW_021160205.1: 73247 bp; NW_021160206.1: 83758 bp; NW_021160207.1: 98820 bp; NW_021160208.1: 31768 bp; NC_041761.1: 145679320 bp; NW_021160209.1: 669983 bp; NW_021160210.1: 32194 bp; NW_021160211.1: 133312 bp; NW_021160212.1: 35273 bp; NW_021160213.1: 35782 bp; NW_021160214.1: 36168 bp; NW_021160215.1: 38408 bp; NW_021160216.1: 28604 bp; NW_021160217.1: 45844 bp; NW_021160218.1: 54299 bp; NW_021160219.1: 59871 bp; NW_021160220.1: 66719 bp; NW_021160221.1: 70864 bp; NW_021160222.1: 76376 bp; NW_021160223.1: 83314 bp; NW_021160224.1: 29721 bp; NW_021160225.1: 53832 bp; NC_041762.1: 134124166 bp; NW_021160226.1: 36031 bp; NW_021160227.1: 39733 bp; NW_021160228.1: 47833 bp; NW_021160229.1: 47980 bp; NW_021160230.1: 52082 bp; NW_021160231.1: 54497 bp; NW_021160232.1: 56716 bp; NW_021160233.1: 64642 bp; NW_021160234.1: 65546 bp; NW_021160235.1: 66711 bp; NW_021160236.1: 77799 bp; NW_021160237.1: 85724 bp; NW_021160238.1: 104447 bp; NW_021160239.1: 29162 bp; NW_021160240.1: 47554 bp; NC_041763.1: 99517758 bp; NW_021160241.1: 29490 bp; NW_021160242.1: 29551 bp; NW_021160243.1: 31521 bp; NW_021160244.1: 35220 bp; NW_021160245.1: 43762 bp; NW_021160246.1: 43668 bp; NW_021160247.1: 45264 bp; NW_021160248.1: 74751 bp; NW_021160249.1: 75692 bp; NW_021160250.1: 64301 bp; NW_021160251.1: 84426 bp; NW_021160252.1: 88635 bp; NW_021160253.1: 115549 bp; NW_021160254.1: 31739 bp; NC_041764.1: 133066086 bp; NW_021160255.1: 28076 bp; NW_021160256.1: 30974 bp; NW_021160257.1: 34094 bp; NW_021160258.1: 35836 bp; NW_021160259.1: 36993 bp; NW_021160260.1: 42603 bp; NW_021160261.1: 44793 bp; NW_021160262.1: 36901 bp; NW_021160263.1: 52625 bp; NW_021160264.1: 65186 bp; NW_021160265.1: 70089 bp; NW_021160266.1: 75026 bp; NW_021160267.1: 86584 bp; NW_021160268.1: 67726 bp; NC_041765.1: 130043856 bp; NW_021160269.1: 30461 bp; NW_021160270.1: 34828 bp; NW_021160271.1: 34758 bp; NW_021160272.1: 34993 bp; NW_021160273.1: 40200 bp; NW_021160274.1: 35195 bp; NW_021160275.1: 39160 bp; NC_041766.1: 108737130 bp; NW_021160276.1: 53508 bp; NW_021160277.1: 44853 bp; NW_021160278.1: 55639 bp; NW_021160279.1: 65990 bp; NW_021160280.1: 57542 bp; NW_021160281.1: 89870 bp; NW_021160282.1: 123715 bp; NC_041767.1: 128056306 bp; NW_021160283.1: 32550 bp; NW_021160284.1: 34793 bp; NW_021160285.1: 44605 bp; NW_021160286.1: 36893 bp; NW_021160287.1: 37575 bp; NW_021160288.1: 37831 bp; NW_021160289.1: 37661 bp; NW_021160290.1: 44420 bp; NW_021160291.1: 45281 bp; NW_021160292.1: 46256 bp; NW_021160293.1: 52830 bp; NW_021160294.1: 79630 bp; NW_021160295.1: 82543 bp; NW_021160296.1: 51233 bp; NW_021160297.1: 56227 bp; NW_021160298.1: 27245 bp; NW_021160299.1: 29900 bp; NW_021160300.1: 62273 bp; NC_041768.1: 113283604 bp; NW_021160301.1: 35411 bp; NW_021160302.1: 36170 bp; NW_021160303.1: 38712 bp; NW_021160304.1: 39777 bp; NW_021160305.1: 40306 bp; NW_021160306.1: 39466 bp; NW_021160307.1: 52687 bp; NW_021160308.1: 53925 bp; NW_021160309.1: 53926 bp; NW_021160310.1: 58262 bp; NW_021160311.1: 78748 bp; NW_021160312.1: 88419 bp; NW_021160313.1: 94627 bp; NW_021160314.1: 27791 bp; NC_041769.1: 79627064 bp; NW_021160315.1: 28177 bp; NW_021160316.1: 33884 bp; NW_021160317.1: 34745 bp; NW_021160318.1: 50438 bp; NW_021160319.1: 43437 bp; NW_021160320.1: 52552 bp; NW_021160321.1: 54058 bp; NW_021160322.1: 54071 bp; NW_021160323.1: 54349 bp; NW_021160324.1: 63611 bp; NW_021160325.1: 65150 bp; NW_021160326.1: 65140 bp; NW_021160327.1: 65979 bp; NW_021160328.1: 63325 bp; NW_021160329.1: 53701 bp; NW_021160330.1: 27229 bp; NC_041770.1: 95433459 bp; NW_021160331.1: 25947 bp; NW_021160332.1: 181889 bp; NW_021160333.1: 31091 bp; NW_021160334.1: 31166 bp; NW_021160335.1: 31184 bp; NW_021160336.1: 31250 bp; NW_021160337.1: 43610 bp; NW_021160338.1: 37523 bp; NW_021160339.1: 38541 bp; NW_021160340.1: 45093 bp; NW_021160341.1: 46306 bp; NW_021160342.1: 46347 bp; NW_021160343.1: 50375 bp; NW_021160344.1: 59026 bp; NW_021160345.1: 61686 bp; NW_021160346.1: 61907 bp; NW_021160347.1: 165269 bp; NW_021160348.1: 27125 bp; NW_021160349.1: 15354 bp; NC_041771.1: 74474043 bp; NW_021160350.1: 32300 bp; NW_021160351.1: 37145 bp; NW_021160352.1: 37664 bp; NW_021160353.1: 41176 bp; NW_021160354.1: 41974 bp; NW_021160355.1: 55554 bp; NW_021160356.1: 76316 bp; NC_041772.1: 58315233 bp; NW_021160357.1: 30450 bp; NW_021160358.1: 39455 bp; NW_021160359.1: 41056 bp; NW_021160360.1: 44182 bp; NW_021160361.1: 47076 bp; NW_021160362.1: 53667 bp; NW_021160363.1: 60928 bp; NW_021160364.1: 61817 bp; NW_021160365.1: 66433 bp; NW_021160366.1: 71257 bp; NW_021160367.1: 76390 bp; NW_021160368.1: 78939 bp; NW_021160369.1: 81779 bp; NW_021160370.1: 89493 bp; NW_021160371.1: 90411 bp; NW_021160372.1: 134439 bp; NW_021160373.1: 58152 bp; NW_021160374.1: 124323 bp; NW_021160375.1: 183828 bp; NW_021160376.1: 862827 bp; NC_041773.1: 77137495 bp; NW_021160377.1: 26276 bp; NW_021160378.1: 34752 bp; NW_021160379.1: 36919 bp; NW_021160380.1: 64383 bp; NC_041774.1: 153388924 bp; NW_021160381.1: 48696 bp; NW_021160382.1: 50511 bp; NW_021160383.1: 68997 bp; NW_021160384.1: 79627 bp; NC_027914.1: 11753682 bp; NW_021160385.1: 16018 bp; NW_021160386.1: 16072 bp; NW_021160387.1: 15993 bp; NW_021160388.1: 16197 bp; NW_021160389.1: 16074 bp; NW_021160390.1: 16042 bp; NW_021160391.1: 16077 bp; NW_021160392.1: 15853 bp; NW_021160393.1: 15981 bp; NW_021160394.1: 16244 bp; NW_021160395.1: 32289 bp; NW_021160396.1: 16160 bp; NW_021160397.1: 16187 bp; NW_021160398.1: 16363 bp; NW_021160399.1: 16120 bp; NW_021160400.1: 16055 bp; NW_021160401.1: 16274 bp; NW_021160402.1: 16364 bp; NW_021160403.1: 16225 bp; NW_021160404.1: 16356 bp; NW_021160405.1: 16255 bp; NW_021160406.1: 27321 bp; NW_021160407.1: 16236 bp; NW_021160408.1: 16356 bp; NW_021160409.1: 16461 bp; NW_021160410.1: 16455 bp; NW_021160411.1: 16383 bp; NW_021160412.1: 16352 bp; NW_021160413.1: 15013 bp; NW_021160414.1: 16280 bp; NW_021160415.1: 16551 bp; NW_021160416.1: 16444 bp; NW_021160417.1: 56609 bp; NW_021160418.1: 16439 bp; NW_021160419.1: 16412 bp; NW_021160420.1: 16632 bp; NW_021160421.1: 16299 bp; NW_021160422.1: 16406 bp; NW_021160423.1: 16596 bp; NW_021160424.1: 16436 bp; NW_021160425.1: 16779 bp; NW_021160426.1: 16773 bp; NW_021160427.1: 13224 bp; NW_021160428.1: 14311 bp; NW_021160429.1: 16475 bp; NW_021160430.1: 16734 bp; NW_021160431.1: 15042 bp; NW_021160432.1: 16653 bp; NW_021160433.1: 16729 bp; NW_021160434.1: 16730 bp; NW_021160435.1: 16370 bp; NW_021160436.1: 16749 bp; NW_021160437.1: 16651 bp; NW_021160438.1: 16692 bp; NW_021160439.1: 24869 bp; NW_021160440.1: 16634 bp; NW_021160441.1: 16844 bp; NW_021160442.1: 16892 bp; NW_021160443.1: 16406 bp; NW_021160444.1: 16960 bp; NW_021160445.1: 16925 bp; NW_021160446.1: 16946 bp; NW_021160447.1: 17035 bp; NW_021160448.1: 16874 bp; NW_021160449.1: 16960 bp; NW_021160450.1: 15132 bp; NW_021160451.1: 17048 bp; NW_021160452.1: 16930 bp; NW_021160453.1: 16900 bp; NW_021160454.1: 16782 bp; NW_021160455.1: 16399 bp; NW_021160456.1: 17005 bp; NW_021160457.1: 16760 bp; NW_021160458.1: 16880 bp; NW_021160459.1: 16975 bp; NW_021160460.1: 13066 bp; NW_021160461.1: 17407 bp; NW_021160462.1: 17041 bp; NW_021160463.1: 17431 bp; NW_021160464.1: 17069 bp; NW_021160465.1: 17372 bp; NW_021160466.1: 25112 bp; NW_021160467.1: 16450 bp; NW_021160468.1: 16857 bp; NW_021160469.1: 17184 bp; NW_021160470.1: 17258 bp; NW_021160471.1: 17214 bp; NW_021160472.1: 14066 bp; NW_021160473.1: 17331 bp; NW_021160474.1: 17274 bp; NW_021160475.1: 17243 bp; NW_021160476.1: 17185 bp; NW_021160477.1: 16695 bp; NW_021160478.1: 17197 bp; NW_021160479.1: 17342 bp; NW_021160480.1: 17231 bp; NW_021160481.1: 17498 bp; NW_021160482.1: 17275 bp; NW_021160483.1: 29983 bp; NW_021160484.1: 17398 bp; NW_021160485.1: 17418 bp; NW_021160486.1: 17582 bp; NW_021160487.1: 17409 bp; NW_021160488.1: 17349 bp; NW_021160489.1: 17478 bp; NW_021160490.1: 17439 bp; NW_021160491.1: 17634 bp; NW_021160492.1: 17843 bp; NW_021160493.1: 17802 bp; NW_021160494.1: 31063 bp; NW_021160495.1: 823856 bp; NW_021160496.1: 17707 bp; NW_021160497.1: 9903 bp; NW_021160498.1: 17583 bp; NW_021160499.1: 17715 bp; NW_021160500.1: 17761 bp; NW_021160501.1: 17739 bp; NW_021160502.1: 17822 bp; NW_021160503.1: 17886 bp; NW_021160504.1: 17447 bp; NW_021160505.1: 17932 bp; NW_021160506.1: 37152 bp; NW_021160507.1: 17654 bp; NW_021160508.1: 17964 bp; NW_021160509.1: 17871 bp; NW_021160510.1: 17895 bp; NW_021160511.1: 18023 bp; NW_021160512.1: 17833 bp; NW_021160513.1: 17917 bp; NW_021160514.1: 18018 bp; NW_021160515.1: 17912 bp; NW_021160516.1: 17825 bp; NW_021160517.1: 45053 bp; NW_021160518.1: 17844 bp; NW_021160519.1: 25372 bp; NW_021160520.1: 17956 bp; NW_021160521.1: 18075 bp; NW_021160522.1: 17870 bp; NW_021160523.1: 18079 bp; NW_021160524.1: 18166 bp; NW_021160525.1: 18142 bp; NW_021160526.1: 18128 bp; NW_021160527.1: 18335 bp; NW_021160528.1: 30841 bp; NW_021160529.1: 18029 bp; NW_021160530.1: 18339 bp; NW_021160531.1: 18298 bp; NW_021160532.1: 17970 bp; NW_021160533.1: 4886 bp; NW_021160534.1: 17870 bp; NW_021160535.1: 18327 bp; NW_021160536.1: 18353 bp; NW_021160537.1: 18435 bp; NW_021160538.1: 18512 bp; NW_021160539.1: 21919 bp; NW_021160540.1: 18498 bp; NW_021160541.1: 18217 bp; NW_021160542.1: 18414 bp; NW_021160543.1: 18158 bp; NW_021160544.1: 18591 bp; NW_021160545.1: 18512 bp; NW_021160546.1: 18667 bp; NW_021160547.1: 18610 bp; NW_021160548.1: 18647 bp; NW_021160549.1: 18566 bp; NW_021160550.1: 13685 bp; NW_021160551.1: 17982 bp; NW_021160552.1: 18464 bp; NW_021160553.1: 18792 bp; NW_021160554.1: 18592 bp; NW_021160555.1: 18898 bp; NW_021160556.1: 18723 bp; NW_021160557.1: 18775 bp; NW_021160558.1: 18888 bp; NW_021160559.1: 18851 bp; NW_021160560.1: 18781 bp; NW_021160561.1: 17329 bp; NW_021160562.1: 18779 bp; NW_021160563.1: 18436 bp; NW_021160564.1: 19001 bp; NW_021160565.1: 19096 bp; NW_021160566.1: 19092 bp; NW_021160567.1: 19055 bp; NW_021160568.1: 18522 bp; NW_021160569.1: 19175 bp; NW_021160570.1: 18878 bp; NW_021160571.1: 18966 bp; NW_021160572.1: 30668 bp; NW_021160573.1: 19035 bp; NW_021160574.1: 18898 bp; NW_021160575.1: 18602 bp; NW_021160576.1: 19066 bp; NW_021160577.1: 18466 bp; NW_021160578.1: 19017 bp; NW_021160579.1: 19182 bp; NW_021160580.1: 19023 bp; NW_021160581.1: 19094 bp; NW_021160582.1: 19115 bp; NW_021160583.1: 14050 bp; NW_021160584.1: 19074 bp; NW_021160585.1: 19199 bp; NW_021160586.1: 19104 bp; NW_021160587.1: 19229 bp; NW_021160588.1: 19321 bp; NW_021160589.1: 19224 bp; NW_021160590.1: 18933 bp; NW_021160591.1: 19468 bp; NW_021160592.1: 19333 bp; NW_021160593.1: 19521 bp; NW_021160594.1: 23168 bp; NW_021160595.1: 19531 bp; NW_021160596.1: 18714 bp; NW_021160597.1: 19321 bp; NW_021160598.1: 19626 bp; NW_021160599.1: 19589 bp; NW_021160600.1: 19477 bp; NW_021160601.1: 19413 bp; NW_021160602.1: 19316 bp; NW_021160603.1: 19921 bp; NW_021160604.1: 19279 bp; NW_021160605.1: 26327 bp; NW_021160606.1: 1005795 bp; NW_021160607.1: 19622 bp; NW_021160608.1: 19734 bp; NW_021160609.1: 19629 bp; NW_021160610.1: 19448 bp; NW_021160611.1: 19615 bp; NW_021160612.1: 19821 bp; NW_021160613.1: 19395 bp; NW_021160614.1: 19863 bp; NW_021160615.1: 19786 bp; NW_021160616.1: 19715 bp; NW_021160617.1: 45369 bp; NW_021160618.1: 19805 bp; NW_021160619.1: 20031 bp; NW_021160620.1: 19816 bp; NW_021160621.1: 19778 bp; NW_021160622.1: 20070 bp; NW_021160623.1: 19785 bp; NW_021160624.1: 19783 bp; NW_021160625.1: 19793 bp; NW_021160626.1: 19837 bp; NW_021160627.1: 18955 bp; NW_021160628.1: 17118 bp; NW_021160629.1: 19901 bp; NW_021160630.1: 20090 bp; NW_021160631.1: 20077 bp; NW_021160632.1: 19990 bp; NW_021160633.1: 19954 bp; NW_021160634.1: 20187 bp; NW_021160635.1: 20086 bp; NW_021160636.1: 20106 bp; NW_021160637.1: 20216 bp; NW_021160638.1: 20150 bp; NW_021160639.1: 31988 bp; NW_021160640.1: 20147 bp; NW_021160641.1: 20246 bp; NW_021160642.1: 20482 bp; NW_021160643.1: 20534 bp; NW_021160644.1: 20198 bp; NW_021160645.1: 20467 bp; NW_021160646.1: 20493 bp; NW_021160647.1: 20408 bp; NW_021160648.1: 20428 bp; NW_021160649.1: 20368 bp; NW_021160650.1: 16400 bp; NW_021160651.1: 20362 bp; NW_021160652.1: 20339 bp; NW_021160653.1: 20634 bp; NW_021160654.1: 20501 bp; NW_021160655.1: 20574 bp; NW_021160656.1: 20461 bp; NW_021160657.1: 20246 bp; NW_021160658.1: 20241 bp; NW_021160659.1: 20534 bp; NW_021160660.1: 21334 bp; NW_021160661.1: 36744 bp; NW_021160662.1: 20529 bp; NW_021160663.1: 20559 bp; NW_021160664.1: 20658 bp; NW_021160665.1: 20613 bp; NW_021160666.1: 20822 bp; NW_021160667.1: 20849 bp; NW_021160668.1: 20935 bp; NW_021160669.1: 20668 bp; NW_021160670.1: 20900 bp; NW_021160671.1: 20718 bp; NW_021160672.1: 30183 bp; NW_021160673.1: 20657 bp; NW_021160674.1: 20802 bp; NW_021160675.1: 20879 bp; NW_021160676.1: 21004 bp; NW_021160677.1: 20886 bp; NW_021160678.1: 20778 bp; NW_021160679.1: 20860 bp; NW_021160680.1: 20707 bp; NW_021160681.1: 21022 bp; NW_021160682.1: 20725 bp; NW_021160683.1: 23684 bp; NW_021160684.1: 20961 bp; NW_021160685.1: 21045 bp; NW_021160686.1: 20908 bp; NW_021160687.1: 20771 bp; NW_021160688.1: 20419 bp; NW_021160689.1: 20607 bp; NW_021160690.1: 21064 bp; NW_021160691.1: 20966 bp; NW_021160692.1: 20986 bp; NW_021160693.1: 20465 bp; NW_021160694.1: 22503 bp; NW_021160695.1: 21235 bp; NW_021160696.1: 21230 bp; NW_021160697.1: 21296 bp; NW_021160698.1: 21211 bp; NW_021160699.1: 21225 bp; NW_021160700.1: 21443 bp; NW_021160701.1: 21216 bp; NW_021160702.1: 20977 bp; NW_021160703.1: 21436 bp; NW_021160704.1: 21339 bp; NW_021160705.1: 23258 bp; NW_021160706.1: 21593 bp; NW_021160707.1: 21609 bp; NW_021160708.1: 21287 bp; NW_021160709.1: 21524 bp; NW_021160710.1: 21606 bp; NW_021160711.1: 21464 bp; NW_021160712.1: 21743 bp; NW_021160713.1: 21497 bp; NW_021160714.1: 21711 bp; NW_021160715.1: 21490 bp; NW_021160716.1: 63953 bp; NW_021160717.1: 21569 bp; NW_021160718.1: 21401 bp; NW_021160719.1: 21484 bp; NW_021160720.1: 21743 bp; NW_021160721.1: 21665 bp; NW_021160722.1: 21527 bp; NW_021160723.1: 21571 bp; NW_021160724.1: 21865 bp; NW_021160725.1: 21649 bp; NW_021160726.1: 21748 bp; NW_021160727.1: 23130 bp; NW_021160728.1: 21366 bp; NW_021160729.1: 21872 bp; NW_021160730.1: 21887 bp; NW_021160731.1: 21524 bp; NW_021160732.1: 21553 bp; NW_021160733.1: 21548 bp; NW_021160734.1: 21766 bp; NW_021160735.1: 21725 bp; NW_021160736.1: 21798 bp; NW_021160737.1: 21776 bp; NW_021160738.1: 25308 bp; NW_021160739.1: 21868 bp; NW_021160740.1: 19723 bp; NW_021160741.1: 22083 bp; NW_021160742.1: 21314 bp; NW_021160743.1: 22115 bp; NW_021160744.1: 22112 bp; NW_021160745.1: 22087 bp; NW_021160746.1: 15615 bp; NW_021160747.1: 22160 bp; NW_021160748.1: 22295 bp; NW_021160749.1: 41788 bp; NW_021160750.1: 12751 bp; NW_021160751.1: 22356 bp; NW_021160752.1: 22350 bp; NW_021160753.1: 21971 bp; NW_021160754.1: 22417 bp; NW_021160755.1: 22262 bp; NW_021160756.1: 22075 bp; NW_021160757.1: 22132 bp; NW_021160758.1: 21975 bp; NW_021160759.1: 22284 bp; NW_021160760.1: 29374 bp; NW_021160761.1: 22427 bp; NW_021160762.1: 22607 bp; NW_021160763.1: 22136 bp; NW_021160764.1: 22325 bp; NW_021160765.1: 22088 bp; NW_021160766.1: 22489 bp; NW_021160767.1: 21513 bp; NW_021160768.1: 22590 bp; NW_021160769.1: 22234 bp; NW_021160770.1: 22632 bp; NW_021160771.1: 23071 bp; NW_021160772.1: 22676 bp; NW_021160773.1: 22333 bp; NW_021160774.1: 22820 bp; NW_021160775.1: 21482 bp; NW_021160776.1: 22690 bp; NW_021160777.1: 22755 bp; NW_021160778.1: 22884 bp; NW_021160779.1: 23055 bp; NW_021160780.1: 22842 bp; NW_021160781.1: 22941 bp; NW_021160782.1: 18782 bp; NW_021160783.1: 23171 bp; NW_021160784.1: 22867 bp; NW_021160785.1: 22632 bp; NW_021160786.1: 22775 bp; NW_021160787.1: 23152 bp; NW_021160788.1: 22922 bp; NW_021160789.1: 22503 bp; NW_021160790.1: 23032 bp; NW_021160791.1: 23100 bp; NW_021160792.1: 20775 bp; NW_021160793.1: 19205 bp; NW_021160794.1: 23266 bp; NW_021160795.1: 23004 bp; NW_021160796.1: 21665 bp; NW_021160797.1: 22924 bp; NW_021160798.1: 23409 bp; NW_021160799.1: 23642 bp; NW_021160800.1: 23391 bp; NW_021160801.1: 22177 bp; NW_021160802.1: 23309 bp; NW_021160803.1: 23292 bp; NW_021160804.1: 42279 bp; NW_021160805.1: 23446 bp; NW_021160806.1: 23508 bp; NW_021160807.1: 23436 bp; NW_021160808.1: 23521 bp; NW_021160809.1: 23573 bp; NW_021160810.1: 25708 bp; NW_021160811.1: 23453 bp; NW_021160812.1: 23338 bp; NW_021160813.1: 23447 bp; NW_021160814.1: 23725 bp; NW_021160815.1: 68025 bp; NW_021160816.1: 23193 bp; NW_021160817.1: 24347 bp; NW_021160818.1: 25323 bp; NW_021160819.1: 23808 bp; NW_021160820.1: 24050 bp; NW_021160821.1: 23917 bp; NW_021160822.1: 24122 bp; NW_021160823.1: 24029 bp; NW_021160824.1: 23823 bp; NW_021160825.1: 23843 bp; NW_021160826.1: 51428 bp; NW_021160827.1: 733739 bp; NW_021160828.1: 24117 bp; NW_021160829.1: 24244 bp; NW_021160830.1: 24497 bp; NW_021160831.1: 24203 bp; NW_021160832.1: 24079 bp; NW_021160833.1: 23564 bp; NW_021160834.1: 24117 bp; NW_021160835.1: 16995 bp; NW_021160836.1: 23941 bp; NW_021160837.1: 22593 bp; NW_021160838.1: 25136 bp; NW_021160839.1: 24518 bp; NW_021160840.1: 23988 bp; NW_021160841.1: 23835 bp; NW_021160842.1: 24450 bp; NW_021160843.1: 23998 bp; NW_021160844.1: 24299 bp; NW_021160845.1: 24216 bp; NW_021160846.1: 24238 bp; NW_021160847.1: 22859 bp; NW_021160848.1: 24307 bp; NW_021160849.1: 12570 bp; NW_021160850.1: 24363 bp; NW_021160851.1: 24623 bp; NW_021160852.1: 24760 bp; NW_021160853.1: 24310 bp; NW_021160854.1: 24717 bp; NW_021160855.1: 24805 bp; NW_021160856.1: 24527 bp; NW_021160857.1: 24541 bp; NW_021160858.1: 24566 bp; NW_021160859.1: 24741 bp; NW_021160860.1: 39850 bp; NW_021160861.1: 24747 bp; NW_021160862.1: 24285 bp; NW_021160863.1: 24714 bp; NW_021160864.1: 24895 bp; NW_021160865.1: 24789 bp; NW_021160866.1: 24816 bp; NW_021160867.1: 24825 bp; NW_021160868.1: 24426 bp; NW_021160869.1: 24994 bp; NW_021160870.1: 24709 bp; NW_021160871.1: 46859 bp; NW_021160872.1: 24800 bp; NW_021160873.1: 24862 bp; NW_021160874.1: 24990 bp; NW_021160875.1: 25175 bp; NW_021160876.1: 24652 bp; NW_021160877.1: 25176 bp; NW_021160878.1: 25198 bp; NW_021160879.1: 25199 bp; NW_021160880.1: 25292 bp; NW_021160881.1: 25113 bp; NW_021160882.1: 18857 bp; NW_021160883.1: 25049 bp; NW_021160884.1: 25169 bp; NW_021160885.1: 25192 bp; NW_021160886.1: 25188 bp; NW_021160887.1: 25142 bp; NW_021160888.1: 25299 bp; NW_021160889.1: 24083 bp; NW_021160890.1: 25247 bp; NW_021160891.1: 25234 bp; NW_021160892.1: 25507 bp; NW_021160893.1: 32501 bp; NW_021160894.1: 25348 bp; NW_021160895.1: 25389 bp; NW_021160896.1: 25176 bp; NW_021160897.1: 25314 bp; NW_021160898.1: 25232 bp; NW_021160899.1: 25535 bp; NW_021160900.1: 25245 bp; NW_021160901.1: 25530 bp; NW_021160902.1: 25360 bp; NW_021160903.1: 26486 bp; NW_021160904.1: 2040 bp; NW_021160905.1: 25508 bp; NW_021160906.1: 25392 bp; NW_021160907.1: 25025 bp; NW_021160908.1: 25719 bp; NW_021160909.1: 25964 bp; NW_021160910.1: 25580 bp; NW_021160911.1: 25781 bp; NW_021160912.1: 25922 bp; NW_021160913.1: 25754 bp; NW_021160914.1: 28282 bp; NW_021160915.1: 25683 bp; NW_021160916.1: 25784 bp; NW_021160917.1: 25136 bp; NW_021160918.1: 25729 bp; NW_021160919.1: 26063 bp; NW_021160920.1: 25859 bp; NW_021160921.1: 26245 bp; NW_021160922.1: 25256 bp; NW_021160923.1: 26161 bp; NW_021160924.1: 23900 bp; NW_021160925.1: 26085 bp; NW_021160926.1: 26170 bp; NW_021160927.1: 26384 bp; NW_021160928.1: 26179 bp; NW_021160929.1: 26234 bp; NW_021160930.1: 23724 bp; NW_021160931.1: 26222 bp; NW_021160932.1: 26478 bp; NW_021160933.1: 25881 bp; NW_021160934.1: 26337 bp; NW_021160935.1: 1093 bp; NW_021160936.1: 26449 bp; NW_021160937.1: 26160 bp; NW_021160938.1: 26233 bp; NW_021160939.1: 26290 bp; NW_021160940.1: 26453 bp; NW_021160941.1: 26293 bp; NW_021160942.1: 25203 bp; NW_021160943.1: 25985 bp; NW_021160944.1: 26378 bp; NW_021160945.1: 1174 bp; NW_021160946.1: 26473 bp; NW_021160947.1: 6749 bp; NW_021160948.1: 26181 bp; NW_021160949.1: 18127 bp; NW_021160950.1: 26491 bp; NW_021160951.1: 26514 bp; NW_021160952.1: 26228 bp; NW_021160953.1: 26770 bp; NW_021160954.1: 26252 bp; NW_021160955.1: 26547 bp; NW_021160956.1: 1709 bp; NW_021160957.1: 26692 bp; NW_021160958.1: 26789 bp; NW_021160959.1: 26116 bp; NW_021160960.1: 26680 bp; NW_021160961.1: 26760 bp; NW_021160962.1: 26653 bp; NW_021160963.1: 26895 bp; NW_021160964.1: 26806 bp; NW_021160965.1: 1742 bp; NW_021160966.1: 26776 bp; NW_021160967.1: 26713 bp; NW_021160968.1: 26834 bp; NW_021160969.1: 26502 bp; NW_021160970.1: 27252 bp; NW_021160971.1: 27150 bp; NW_021160972.1: 27461 bp; NW_021160973.1: 27101 bp; NW_021160974.1: 1759 bp; NW_021160975.1: 27350 bp; NW_021160976.1: 27218 bp; NW_021160977.1: 27092 bp; NW_021160978.1: 27325 bp; NW_021160979.1: 27550 bp; NW_021160980.1: 27495 bp; NW_021160981.1: 27521 bp; NW_021160982.1: 27688 bp; NW_021160983.1: 27276 bp; NW_021160984.1: 16890 bp; NW_021160985.1: 1889 bp; NW_021160986.1: 27335 bp; NW_021160987.1: 27365 bp; NW_021160988.1: 27619 bp; NW_021160989.1: 27683 bp; NW_021160990.1: 27613 bp; NW_021160991.1: 27810 bp; NW_021160992.1: 27862 bp; NW_021160993.1: 26903 bp; NW_021160994.1: 27684 bp; NW_021160995.1: 1920 bp; NW_021160996.1: 27923 bp; NW_021160997.1: 27858 bp; NW_021160998.1: 27833 bp; NW_021160999.1: 28037 bp; NW_021161000.1: 27132 bp; NW_021161001.1: 27602 bp; NW_021161002.1: 27737 bp; NW_021161003.1: 26674 bp; NW_021161004.1: 27424 bp; NW_021161005.1: 2024 bp; NW_021161006.1: 28016 bp; NW_021161007.1: 28393 bp; NW_021161008.1: 27967 bp; NW_021161009.1: 27987 bp; NW_021161010.1: 28119 bp; NW_021161011.1: 27986 bp; NW_021161012.1: 10683 bp; NW_021161013.1: 28141 bp; NW_021161014.1: 2116 bp; NW_021161015.1: 28192 bp; NW_021161016.1: 28508 bp; NW_021161017.1: 28332 bp; NW_021161018.1: 28406 bp; NW_021161019.1: 28581 bp; NW_021161020.1: 28580 bp; NW_021161021.1: 28433 bp; NW_021161022.1: 28450 bp; NW_021161023.1: 28652 bp; NW_021161024.1: 2140 bp; NW_021161025.1: 28569 bp; NW_021161026.1: 27892 bp; NW_021161027.1: 28448 bp; NW_021161028.1: 26340 bp; NW_021161029.1: 27694 bp; NW_021161030.1: 28839 bp; NW_021161031.1: 28577 bp; NW_021161032.1: 28691 bp; NW_021161033.1: 28671 bp; NW_021161034.1: 29285 bp; NW_021161035.1: 2185 bp; NW_021161036.1: 28620 bp; NW_021161037.1: 29085 bp; NW_021161038.1: 27067 bp; NW_021161039.1: 28995 bp; NW_021161040.1: 29066 bp; NW_021161041.1: 28505 bp; NW_021161042.1: 28932 bp; NW_021161043.1: 29161 bp; NW_021161044.1: 29213 bp; NW_021161045.1: 2297 bp; NW_021161046.1: 29506 bp; NW_021161047.1: 28852 bp; NW_021161048.1: 29266 bp; NW_021161049.1: 29345 bp; NW_021161050.1: 29502 bp; NW_021161051.1: 29162 bp; NW_021161052.1: 28803 bp; NW_021161053.1: 29577 bp; NW_021161054.1: 2340 bp; NW_021161055.1: 28699 bp; NW_021161056.1: 28212 bp; NW_021161057.1: 29435 bp; NW_021161058.1: 29528 bp; NW_021161059.1: 29771 bp; NW_021161060.1: 29657 bp; NW_021161061.1: 29093 bp; NW_021161062.1: 29624 bp; NW_021161063.1: 2365 bp; NW_021161064.1: 29586 bp; NW_021161065.1: 29740 bp; NW_021161066.1: 29837 bp; NW_021161067.1: 29752 bp; NW_021161068.1: 29118 bp; NW_021161069.1: 29675 bp; NW_021161070.1: 29750 bp; NW_021161071.1: 29300 bp; NW_021161072.1: 2516 bp; NW_021161073.1: 29295 bp; NW_021161074.1: 29596 bp; NW_021161075.1: 30231 bp; NW_021161076.1: 30239 bp; NW_021161077.1: 29849 bp; NW_021161078.1: 29588 bp; NW_021161079.1: 29540 bp; NW_021161080.1: 30244 bp; NW_021161081.1: 30172 bp; NW_021161082.1: 2556 bp; NW_021161083.1: 30191 bp; NW_021161084.1: 23050 bp; NW_021161085.1: 29650 bp; NW_021161086.1: 29876 bp; NW_021161087.1: 29002 bp; NW_021161088.1: 30329 bp; NW_021161089.1: 30313 bp; NW_021161090.1: 30398 bp; NW_021161091.1: 30596 bp; NW_021161092.1: 30232 bp; NW_021161093.1: 2672 bp; NW_021161094.1: 30602 bp; NW_021161095.1: 30619 bp; NW_021161096.1: 30316 bp; NW_021161097.1: 30446 bp; NW_021161098.1: 30375 bp; NW_021161099.1: 30665 bp; NW_021161100.1: 20885 bp; NW_021161101.1: 30158 bp; NW_021161102.1: 30428 bp; NW_021161103.1: 2665 bp; NW_021161104.1: 30646 bp; NW_021161105.1: 30676 bp; NW_021161106.1: 30650 bp; NW_021161107.1: 30769 bp; NW_021161108.1: 29982 bp; NW_021161109.1: 30863 bp; NW_021161110.1: 26259 bp; NW_021161111.1: 30828 bp; NW_021161112.1: 2664 bp; NW_021161113.1: 33726 bp; NW_021161114.1: 30849 bp; NW_021161115.1: 30830 bp; NW_021161116.1: 31047 bp; NW_021161117.1: 31119 bp; NW_021161118.1: 30971 bp; NW_021161119.1: 31084 bp; NW_021161120.1: 30924 bp; NW_021161121.1: 31149 bp; NW_021161122.1: 3089 bp; NW_021161123.1: 31014 bp; NW_021161124.1: 31240 bp; NW_021161125.1: 30712 bp; NW_021161126.1: 31675 bp; NW_021161127.1: 30445 bp; NW_021161128.1: 10913 bp; NW_021161129.1: 31249 bp; NW_021161130.1: 31194 bp; NW_021161131.1: 31251 bp; NW_021161132.1: 3070 bp; NW_021161133.1: 148587 bp; NW_021161134.1: 31182 bp; NW_021161135.1: 31244 bp; NW_021161136.1: 31235 bp; NW_021161137.1: 31345 bp; NW_021161138.1: 31194 bp; NW_021161139.1: 29939 bp; NW_021161140.1: 31452 bp; NW_021161141.1: 2769 bp; NW_021161142.1: 31505 bp; NW_021161143.1: 31449 bp; NW_021161144.1: 31568 bp; NW_021161145.1: 31635 bp; NW_021161146.1: 31814 bp; NW_021161147.1: 31685 bp; NW_021161148.1: 31679 bp; NW_021161149.1: 31632 bp; NW_021161150.1: 31566 bp; NW_021161151.1: 2774 bp; NW_021161152.1: 31470 bp; NW_021161153.1: 22131 bp; NW_021161154.1: 31995 bp; NW_021161155.1: 30560 bp; NW_021161156.1: 31680 bp; NW_021161157.1: 31836 bp; NW_021161158.1: 31109 bp; NW_021161159.1: 31865 bp; NW_021161160.1: 31969 bp; NW_021161161.1: 32018 bp; NW_021161162.1: 2823 bp; NW_021161163.1: 31643 bp; NW_021161164.1: 32320 bp; NW_021161165.1: 32021 bp; NW_021161166.1: 32498 bp; NW_021161167.1: 29258 bp; NW_021161168.1: 30211 bp; NW_021161169.1: 32394 bp; NW_021161170.1: 32431 bp; NW_021161171.1: 32084 bp; NW_021161172.1: 2946 bp; NW_021161173.1: 32241 bp; NW_021161174.1: 32333 bp; NW_021161175.1: 32630 bp; NW_021161176.1: 32442 bp; NW_021161177.1: 32337 bp; NW_021161178.1: 32508 bp; NW_021161179.1: 32583 bp; NW_021161180.1: 32752 bp; NW_021161181.1: 3001 bp; NW_021161182.1: 32327 bp; NW_021161183.1: 32827 bp; NW_021161184.1: 29553 bp; NW_021161185.1: 31154 bp; NW_021161186.1: 32711 bp; NW_021161187.1: 32581 bp; NW_021161188.1: 33098 bp; NW_021161189.1: 3087 bp; NW_021161190.1: 31402 bp; NW_021161191.1: 32784 bp; NW_021161192.1: 33169 bp; NW_021161193.1: 32226 bp; NW_021161194.1: 32999 bp; NW_021161195.1: 32095 bp; NW_021161196.1: 32911 bp; NW_021161197.1: 32817 bp; NW_021161198.1: 36478 bp; NW_021161199.1: 3090 bp; NW_021161200.1: 32957 bp; NW_021161201.1: 33207 bp; NW_021161202.1: 27618 bp; NW_021161203.1: 32805 bp; NW_021161204.1: 33471 bp; NW_021161205.1: 33381 bp; NW_021161206.1: 33308 bp; NW_021161207.1: 32271 bp; NW_021161208.1: 33068 bp; NW_021161209.1: 33103 bp; NW_021161210.1: 3229 bp; NW_021161211.1: 33367 bp; NW_021161212.1: 27683 bp; NW_021161213.1: 33280 bp; NW_021161214.1: 33565 bp; NW_021161215.1: 33721 bp; NW_021161216.1: 33292 bp; NW_021161217.1: 33492 bp; NW_021161218.1: 33710 bp; NW_021161219.1: 33619 bp; NW_021161220.1: 3323 bp; NW_021161221.1: 33830 bp; NW_021161222.1: 32314 bp; NW_021161223.1: 33841 bp; NW_021161224.1: 33706 bp; NW_021161225.1: 33898 bp; NW_021161226.1: 33332 bp; NW_021161227.1: 34094 bp; NW_021161228.1: 33819 bp; NW_021161229.1: 34168 bp; NW_021161230.1: 3399 bp; NW_021161231.1: 33951 bp; NW_021161232.1: 34141 bp; NW_021161233.1: 34057 bp; NW_021161234.1: 34006 bp; NW_021161235.1: 34160 bp; NW_021161236.1: 34150 bp; NW_021161237.1: 34015 bp; NW_021161238.1: 3431 bp; NW_021161239.1: 28232 bp; NW_021161240.1: 19516 bp; NW_021161241.1: 34288 bp; NW_021161242.1: 34412 bp; NW_021161243.1: 16967 bp; NW_021161244.1: 34349 bp; NW_021161245.1: 34479 bp; NW_021161246.1: 34127 bp; NW_021161247.1: 34283 bp; NW_021161248.1: 3447 bp; NW_021161249.1: 34585 bp; NW_021161250.1: 34871 bp; NW_021161251.1: 29805 bp; NW_021161252.1: 34538 bp; NW_021161253.1: 34660 bp; NW_021161254.1: 34617 bp; NW_021161255.1: 34693 bp; NW_021161256.1: 35151 bp; NW_021161257.1: 3450 bp; NW_021161258.1: 34885 bp; NW_021161259.1: 34818 bp; NW_021161260.1: 34807 bp; NW_021161261.1: 34955 bp; NW_021161262.1: 26739 bp; NW_021161263.1: 34834 bp; NW_021161264.1: 35035 bp; NW_021161265.1: 35110 bp; NW_021161266.1: 3533 bp; NW_021161267.1: 35291 bp; NW_021161268.1: 34918 bp; NW_021161269.1: 35097 bp; NW_021161270.1: 35404 bp; NW_021161271.1: 33189 bp; NW_021161272.1: 35294 bp; NW_021161273.1: 35291 bp; NW_021161274.1: 34572 bp; NW_021161275.1: 34411 bp; NW_021161276.1: 3585 bp; NW_021161277.1: 25771 bp; NW_021161278.1: 35292 bp; NW_021161279.1: 35203 bp; NW_021161280.1: 35750 bp; NW_021161281.1: 35378 bp; NW_021161282.1: 38876 bp; NW_021161283.1: 3589 bp; NW_021161284.1: 35176 bp; NW_021161285.1: 35515 bp; NW_021161286.1: 35235 bp; NW_021161287.1: 35335 bp; NW_021161288.1: 35635 bp; NW_021161289.1: 35602 bp; NW_021161290.1: 34408 bp; NW_021161291.1: 35380 bp; NW_021161292.1: 35701 bp; NW_021161293.1: 35740 bp; NW_021161294.1: 3595 bp; NW_021161295.1: 9582 bp; NW_021161296.1: 11407 bp; NW_021161297.1: 35986 bp; NW_021161298.1: 29605 bp; NW_021161299.1: 35760 bp; NW_021161300.1: 35753 bp; NW_021161301.1: 3650 bp; NW_021161302.1: 35969 bp; NW_021161303.1: 35997 bp; NW_021161304.1: 36013 bp; NW_021161305.1: 36069 bp; NW_021161306.1: 36367 bp; NW_021161307.1: 26542 bp; NW_021161308.1: 36176 bp; NW_021161309.1: 34402 bp; NW_021161310.1: 44556 bp; NW_021161311.1: 3634 bp; NW_021161312.1: 35760 bp; NW_021161313.1: 35409 bp; NW_021161314.1: 35675 bp; NW_021161315.1: 36526 bp; NW_021161316.1: 36418 bp; NW_021161317.1: 36440 bp; NW_021161318.1: 36579 bp; NW_021161319.1: 3709 bp; NW_021161320.1: 98231 bp; NW_021161321.1: 36597 bp; NW_021161322.1: 37236 bp; NW_021161323.1: 36173 bp; NW_021161324.1: 36316 bp; NW_021161325.1: 37073 bp; NW_021161326.1: 36766 bp; NW_021161327.1: 36362 bp; NW_021161328.1: 36429 bp; NW_021161329.1: 36545 bp; NW_021161330.1: 3692 bp; NW_021161331.1: 36583 bp; NW_021161332.1: 36888 bp; NW_021161333.1: 36950 bp; NW_021161334.1: 35341 bp; NW_021161335.1: 37320 bp; NW_021161336.1: 36865 bp; NW_021161337.1: 37193 bp; NW_021161338.1: 37189 bp; NW_021161339.1: 3805 bp; NW_021161340.1: 36764 bp; NW_021161341.1: 37346 bp; NW_021161342.1: 37230 bp; NW_021161343.1: 36196 bp; NW_021161344.1: 37366 bp; NW_021161345.1: 35631 bp; NW_021161346.1: 47321 bp; NW_021161347.1: 3833 bp; NW_021161348.1: 37440 bp; NW_021161349.1: 37329 bp; NW_021161350.1: 37752 bp; NW_021161351.1: 37806 bp; NW_021161352.1: 38016 bp; NW_021161353.1: 38028 bp; NW_021161354.1: 3873 bp; NW_021161355.1: 38638 bp; NW_021161356.1: 37427 bp; NW_021161357.1: 38191 bp; NW_021161358.1: 37704 bp; NW_021161359.1: 38049 bp; NW_021161360.1: 37458 bp; NW_021161361.1: 38047 bp; NW_021161362.1: 3881 bp; NW_021161363.1: 37735 bp; NW_021161364.1: 38187 bp; NW_021161365.1: 38056 bp; NW_021161366.1: 38306 bp; NW_021161367.1: 37918 bp; NW_021161368.1: 37394 bp; NW_021161369.1: 38662 bp; NW_021161370.1: 38559 bp; NW_021161371.1: 38474 bp; NW_021161372.1: 35154 bp; NW_021161373.1: 3934 bp; NW_021161374.1: 38182 bp; NW_021161375.1: 38884 bp; NW_021161376.1: 38735 bp; NW_021161377.1: 39759 bp; NW_021161378.1: 39073 bp; NW_021161379.1: 38290 bp; NW_021161380.1: 31828 bp; NW_021161381.1: 38782 bp; NW_021161382.1: 3884 bp; NW_021161383.1: 39158 bp; NW_021161384.1: 38903 bp; NW_021161385.1: 38848 bp; NW_021161386.1: 38542 bp; NW_021161387.1: 38548 bp; NW_021161388.1: 38282 bp; NW_021161389.1: 39048 bp; NW_021161390.1: 3875 bp; NW_021161391.1: 39067 bp; NW_021161392.1: 39117 bp; NW_021161393.1: 30983 bp; NW_021161394.1: 38831 bp; NW_021161395.1: 26330 bp; NW_021161396.1: 39087 bp; NW_021161397.1: 39340 bp; NW_021161398.1: 39151 bp; NW_021161399.1: 21923 bp; NW_021161400.1: 39574 bp; NW_021161401.1: 3946 bp; NW_021161402.1: 39385 bp; NW_021161403.1: 39402 bp; NW_021161404.1: 39426 bp; NW_021161405.1: 37001 bp; NW_021161406.1: 38736 bp; NW_021161407.1: 39387 bp; NW_021161408.1: 39210 bp; NW_021161409.1: 39234 bp; NW_021161410.1: 3963 bp; NW_021161411.1: 39932 bp; NW_021161412.1: 40128 bp; NW_021161413.1: 39609 bp; NW_021161414.1: 39873 bp; NW_021161415.1: 40174 bp; NW_021161416.1: 39862 bp; NW_021161417.1: 34563 bp; NW_021161418.1: 38938 bp; NW_021161419.1: 4048 bp; NW_021161420.1: 40061 bp; NW_021161421.1: 39789 bp; NW_021161422.1: 39585 bp; NW_021161423.1: 39520 bp; NW_021161424.1: 40176 bp; NW_021161425.1: 40208 bp; NW_021161426.1: 39940 bp; NW_021161427.1: 40094 bp; NW_021161428.1: 40087 bp; NW_021161429.1: 3883 bp; NW_021161430.1: 40567 bp; NW_021161431.1: 39948 bp; NW_021161432.1: 40518 bp; NW_021161433.1: 40453 bp; NW_021161434.1: 36536 bp; NW_021161435.1: 40658 bp; NW_021161436.1: 40483 bp; NW_021161437.1: 30042 bp; NW_021161438.1: 4139 bp; NW_021161439.1: 33894 bp; NW_021161440.1: 40786 bp; NW_021161441.1: 40543 bp; NW_021161442.1: 40627 bp; NW_021161443.1: 39583 bp; NW_021161444.1: 40692 bp; NW_021161445.1: 26899 bp; NW_021161446.1: 40916 bp; NW_021161447.1: 40298 bp; NW_021161448.1: 4164 bp; NW_021161449.1: 40942 bp; NW_021161450.1: 40479 bp; NW_021161451.1: 41042 bp; NW_021161452.1: 40959 bp; NW_021161453.1: 9741 bp; NW_021161454.1: 41550 bp; NW_021161455.1: 41437 bp; NW_021161456.1: 4243 bp; NW_021161457.1: 41440 bp; NW_021161458.1: 41772 bp; NW_021161459.1: 41493 bp; NW_021161460.1: 41105 bp; NW_021161461.1: 34683 bp; NW_021161462.1: 41848 bp; NW_021161463.1: 41719 bp; NW_021161464.1: 41089 bp; NW_021161465.1: 4202 bp; NW_021161466.1: 41995 bp; NW_021161467.1: 42125 bp; NW_021161468.1: 41952 bp; NW_021161469.1: 41934 bp; NW_021161470.1: 41925 bp; NW_021161471.1: 42119 bp; NW_021161472.1: 41902 bp; NW_021161473.1: 39756 bp; NW_021161474.1: 4224 bp; NW_021161475.1: 42192 bp; NW_021161476.1: 42068 bp; NW_021161477.1: 42128 bp; NW_021161478.1: 40456 bp; NW_021161479.1: 41682 bp; NW_021161480.1: 37589 bp; NW_021161481.1: 38097 bp; NW_021161482.1: 41982 bp; NW_021161483.1: 42297 bp; NW_021161484.1: 4251 bp; NW_021161485.1: 42753 bp; NW_021161486.1: 42563 bp; NW_021161487.1: 26672 bp; NW_021161488.1: 42584 bp; NW_021161489.1: 42423 bp; NW_021161490.1: 42397 bp; NW_021161491.1: 42686 bp; NW_021161492.1: 42959 bp; NW_021161493.1: 4501 bp; NW_021161494.1: 42825 bp; NW_021161495.1: 43060 bp; NW_021161496.1: 21449 bp; NW_021161497.1: 42928 bp; NW_021161498.1: 42859 bp; NW_021161499.1: 40936 bp; NW_021161500.1: 43031 bp; NW_021161501.1: 42764 bp; NW_021161502.1: 42580 bp; NW_021161503.1: 4313 bp; NW_021161504.1: 43165 bp; NW_021161505.1: 43094 bp; NW_021161506.1: 43524 bp; NW_021161507.1: 43286 bp; NW_021161508.1: 43154 bp; NW_021161509.1: 46500 bp; NW_021161510.1: 43218 bp; NW_021161511.1: 43245 bp; NW_021161512.1: 43598 bp; NW_021161513.1: 4222 bp; NW_021161514.1: 43609 bp; NW_021161515.1: 43438 bp; NW_021161516.1: 43058 bp; NW_021161517.1: 43864 bp; NW_021161518.1: 40988 bp; NW_021161519.1: 43859 bp; NW_021161520.1: 43096 bp; NW_021161521.1: 43807 bp; NW_021161522.1: 4269 bp; NW_021161523.1: 43265 bp; NW_021161524.1: 2568 bp; NW_021161525.1: 44027 bp; NW_021161526.1: 44050 bp; NW_021161527.1: 42522 bp; NW_021161528.1: 29635 bp; NW_021161529.1: 44101 bp; NW_021161530.1: 44677 bp; NW_021161531.1: 4330 bp; NW_021161532.1: 44461 bp; NW_021161533.1: 44400 bp; NW_021161534.1: 44667 bp; NW_021161535.1: 44654 bp; NW_021161536.1: 14354 bp; NW_021161537.1: 44355 bp; NW_021161538.1: 43892 bp; NW_021161539.1: 30137 bp; NW_021161540.1: 4355 bp; NW_021161541.1: 44404 bp; NW_021161542.1: 32853 bp; NW_021161543.1: 44877 bp; NW_021161544.1: 44708 bp; NW_021161545.1: 44679 bp; NW_021161546.1: 44763 bp; NW_021161547.1: 43550 bp; NW_021161548.1: 45352 bp; NW_021161549.1: 45063 bp; NW_021161550.1: 4358 bp; NW_021161551.1: 45330 bp; NW_021161552.1: 42520 bp; NW_021161553.1: 43959 bp; NW_021161554.1: 45154 bp; NW_021161555.1: 43189 bp; NW_021161556.1: 45149 bp; NW_021161557.1: 45099 bp; NW_021161558.1: 4377 bp; NW_021161559.1: 45244 bp; NW_021161560.1: 45284 bp; NW_021161561.1: 45186 bp; NW_021161562.1: 45469 bp; NW_021161563.1: 44154 bp; NW_021161564.1: 45838 bp; NW_021161565.1: 45680 bp; NW_021161566.1: 45489 bp; NW_021161567.1: 45527 bp; NW_021161568.1: 4374 bp; NW_021161569.1: 43996 bp; NW_021161570.1: 45239 bp; NW_021161571.1: 46055 bp; NW_021161572.1: 45960 bp; NW_021161573.1: 45687 bp; NW_021161574.1: 45412 bp; NW_021161575.1: 40193 bp; NW_021161576.1: 49015 bp; NW_021161577.1: 4475 bp; NW_021161578.1: 45110 bp; NW_021161579.1: 45508 bp; NW_021161580.1: 46004 bp; NW_021161581.1: 39228 bp; NW_021161582.1: 45938 bp; NW_021161583.1: 46010 bp; NW_021161584.1: 46184 bp; NW_021161585.1: 46085 bp; NW_021161586.1: 45774 bp; NW_021161587.1: 4480 bp; NW_021161588.1: 46008 bp; NW_021161589.1: 46075 bp; NW_021161590.1: 46009 bp; NW_021161591.1: 46688 bp; NW_021161592.1: 38862 bp; NW_021161593.1: 46534 bp; NW_021161594.1: 35042 bp; NW_021161595.1: 4431 bp; NW_021161596.1: 539197 bp; NW_021161597.1: 47231 bp; NW_021161598.1: 47063 bp; NW_021161599.1: 46287 bp; NW_021161600.1: 39567 bp; NW_021161601.1: 47033 bp; NW_021161602.1: 47147 bp; NW_021161603.1: 44389 bp; NW_021161604.1: 47142 bp; NW_021161605.1: 46923 bp; NW_021161606.1: 4596 bp; NW_021161607.1: 47411 bp; NW_021161608.1: 46701 bp; NW_021161609.1: 47051 bp; NW_021161610.1: 47444 bp; NW_021161611.1: 47145 bp; NW_021161612.1: 46632 bp; NW_021161613.1: 42281 bp; NW_021161614.1: 47714 bp; NW_021161615.1: 4608 bp; NW_021161616.1: 47847 bp; NW_021161617.1: 48070 bp; NW_021161618.1: 47755 bp; NW_021161619.1: 48494 bp; NW_021161620.1: 48615 bp; NW_021161621.1: 48521 bp; NW_021161622.1: 48804 bp; NW_021161623.1: 4673 bp; NW_021161624.1: 49091 bp; NW_021161625.1: 48530 bp; NW_021161626.1: 48636 bp; NW_021161627.1: 33435 bp; NW_021161628.1: 43903 bp; NW_021161629.1: 49110 bp; NW_021161630.1: 26718 bp; NW_021161631.1: 4337 bp; NW_021161632.1: 49124 bp; NW_021161633.1: 49414 bp; NW_021161634.1: 49314 bp; NW_021161635.1: 49922 bp; NW_021161636.1: 49563 bp; NW_021161637.1: 49614 bp; NW_021161638.1: 49110 bp; NW_021161639.1: 49166 bp; NW_021161640.1: 4730 bp; NW_021161641.1: 49520 bp; NW_021161642.1: 49762 bp; NW_021161643.1: 49803 bp; NW_021161644.1: 62222 bp; NW_021161645.1: 50266 bp; NW_021161646.1: 49124 bp; NW_021161647.1: 50194 bp; NW_021161648.1: 50883 bp; NW_021161649.1: 4723 bp; NW_021161650.1: 50831 bp; NW_021161651.1: 10288 bp; NW_021161652.1: 41816 bp; NW_021161653.1: 44881 bp; NW_021161654.1: 45730 bp; NW_021161655.1: 50775 bp; NW_021161656.1: 51111 bp; NW_021161657.1: 51037 bp; NW_021161658.1: 4699 bp; NW_021161659.1: 50478 bp; NW_021161660.1: 51084 bp; NW_021161661.1: 50976 bp; NW_021161662.1: 59403 bp; NW_021161663.1: 51632 bp; NW_021161664.1: 50849 bp; NW_021161665.1: 51707 bp; NW_021161666.1: 49477 bp; NW_021161667.1: 4712 bp; NW_021161668.1: 51783 bp; NW_021161669.1: 52522 bp; NW_021161670.1: 51033 bp; NW_021161671.1: 51112 bp; NW_021161672.1: 31199 bp; NW_021161673.1: 44211 bp; NW_021161674.1: 51763 bp; NW_021161675.1: 51622 bp; NW_021161676.1: 52031 bp; NW_021161677.1: 4766 bp; NW_021161678.1: 52118 bp; NW_021161679.1: 52134 bp; NW_021161680.1: 51744 bp; NW_021161681.1: 52729 bp; NW_021161682.1: 51837 bp; NW_021161683.1: 1018 bp; NW_021161684.1: 52580 bp; NW_021161685.1: 4704 bp; NW_021161686.1: 135290 bp; NW_021161687.1: 45969 bp; NW_021161688.1: 50457 bp; NW_021161689.1: 47658 bp; NW_021161690.1: 52203 bp; NW_021161691.1: 52711 bp; NW_021161692.1: 4547 bp; NW_021161693.1: 47714 bp; NW_021161694.1: 45495 bp; NW_021161695.1: 53446 bp; NW_021161696.1: 53040 bp; NW_021161697.1: 53093 bp; NW_021161698.1: 53497 bp; NW_021161699.1: 48354 bp; NW_021161700.1: 53044 bp; NW_021161701.1: 4878 bp; NW_021161702.1: 54180 bp; NW_021161703.1: 53929 bp; NW_021161704.1: 53872 bp; NW_021161705.1: 54532 bp; NW_021161706.1: 54126 bp; NW_021161707.1: 4877 bp; NW_021161708.1: 47114 bp; NW_021161709.1: 53780 bp; NW_021161710.1: 54744 bp; NW_021161711.1: 54195 bp; NW_021161712.1: 37542 bp; NW_021161713.1: 53877 bp; NW_021161714.1: 4723 bp; NW_021161715.1: 54401 bp; NW_021161716.1: 54367 bp; NW_021161717.1: 55247 bp; NW_021161718.1: 54484 bp; NW_021161719.1: 55700 bp; NW_021161720.1: 54552 bp; NW_021161721.1: 4719 bp; NW_021161722.1: 54602 bp; NW_021161723.1: 54674 bp; NW_021161724.1: 52427 bp; NW_021161725.1: 31465 bp; NW_021161726.1: 52192 bp; NW_021161727.1: 55233 bp; NW_021161728.1: 54854 bp; NW_021161729.1: 54620 bp; NW_021161730.1: 4946 bp; NW_021161731.1: 55277 bp; NW_021161732.1: 55415 bp; NW_021161733.1: 55095 bp; NW_021161734.1: 54470 bp; NW_021161735.1: 5068 bp; NW_021161736.1: 49857 bp; NW_021161737.1: 55851 bp; NW_021161738.1: 55757 bp; NW_021161739.1: 55173 bp; NW_021161740.1: 55893 bp; NW_021161741.1: 52219 bp; NW_021161742.1: 56129 bp; NW_021161743.1: 55989 bp; NW_021161744.1: 30053 bp; NW_021161745.1: 5123 bp; NW_021161746.1: 55043 bp; NW_021161747.1: 56409 bp; NW_021161748.1: 56714 bp; NW_021161749.1: 50308 bp; NW_021161750.1: 56871 bp; NW_021161751.1: 56351 bp; NW_021161752.1: 56384 bp; NW_021161753.1: 57122 bp; NW_021161754.1: 57191 bp; NW_021161755.1: 5087 bp; NW_021161756.1: 57072 bp; NW_021161757.1: 57265 bp; NW_021161758.1: 56732 bp; NW_021161759.1: 57462 bp; NW_021161760.1: 57537 bp; NW_021161761.1: 56718 bp; NW_021161762.1: 56155 bp; NW_021161763.1: 56865 bp; NW_021161764.1: 57887 bp; NW_021161765.1: 58172 bp; NW_021161766.1: 5170 bp; NW_021161767.1: 102105 bp; NW_021161768.1: 57736 bp; NW_021161769.1: 57982 bp; NW_021161770.1: 58133 bp; NW_021161771.1: 55163 bp; NW_021161772.1: 73921 bp; NW_021161773.1: 57948 bp; NW_021161774.1: 50837 bp; NW_021161775.1: 5084 bp; NW_021161776.1: 57200 bp; NW_021161777.1: 59182 bp; NW_021161778.1: 48415 bp; NW_021161779.1: 58989 bp; NW_021161780.1: 59303 bp; NW_021161781.1: 47153 bp; NW_021161782.1: 59255 bp; NW_021161783.1: 60006 bp; NW_021161784.1: 5148 bp; NW_021161785.1: 59951 bp; NW_021161786.1: 63720 bp; NW_021161787.1: 52097 bp; NW_021161788.1: 60135 bp; NW_021161789.1: 40932 bp; NW_021161790.1: 60347 bp; NW_021161791.1: 5943 bp; NW_021161792.1: 59372 bp; NW_021161793.1: 59771 bp; NW_021161794.1: 60438 bp; NW_021161795.1: 60299 bp; NW_021161796.1: 60409 bp; NW_021161797.1: 60511 bp; NW_021161798.1: 47075 bp; NW_021161799.1: 61336 bp; NW_021161800.1: 60346 bp; NW_021161801.1: 61203 bp; NW_021161802.1: 5153 bp; NW_021161803.1: 60988 bp; NW_021161804.1: 53906 bp; NW_021161805.1: 61029 bp; NW_021161806.1: 52973 bp; NW_021161807.1: 61605 bp; NW_021161808.1: 58515 bp; NW_021161809.1: 60438 bp; NW_021161810.1: 65300 bp; NW_021161811.1: 5218 bp; NW_021161812.1: 59696 bp; NW_021161813.1: 47549 bp; NW_021161814.1: 60637 bp; NW_021161815.1: 61255 bp; NW_021161816.1: 62361 bp; NW_021161817.1: 5298 bp; NW_021161818.1: 58033 bp; NW_021161819.1: 62604 bp; NW_021161820.1: 62830 bp; NW_021161821.1: 63471 bp; NW_021161822.1: 62933 bp; NW_021161823.1: 56837 bp; NW_021161824.1: 62468 bp; NW_021161825.1: 62914 bp; NW_021161826.1: 63798 bp; NW_021161827.1: 5264 bp; NW_021161828.1: 63453 bp; NW_021161829.1: 63548 bp; NW_021161830.1: 44750 bp; NW_021161831.1: 58143 bp; NW_021161832.1: 63400 bp; NW_021161833.1: 63920 bp; NW_021161834.1: 65517 bp; NW_021161835.1: 60971 bp; NW_021161836.1: 64312 bp; NW_021161837.1: 5182 bp; NW_021161838.1: 64097 bp; NW_021161839.1: 64033 bp; NW_021161840.1: 65250 bp; NW_021161841.1: 69994 bp; NW_021161842.1: 65234 bp; NW_021161843.1: 65139 bp; NW_021161844.1: 5292 bp; NW_021161845.1: 65395 bp; NW_021161846.1: 64569 bp; NW_021161847.1: 65260 bp; NW_021161848.1: 61482 bp; NW_021161849.1: 5288 bp; NW_021161850.1: 1117261 bp; NW_021161851.1: 65015 bp; NW_021161852.1: 66174 bp; NW_021161853.1: 65990 bp; NW_021161854.1: 66495 bp; NW_021161855.1: 66296 bp; NW_021161856.1: 65093 bp; NW_021161857.1: 66348 bp; NW_021161858.1: 66616 bp; NW_021161859.1: 65859 bp; NW_021161860.1: 5291 bp; NW_021161861.1: 65398 bp; NW_021161862.1: 66165 bp; NW_021161863.1: 66667 bp; NW_021161864.1: 66982 bp; NW_021161865.1: 67000 bp; NW_021161866.1: 66938 bp; NW_021161867.1: 66923 bp; NW_021161868.1: 66892 bp; NW_021161869.1: 5338 bp; NW_021161870.1: 67232 bp; NW_021161871.1: 44390 bp; NW_021161872.1: 66898 bp; NW_021161873.1: 66432 bp; NW_021161874.1: 66457 bp; NW_021161875.1: 67190 bp; NW_021161876.1: 68280 bp; NW_021161877.1: 57962 bp; NW_021161878.1: 67994 bp; NW_021161879.1: 67308 bp; NW_021161880.1: 5391 bp; NW_021161881.1: 60232 bp; NW_021161882.1: 98409 bp; NW_021161883.1: 68338 bp; NW_021161884.1: 67631 bp; NW_021161885.1: 69004 bp; NW_021161886.1: 68848 bp; NW_021161887.1: 68600 bp; NW_021161888.1: 69429 bp; NW_021161889.1: 5405 bp; NW_021161890.1: 68445 bp; NW_021161891.1: 69146 bp; NW_021161892.1: 74172 bp; NW_021161893.1: 85774 bp; NW_021161894.1: 69908 bp; NW_021161895.1: 69465 bp; NW_021161896.1: 70305 bp; NW_021161897.1: 69683 bp; NW_021161898.1: 5471 bp; NW_021161899.1: 66721 bp; NW_021161900.1: 70080 bp; NW_021161901.1: 70165 bp; NW_021161902.1: 64810 bp; NW_021161903.1: 71298 bp; NW_021161904.1: 70783 bp; NW_021161905.1: 5129 bp; NW_021161906.1: 66917 bp; NW_021161907.1: 70120 bp; NW_021161908.1: 72405 bp; NW_021161909.1: 71774 bp; NW_021161910.1: 71935 bp; NW_021161911.1: 72397 bp; NW_021161912.1: 72733 bp; NW_021161913.1: 72587 bp; NW_021161914.1: 72798 bp; NW_021161915.1: 5441 bp; NW_021161916.1: 73380 bp; NW_021161917.1: 72702 bp; NW_021161918.1: 73265 bp; NW_021161919.1: 72615 bp; NW_021161920.1: 73482 bp; NW_021161921.1: 73134 bp; NW_021161922.1: 71947 bp; NW_021161923.1: 5531 bp; NW_021161924.1: 73853 bp; NW_021161925.1: 40748 bp; NW_021161926.1: 74153 bp; NW_021161927.1: 74808 bp; NW_021161928.1: 74937 bp; NW_021161929.1: 74194 bp; NW_021161930.1: 74781 bp; NW_021161931.1: 75571 bp; NW_021161932.1: 5487 bp; NW_021161933.1: 74747 bp; NW_021161934.1: 75313 bp; NW_021161935.1: 75031 bp; NW_021161936.1: 90699 bp; NW_021161937.1: 75468 bp; NW_021161938.1: 75792 bp; NW_021161939.1: 75747 bp; NW_021161940.1: 75970 bp; NW_021161941.1: 4846 bp; NW_021161942.1: 29991 bp; NW_021161943.1: 76344 bp; NW_021161944.1: 75415 bp; NW_021161945.1: 76568 bp; NW_021161946.1: 75491 bp; NW_021161947.1: 60181 bp; NW_021161948.1: 5528 bp; NW_021161949.1: 77073 bp; NW_021161950.1: 77214 bp; NW_021161951.1: 37192 bp; NW_021161952.1: 76796 bp; NW_021161953.1: 77570 bp; NW_021161954.1: 77127 bp; NW_021161955.1: 77508 bp; NW_021161956.1: 76375 bp; NW_021161957.1: 78239 bp; NW_021161958.1: 78533 bp; NW_021161959.1: 2013 bp; NW_021161960.1: 75623 bp; NW_021161961.1: 78201 bp; NW_021161962.1: 79904 bp; NW_021161963.1: 74757 bp; NW_021161964.1: 79080 bp; NW_021161965.1: 79040 bp; NW_021161966.1: 79409 bp; NW_021161967.1: 5703 bp; NW_021161968.1: 79215 bp; NW_021161969.1: 79370 bp; NW_021161970.1: 80008 bp; NW_021161971.1: 67941 bp; NW_021161972.1: 80423 bp; NW_021161973.1: 78911 bp; NW_021161974.1: 80793 bp; NW_021161975.1: 80473 bp; NW_021161976.1: 5579 bp; NW_021161977.1: 81846 bp; NW_021161978.1: 81117 bp; NW_021161979.1: 81612 bp; NW_021161980.1: 57688 bp; NW_021161981.1: 75843 bp; NW_021161982.1: 87857 bp; NW_021161983.1: 85959 bp; NW_021161984.1: 5530 bp; NW_021161985.1: 82149 bp; NW_021161986.1: 82182 bp; NW_021161987.1: 82208 bp; NW_021161988.1: 78184 bp; NW_021161989.1: 77382 bp; NW_021161990.1: 82558 bp; NW_021161991.1: 83025 bp; NW_021161992.1: 5578 bp; NW_021161993.1: 84645 bp; NW_021161994.1: 84488 bp; NW_021161995.1: 85230 bp; NW_021161996.1: 85953 bp; NW_021161997.1: 84258 bp; NW_021161998.1: 79123 bp; NW_021161999.1: 5533 bp; NW_021162000.1: 85860 bp; NW_021162001.1: 84985 bp; NW_021162002.1: 80628 bp; NW_021162003.1: 75760 bp; NW_021162004.1: 28395 bp; NW_021162005.1: 86271 bp; NW_021162006.1: 86167 bp; NW_021162007.1: 87874 bp; NW_021162008.1: 4364 bp; NW_021162009.1: 87176 bp; NW_021162010.1: 87528 bp; NW_021162011.1: 87450 bp; NW_021162012.1: 27654 bp; NW_021162013.1: 88184 bp; NW_021162014.1: 88315 bp; NW_021162015.1: 85189 bp; NW_021162016.1: 89077 bp; NW_021162017.1: 88353 bp; NW_021162018.1: 580 bp; NW_021162019.1: 88765 bp; NW_021162020.1: 89116 bp; NW_021162021.1: 89317 bp; NW_021162022.1: 89300 bp; NW_021162023.1: 90089 bp; NW_021162024.1: 89536 bp; NW_021162025.1: 89157 bp; NW_021162026.1: 5576 bp; NW_021162027.1: 95384 bp; NW_021162028.1: 90559 bp; NW_021162029.1: 118794 bp; NW_021162030.1: 89611 bp; NW_021162031.1: 106339 bp; NW_021162032.1: 83177 bp; NW_021162033.1: 94579 bp; NW_021162034.1: 847 bp; NW_021162035.1: 93286 bp; NW_021162036.1: 87546 bp; NW_021162037.1: 90689 bp; NW_021162038.1: 93206 bp; NW_021162039.1: 92837 bp; NW_021162040.1: 80168 bp; NW_021162041.1: 79615 bp; NW_021162042.1: 93342 bp; NW_021162043.1: 1017 bp; NW_021162044.1: 95374 bp; NW_021162045.1: 78207 bp; NW_021162046.1: 95974 bp; NW_021162047.1: 95687 bp; NW_021162048.1: 21888 bp; NW_021162049.1: 96414 bp; NW_021162050.1: 96177 bp; NW_021162051.1: 98545 bp; NW_021162052.1: 95353 bp; NW_021162053.1: 5574 bp; NW_021162054.1: 95315 bp; NW_021162055.1: 99493 bp; NW_021162056.1: 94225 bp; NW_021162057.1: 126633 bp; NW_021162058.1: 98132 bp; NW_021162059.1: 98273 bp; NW_021162060.1: 98070 bp; NW_021162061.1: 97734 bp; NW_021162062.1: 87779 bp; NW_021162063.1: 98720 bp; NW_021162064.1: 483 bp; NW_021162065.1: 99708 bp; NW_021162066.1: 100704 bp; NW_021162067.1: 99617 bp; NW_021162068.1: 97056 bp; NW_021162069.1: 94142 bp; NW_021162070.1: 100199 bp; NW_021162071.1: 91746 bp; NW_021162072.1: 103309 bp; NW_021162073.1: 644 bp; NW_021162074.1: 104524 bp; NW_021162075.1: 95462 bp; NW_021162076.1: 105857 bp; NW_021162077.1: 105717 bp; NW_021162078.1: 106467 bp; NW_021162079.1: 93551 bp; NW_021162080.1: 100541 bp; NW_021162081.1: 104962 bp; NW_021162082.1: 5632 bp; NW_021162083.1: 172297 bp; NW_021162084.1: 103022 bp; NW_021162085.1: 107146 bp; NW_021162086.1: 110440 bp; NW_021162087.1: 110143 bp; NW_021162088.1: 110499 bp; NW_021162089.1: 112585 bp; NW_021162090.1: 108503 bp; NW_021162091.1: 113407 bp; NW_021162092.1: 113417 bp; NW_021162093.1: 972 bp; NW_021162094.1: 115593 bp; NW_021162095.1: 113870 bp; NW_021162096.1: 129808 bp; NW_021162097.1: 101318 bp; NW_021162098.1: 121393 bp; NW_021162099.1: 110265 bp; NW_021162100.1: 125694 bp; NW_021162101.1: 116383 bp; NW_021162102.1: 2150 bp; NW_021162103.1: 118746 bp; NW_021162104.1: 119205 bp; NW_021162105.1: 120347 bp; NW_021162106.1: 121230 bp; NW_021162107.1: 121050 bp; NW_021162108.1: 31873 bp; NW_021162109.1: 132044 bp; NW_021162110.1: 119602 bp; NW_021162111.1: 122551 bp; NW_021162112.1: 5895 bp; NW_021162113.1: 111075 bp; NW_021162114.1: 121705 bp; NW_021162115.1: 124221 bp; NW_021162116.1: 123539 bp; NW_021162117.1: 126295 bp; NW_021162118.1: 107979 bp; NW_021162119.1: 125189 bp; NW_021162120.1: 126266 bp; NW_021162121.1: 12279 bp; NW_021162122.1: 5643 bp; NW_021162123.1: 127007 bp; NW_021162124.1: 128435 bp; NW_021162125.1: 129037 bp; NW_021162126.1: 120669 bp; NW_021162127.1: 121549 bp; NW_021162128.1: 130415 bp; NW_021162129.1: 132187 bp; NW_021162130.1: 130461 bp; NW_021162131.1: 5698 bp; NW_021162132.1: 117379 bp; NW_021162133.1: 129961 bp; NW_021162134.1: 119943 bp; NW_021162135.1: 134417 bp; NW_021162136.1: 138879 bp; NW_021162137.1: 140412 bp; NW_021162138.1: 140114 bp; NW_021162139.1: 141557 bp; NW_021162140.1: 5680 bp; NW_021162141.1: 140493 bp; NW_021162142.1: 141499 bp; NW_021162143.1: 141344 bp; NW_021162144.1: 110746 bp; NW_021162145.1: 142752 bp; NW_021162146.1: 144953 bp; NW_021162147.1: 140509 bp; NW_021162148.1: 131735 bp; NW_021162149.1: 141005 bp; NW_021162150.1: 146108 bp; NW_021162151.1: 797 bp; NW_021162152.1: 151929 bp; NW_021162153.1: 153471 bp; NW_021162154.1: 156487 bp; NW_021162155.1: 150250 bp; NW_021162156.1: 153182 bp; NW_021162157.1: 60247 bp; NW_021162158.1: 155958 bp; NW_021162159.1: 157155 bp; NW_021162160.1: 165522 bp; NW_021162161.1: 10000 bp; NW_021162162.1: 2368 bp; NW_021162163.1: 163519 bp; NW_021162164.1: 170664 bp; NW_021162165.1: 165021 bp; NW_021162166.1: 172476 bp; NW_021162167.1: 172921 bp; NW_021162168.1: 173803 bp; NW_021162169.1: 167353 bp; NW_021162170.1: 179292 bp; NW_021162171.1: 2475 bp; NW_021162172.1: 105177 bp; NW_021162173.1: 176600 bp; NW_021162174.1: 183966 bp; NW_021162175.1: 4865 bp; NW_021162176.1: 211248 bp; NW_021162177.1: 183100 bp; NW_021162178.1: 155517 bp; NW_021162179.1: 193892 bp; NW_021162180.1: 5684 bp; NW_021162181.1: 194498 bp; NW_021162182.1: 202498 bp; NW_021162183.1: 191577 bp; NW_021162184.1: 207399 bp; NW_021162185.1: 8826 bp; NW_021162186.1: 211261 bp; NW_021162187.1: 9276 bp; NW_021162188.1: 203441 bp; NW_021162189.1: 215253 bp; NW_021162190.1: 214887 bp; NW_021162191.1: 1630 bp; NW_021162192.1: 217318 bp; NW_021162193.1: 217473 bp; NW_021162194.1: 223700 bp; NW_021162195.1: 170538 bp; NW_021162196.1: 219898 bp; NW_021162197.1: 334584 bp; NW_021162198.1: 22805 bp; NW_021162199.1: 219402 bp; NW_021162200.1: 227500 bp; NW_021162201.1: 421 bp; NW_021162202.1: 198660 bp; NW_021162203.1: 218262 bp; NW_021162204.1: 230069 bp; NW_021162205.1: 240218 bp; NW_021162206.1: 243659 bp; NW_021162207.1: 237673 bp; NW_021162208.1: 248972 bp; NW_021162209.1: 244704 bp; NW_021162210.1: 245458 bp; NW_021162211.1: 231522 bp; NW_021162212.1: 836 bp; NW_021162213.1: 245044 bp; NW_021162214.1: 260032 bp; NW_021162215.1: 272195 bp; NW_021162216.1: 263879 bp; NW_021162217.1: 266033 bp; NW_021162218.1: 247964 bp; NW_021162219.1: 257031 bp; NW_021162220.1: 250898 bp; NW_021162221.1: 262286 bp; NW_021162222.1: 37855 bp; NW_021162223.1: 1013 bp; NW_021162224.1: 285304 bp; NW_021162225.1: 276008 bp; NW_021162226.1: 43653 bp; NW_021162227.1: 290800 bp; NW_021162228.1: 270756 bp; NW_021162229.1: 289325 bp; NW_021162230.1: 325236 bp; NW_021162231.1: 306853 bp; NW_021162232.1: 310572 bp; NW_021162233.1: 406 bp; NW_021162234.1: 294751 bp; NW_021162235.1: 364843 bp; NW_021162236.1: 306510 bp; NW_021162237.1: 341167 bp; NW_021162238.1: 4290 bp; NW_021162239.1: 12050 bp; NW_021162240.1: 160179 bp; NW_021162241.1: 398213 bp; NW_021162242.1: 455 bp; NW_021162243.1: 484070 bp; NW_021162244.1: 9876 bp; NW_021162245.1: 9530 bp; NW_021162246.1: 105638 bp; NW_021162247.1: 41983 bp; NW_021162248.1: 15837 bp; NW_021162249.1: 5694 bp; NW_021162250.1: 17810 bp; NW_021162251.1: 71418 bp; NW_021162252.1: 7822 bp; NW_021162253.1: 31308 bp; NW_021162254.1: 677 bp; NW_021162255.1: 13302 bp; NW_021162256.1: 6908 bp; NW_021162257.1: 10037 bp; NW_021162258.1: 15233 bp; NW_021162259.1: 927 bp; NW_021162260.1: 1182 bp; NW_021162261.1: 93303 bp; NW_021162262.1: 19314 bp; NW_021162263.1: 26495 bp; NW_021162264.1: 19076 bp; NW_021162265.1: 38650 bp; NW_021162266.1: 21844 bp; NW_021162267.1: 1113 bp; NW_021162268.1: 19772 bp; NW_021162269.1: 23759 bp; NW_021162270.1: 20182 bp; NW_021162271.1: 20515 bp; NW_021162272.1: 21771 bp; NW_021162273.1: 9814 bp; NW_021162274.1: 101542 bp; NW_021162275.1: 965 bp; NW_021162276.1: 1177 bp; NW_021162277.1: 24873 bp; NW_021162278.1: 1181 bp; NW_021162279.1: 1808 bp; NW_021162280.1: 1878 bp; NW_021162281.1: 1111 bp; NW_021162282.1: 1186 bp; NW_021162283.1: 1475 bp; NW_021162284.1: 594 bp; NW_021162285.1: 1119 bp; NW_021162286.1: 1271 bp; NW_021162287.1: 1428 bp; NW_021162288.1: 1538 bp; NW_021162289.1: 1630 bp; NW_021162290.1: 1704 bp; NW_021162291.1: 1329 bp; NW_021162292.1: 1408 bp; NW_021162293.1: 217 bp; NW_021162294.1: 1000 bp; NW_021162295.1: 1694 bp; NW_021162296.1: 5841 bp; NW_021162297.1: 1992 bp; NW_021162298.1: 2122 bp; NW_021162299.1: 2137 bp; NW_021162300.1: 2163 bp; NW_021162301.1: 2380 bp; NW_021162302.1: 1572 bp; NW_021162303.1: 5727 bp; NW_021162304.1: 2556 bp; NW_021162305.1: 1747 bp; NW_021162306.1: 1722 bp; NW_021162307.1: 5781 bp; NW_021162308.1: 2673 bp; NW_021162309.1: 2703 bp; NW_021162310.1: 2713 bp; NW_021162311.1: 2709 bp; NW_021162312.1: 1750 bp; NW_021162313.1: 2710 bp; NW_021162314.1: 1849 bp; NW_021162315.1: 5778 bp; NW_021162316.1: 2805 bp; NW_021162317.1: 5617 bp; NW_021162318.1: 1917 bp; NW_021162319.1: 1985 bp; NW_021162320.1: 2082 bp; NW_021162321.1: 2669 bp; NW_021162322.1: 2826 bp; NW_021162323.1: 3329 bp; NW_021162324.1: 2279 bp; NW_021162325.1: 2988 bp; NW_021162326.1: 2173 bp; NW_021162327.1: 5808 bp; NW_021162328.1: 2277 bp; NW_021162329.1: 2320 bp; NW_021162330.1: 3040 bp; NW_021162331.1: 5815 bp; NW_021162332.1: 3004 bp; NW_021162333.1: 3086 bp; NW_021162334.1: 5735 bp; NW_021162335.1: 2500 bp; NW_021162336.1: 2523 bp; NW_021162337.1: 5694 bp; NW_021162338.1: 5860 bp; NW_021162339.1: 5597 bp; NW_021162340.1: 5916 bp; NW_021162341.1: 3105 bp; NW_021162342.1: 5861 bp; NW_021162343.1: 5967 bp; NW_021162344.1: 5894 bp; NW_021162345.1: 6003 bp; NW_021162346.1: 6035 bp; NW_021162347.1: 2647 bp; NW_021162348.1: 6161 bp; NW_021162349.1: 2839 bp; NW_021162350.1: 6105 bp; NW_021162351.1: 3161 bp; NW_021162352.1: 6030 bp; NW_021162353.1: 6126 bp; NW_021162354.1: 4454 bp; NW_021162355.1: 3147 bp; NW_021162356.1: 6186 bp; NW_021162357.1: 3169 bp; NW_021162358.1: 6258 bp; NW_021162359.1: 3265 bp; NW_021162360.1: 3150 bp; NW_021162361.1: 3342 bp; NW_021162362.1: 3293 bp; NW_021162363.1: 3439 bp; NW_021162364.1: 3576 bp; NW_021162365.1: 3862 bp; NW_021162366.1: 3367 bp; NW_021162367.1: 3292 bp; NW_021162368.1: 3378 bp; NW_021162369.1: 3299 bp; NW_021162370.1: 3914 bp; NW_021162371.1: 3537 bp; NW_021162372.1: 6283 bp; NW_021162373.1: 3918 bp; NW_021162374.1: 6242 bp; NW_021162375.1: 6340 bp; NW_021162376.1: 4046 bp; NW_021162377.1: 3402 bp; NW_021162378.1: 3572 bp; NW_021162379.1: 6392 bp; NW_021162380.1: 3723 bp; NW_021162381.1: 4085 bp; NW_021162382.1: 6395 bp; NW_021162383.1: 6339 bp; NW_021162384.1: 3835 bp; NW_021162385.1: 6404 bp; NW_021162386.1: 4048 bp; NW_021162387.1: 6386 bp; NW_021162388.1: 6324 bp; NW_021162389.1: 4165 bp; NW_021162390.1: 4242 bp; NW_021162391.1: 6443 bp; NW_021162392.1: 6559 bp; NW_021162393.1: 4331 bp; NW_021162394.1: 4150 bp; NW_021162395.1: 6707 bp; NW_021162396.1: 6700 bp; NW_021162397.1: 6630 bp; NW_021162398.1: 6713 bp; NW_021162399.1: 6656 bp; NW_021162400.1: 6571 bp; NW_021162401.1: 6673 bp; NW_021162402.1: 6799 bp; NW_021162403.1: 6726 bp; NW_021162404.1: 6897 bp; NW_021162405.1: 6880 bp; NW_021162406.1: 4596 bp; NW_021162407.1: 4580 bp; NW_021162408.1: 4678 bp; NW_021162409.1: 6897 bp; NW_021162410.1: 4355 bp; NW_021162411.1: 4726 bp; NW_021162412.1: 4729 bp; NW_021162413.1: 4248 bp; NW_021162414.1: 6823 bp; NW_021162415.1: 5107 bp; NW_021162416.1: 7005 bp; NW_021162417.1: 5103 bp; NW_021162418.1: 6999 bp; NW_021162419.1: 6987 bp; NW_021162420.1: 5178 bp; NW_021162421.1: 7071 bp; NW_021162422.1: 7140 bp; NW_021162423.1: 7152 bp; NW_021162424.1: 7232 bp; NW_021162425.1: 7165 bp; NW_021162426.1: 7161 bp; NW_021162427.1: 4610 bp; NW_021162428.1: 4932 bp; NW_021162429.1: 7250 bp; NW_021162430.1: 7254 bp; NW_021162431.1: 7273 bp; NW_021162432.1: 4913 bp; NW_021162433.1: 5010 bp; NW_021162434.1: 7303 bp; NW_021162435.1: 4960 bp; NW_021162436.1: 5208 bp; NW_021162437.1: 5086 bp; NW_021162438.1: 5068 bp; NW_021162439.1: 7387 bp; NW_021162440.1: 7283 bp; NW_021162441.1: 5231 bp; NW_021162442.1: 7459 bp; NW_021162443.1: 5201 bp; NW_021162444.1: 5299 bp; NW_021162445.1: 7461 bp; NW_021162446.1: 5234 bp; NW_021162447.1: 7511 bp; NW_021162448.1: 7454 bp; NW_021162449.1: 7480 bp; NW_021162450.1: 5024 bp; NW_021162451.1: 5481 bp; NW_021162452.1: 5507 bp; NW_021162453.1: 7387 bp; NW_021162454.1: 7581 bp; NW_021162455.1: 7483 bp; NW_021162456.1: 5352 bp; NW_021162457.1: 7524 bp; NW_021162458.1: 7580 bp; NW_021162459.1: 5531 bp; NW_021162460.1: 7521 bp; NW_021162461.1: 7551 bp; NW_021162462.1: 7578 bp; NW_021162463.1: 7549 bp; NW_021162464.1: 5554 bp; NW_021162465.1: 5725 bp; NW_021162466.1: 5643 bp; NW_021162467.1: 5596 bp; NW_021162468.1: 7393 bp; NW_021162469.1: 5819 bp; NW_021162470.1: 7519 bp; NW_021162471.1: 7607 bp; NW_021162472.1: 7455 bp; NW_021162473.1: 5546 bp; NW_021162474.1: 5953 bp; NW_021162475.1: 7249 bp; NW_021162476.1: 7739 bp; NW_021162477.1: 7748 bp; NW_021162478.1: 5894 bp; NW_021162479.1: 7571 bp; NW_021162480.1: 7777 bp; NW_021162481.1: 7855 bp; NW_021162482.1: 6082 bp; NW_021162483.1: 7804 bp; NW_021162484.1: 7797 bp; NW_021162485.1: 7762 bp; NW_021162486.1: 7814 bp; NW_021162487.1: 6229 bp; NW_021162488.1: 6482 bp; NW_021162489.1: 7823 bp; NW_021162490.1: 6227 bp; NW_021162491.1: 7834 bp; NW_021162492.1: 7866 bp; NW_021162493.1: 6381 bp; NW_021162494.1: 8009 bp; NW_021162495.1: 6588 bp; NW_021162496.1: 7991 bp; NW_021162497.1: 7948 bp; NW_021162498.1: 7909 bp; NW_021162499.1: 7946 bp; NW_021162500.1: 7933 bp; NW_021162501.1: 8127 bp; NW_021162502.1: 4641 bp; NW_021162503.1: 6648 bp; NW_021162504.1: 8064 bp; NW_021162505.1: 8066 bp; NW_021162506.1: 7982 bp; NW_021162507.1: 6114 bp; NW_021162508.1: 8070 bp; NW_021162509.1: 7978 bp; NW_021162510.1: 8083 bp; NW_021162511.1: 8100 bp; NW_021162512.1: 8132 bp; NW_021162513.1: 6701 bp; NW_021162514.1: 8162 bp; NW_021162515.1: 8158 bp; NW_021162516.1: 8171 bp; NW_021162517.1: 6826 bp; NW_021162518.1: 8247 bp; NW_021162519.1: 8222 bp; NW_021162520.1: 7083 bp; NW_021162521.1: 7185 bp; NW_021162522.1: 8268 bp; NW_021162523.1: 7053 bp; NW_021162524.1: 8214 bp; NW_021162525.1: 8288 bp; NW_021162526.1: 7224 bp; NW_021162527.1: 8324 bp; NW_021162528.1: 8237 bp; NW_021162529.1: 8324 bp; NW_021162530.1: 7305 bp; NW_021162531.1: 8426 bp; NW_021162532.1: 8356 bp; NW_021162533.1: 8416 bp; NW_021162534.1: 8470 bp; NW_021162535.1: 8395 bp; NW_021162536.1: 8472 bp; NW_021162537.1: 8470 bp; NW_021162538.1: 7384 bp; NW_021162539.1: 8491 bp; NW_021162540.1: 7431 bp; NW_021162541.1: 8526 bp; NW_021162542.1: 8633 bp; NW_021162543.1: 8576 bp; NW_021162544.1: 8543 bp; NW_021162545.1: 8642 bp; NW_021162546.1: 8382 bp; NW_021162547.1: 7502 bp; NW_021162548.1: 8575 bp; NW_021162549.1: 8646 bp; NW_021162550.1: 8619 bp; NW_021162551.1: 8743 bp; NW_021162552.1: 8627 bp; NW_021162553.1: 8662 bp; NW_021162554.1: 8246 bp; NW_021162555.1: 8736 bp; NW_021162556.1: 8693 bp; NW_021162557.1: 8650 bp; NW_021162558.1: 8751 bp; NW_021162559.1: 8781 bp; NW_021162560.1: 8512 bp; NW_021162561.1: 8759 bp; NW_021162562.1: 8846 bp; NW_021162563.1: 7768 bp; NW_021162564.1: 8882 bp; NW_021162565.1: 8736 bp; NW_021162566.1: 8616 bp; NW_021162567.1: 8908 bp; NW_021162568.1: 8912 bp; NW_021162569.1: 8902 bp; NW_021162570.1: 7779 bp; NW_021162571.1: 8932 bp; NW_021162572.1: 9005 bp; NW_021162573.1: 9067 bp; NW_021162574.1: 7951 bp; NW_021162575.1: 9083 bp; NW_021162576.1: 9102 bp; NW_021162577.1: 9091 bp; NW_021162578.1: 9083 bp; NW_021162579.1: 9114 bp; NW_021162580.1: 8112 bp; NW_021162581.1: 9107 bp; NW_021162582.1: 8635 bp; NW_021162583.1: 9243 bp; NW_021162584.1: 9225 bp; NW_021162585.1: 8174 bp; NW_021162586.1: 9265 bp; NW_021162587.1: 9274 bp; NW_021162588.1: 8300 bp; NW_021162589.1: 8393 bp; NW_021162590.1: 9211 bp; NW_021162591.1: 9214 bp; NW_021162592.1: 9247 bp; NW_021162593.1: 9297 bp; NW_021162594.1: 8515 bp; NW_021162595.1: 9411 bp; NW_021162596.1: 9361 bp; NW_021162597.1: 9375 bp; NW_021162598.1: 9314 bp; NW_021162599.1: 9375 bp; NW_021162600.1: 8629 bp; NW_021162601.1: 15085 bp; NW_021162602.1: 9511 bp; NW_021162603.1: 6628 bp; NW_021162604.1: 8620 bp; NW_021162605.1: 9450 bp; NW_021162606.1: 9328 bp; NW_021162607.1: 9373 bp; NW_021162608.1: 9462 bp; NW_021162609.1: 9568 bp; NW_021162610.1: 9422 bp; NW_021162611.1: 9085 bp; NW_021162612.1: 9612 bp; NW_021162613.1: 9516 bp; NW_021162614.1: 9842 bp; NW_021162615.1: 9640 bp; NW_021162616.1: 9518 bp; NW_021162617.1: 9669 bp; NW_021162618.1: 8874 bp; NW_021162619.1: 9671 bp; NW_021162620.1: 9721 bp; NW_021162621.1: 9770 bp; NW_021162622.1: 9801 bp; NW_021162623.1: 9694 bp; NW_021162624.1: 9745 bp; NW_021162625.1: 8920 bp; NW_021162626.1: 9820 bp; NW_021162627.1: 9806 bp; NW_021162628.1: 4263 bp; NW_021162629.1: 8779 bp; NW_021162630.1: 9863 bp; NW_021162631.1: 9807 bp; NW_021162632.1: 8623 bp; NW_021162633.1: 9868 bp; NW_021162634.1: 9151 bp; NW_021162635.1: 9955 bp; NW_021162636.1: 9924 bp; NW_021162637.1: 9838 bp; NW_021162638.1: 10004 bp; NW_021162639.1: 9955 bp; NW_021162640.1: 10003 bp; NW_021162641.1: 9999 bp; NW_021162642.1: 9921 bp; NW_021162643.1: 25415 bp; NW_021162644.1: 9991 bp; NW_021162645.1: 9924 bp; NW_021162646.1: 10073 bp; NW_021162647.1: 10228 bp; NW_021162648.1: 10058 bp; NW_021162649.1: 9940 bp; NW_021162650.1: 10204 bp; NW_021162651.1: 10111 bp; NW_021162652.1: 10182 bp; NW_021162653.1: 10313 bp; NW_021162654.1: 11492 bp; NW_021162655.1: 10100 bp; NW_021162656.1: 10334 bp; NW_021162657.1: 9439 bp; NW_021162658.1: 10406 bp; NW_021162659.1: 10221 bp; NW_021162660.1: 10498 bp; NW_021162661.1: 10400 bp; NW_021162662.1: 10024 bp; NW_021162663.1: 10268 bp; NW_021162664.1: 10381 bp; NW_021162665.1: 3153 bp; NW_021162666.1: 10367 bp; NW_021162667.1: 10346 bp; NW_021162668.1: 10300 bp; NW_021162669.1: 10178 bp; NW_021162670.1: 10400 bp; NW_021162671.1: 10505 bp; NW_021162672.1: 10468 bp; NW_021162673.1: 10600 bp; NW_021162674.1: 10579 bp; NW_021162675.1: 10646 bp; NW_021162676.1: 10686 bp; NW_021162677.1: 10682 bp; NW_021162678.1: 10737 bp; NW_021162679.1: 10629 bp; NW_021162680.1: 10838 bp; NW_021162681.1: 10719 bp; NW_021162682.1: 10694 bp; NW_021162683.1: 10866 bp; NW_021162684.1: 10710 bp; NW_021162685.1: 10782 bp; NW_021162686.1: 10247 bp; NW_021162687.1: 10847 bp; NW_021162688.1: 10707 bp; NW_021162689.1: 10888 bp; NW_021162690.1: 10899 bp; NW_021162691.1: 10903 bp; NW_021162692.1: 10977 bp; NW_021162693.1: 10943 bp; NW_021162694.1: 10982 bp; NW_021162695.1: 10633 bp; NW_021162696.1: 11007 bp; NW_021162697.1: 10304 bp; NW_021162698.1: 11099 bp; NW_021162699.1: 11107 bp; NW_021162700.1: 11039 bp; NW_021162701.1: 11251 bp; NW_021162702.1: 11004 bp; NW_021162703.1: 11059 bp; NW_021162704.1: 11138 bp; NW_021162705.1: 11275 bp; NW_021162706.1: 18798 bp; NW_021162707.1: 11251 bp; NW_021162708.1: 11159 bp; NW_021162709.1: 11295 bp; NW_021162710.1: 10713 bp; NW_021162711.1: 11243 bp; NW_021162712.1: 11336 bp; NW_021162713.1: 11295 bp; NW_021162714.1: 10843 bp; NW_021162715.1: 11444 bp; NW_021162716.1: 11408 bp; NW_021162717.1: 11390 bp; NW_021162718.1: 11451 bp; NW_021162719.1: 11342 bp; NW_021162720.1: 11412 bp; NW_021162721.1: 11436 bp; NW_021162722.1: 11385 bp; NW_021162723.1: 11568 bp; NW_021162724.1: 11543 bp; NW_021162725.1: 11379 bp; NW_021162726.1: 11498 bp; NW_021162727.1: 11708 bp; NW_021162728.1: 11336 bp; NW_021162729.1: 11621 bp; NW_021162730.1: 11709 bp; NW_021162731.1: 10966 bp; NW_021162732.1: 11620 bp; NW_021162733.1: 11669 bp; NW_021162734.1: 11610 bp; NW_021162735.1: 11454 bp; NW_021162736.1: 11653 bp; NW_021162737.1: 11716 bp; NW_021162738.1: 11745 bp; NW_021162739.1: 11272 bp; NW_021162740.1: 11688 bp; NW_021162741.1: 11680 bp; NW_021162742.1: 11212 bp; NW_021162743.1: 11720 bp; NW_021162744.1: 11426 bp; NW_021162745.1: 11081 bp; NW_021162746.1: 11763 bp; NW_021162747.1: 16742 bp; NW_021162748.1: 11772 bp; NW_021162749.1: 11950 bp; NW_021162750.1: 11503 bp; NW_021162751.1: 11680 bp; NW_021162752.1: 11848 bp; NW_021162753.1: 11928 bp; NW_021162754.1: 12083 bp; NW_021162755.1: 11991 bp; NW_021162756.1: 12067 bp; NW_021162757.1: 11874 bp; NW_021162758.1: 53119 bp; NW_021162759.1: 12136 bp; NW_021162760.1: 12131 bp; NW_021162761.1: 12066 bp; NW_021162762.1: 12222 bp; NW_021162763.1: 12318 bp; NW_021162764.1: 12183 bp; NW_021162765.1: 12257 bp; NW_021162766.1: 12260 bp; NW_021162767.1: 12309 bp; NW_021162768.1: 11586 bp; NW_021162769.1: 35003 bp; NW_021162770.1: 12334 bp; NW_021162771.1: 12248 bp; NW_021162772.1: 12310 bp; NW_021162773.1: 12294 bp; NW_021162774.1: 12204 bp; NW_021162775.1: 12206 bp; NW_021162776.1: 12314 bp; NW_021162777.1: 12386 bp; NW_021162778.1: 12344 bp; NW_021162779.1: 12101 bp; NW_021162780.1: 22552 bp; NW_021162781.1: 12382 bp; NW_021162782.1: 11940 bp; NW_021162783.1: 12042 bp; NW_021162784.1: 12187 bp; NW_021162785.1: 12533 bp; NW_021162786.1: 12614 bp; NW_021162787.1: 12558 bp; NW_021162788.1: 12524 bp; NW_021162789.1: 12451 bp; NW_021162790.1: 12577 bp; NW_021162791.1: 16440 bp; NW_021162792.1: 12603 bp; NW_021162793.1: 10722 bp; NW_021162794.1: 12730 bp; NW_021162795.1: 12735 bp; NW_021162796.1: 12617 bp; NW_021162797.1: 12605 bp; NW_021162798.1: 12700 bp; NW_021162799.1: 12656 bp; NW_021162800.1: 12782 bp; NW_021162801.1: 12738 bp; NW_021162802.1: 22949 bp; NW_021162803.1: 12656 bp; NW_021162804.1: 12593 bp; NW_021162805.1: 12864 bp; NW_021162806.1: 13007 bp; NW_021162807.1: 12702 bp; NW_021162808.1: 12589 bp; NW_021162809.1: 12649 bp; NW_021162810.1: 12804 bp; NW_021162811.1: 12690 bp; NW_021162812.1: 12815 bp; NW_021162813.1: 28396 bp; NW_021162814.1: 12398 bp; NW_021162815.1: 12743 bp; NW_021162816.1: 12714 bp; NW_021162817.1: 12730 bp; NW_021162818.1: 12883 bp; NW_021162819.1: 12752 bp; NW_021162820.1: 12459 bp; NW_021162821.1: 12714 bp; NW_021162822.1: 12857 bp; NW_021162823.1: 12934 bp; NW_021162824.1: 30612 bp; NW_021162825.1: 12987 bp; NW_021162826.1: 12519 bp; NW_021162827.1: 13025 bp; NW_021162828.1: 13122 bp; NW_021162829.1: 13000 bp; NW_021162830.1: 13136 bp; NW_021162831.1: 13048 bp; NW_021162832.1: 13128 bp; NW_021162833.1: 12996 bp; NW_021162834.1: 13132 bp; NW_021162835.1: 38403 bp; NW_021162836.1: 13199 bp; NW_021162837.1: 13158 bp; NW_021162838.1: 13172 bp; NW_021162839.1: 13291 bp; NW_021162840.1: 13314 bp; NW_021162841.1: 13236 bp; NW_021162842.1: 13272 bp; NW_021162843.1: 13331 bp; NW_021162844.1: 13318 bp; NW_021162845.1: 13362 bp; NW_021162846.1: 11310 bp; NW_021162847.1: 13438 bp; NW_021162848.1: 13399 bp; NW_021162849.1: 13338 bp; NW_021162850.1: 13254 bp; NW_021162851.1: 13051 bp; NW_021162852.1: 13388 bp; NW_021162853.1: 13470 bp; NW_021162854.1: 13489 bp; NW_021162855.1: 13617 bp; NW_021162856.1: 13537 bp; NW_021162857.1: 21541 bp; NW_021162858.1: 13465 bp; NW_021162859.1: 13580 bp; NW_021162860.1: 13567 bp; NW_021162861.1: 13681 bp; NW_021162862.1: 13579 bp; NW_021162863.1: 13572 bp; NW_021162864.1: 13688 bp; NW_021162865.1: 13552 bp; NW_021162866.1: 13585 bp; NW_021162867.1: 13614 bp; NW_021162868.1: 14947 bp; NW_021162869.1: 13577 bp; NW_021162870.1: 13370 bp; NW_021162871.1: 13883 bp; NW_021162872.1: 13774 bp; NW_021162873.1: 13859 bp; NW_021162874.1: 13872 bp; NW_021162875.1: 13134 bp; NW_021162876.1: 13732 bp; NW_021162877.1: 13929 bp; NW_021162878.1: 13801 bp; NW_021162879.1: 22858 bp; NW_021162880.1: 13902 bp; NW_021162881.1: 13861 bp; NW_021162882.1: 13953 bp; NW_021162883.1: 13998 bp; NW_021162884.1: 13888 bp; NW_021162885.1: 13803 bp; NW_021162886.1: 14014 bp; NW_021162887.1: 13991 bp; NW_021162888.1: 14204 bp; NW_021162889.1: 14295 bp; NW_021162890.1: 44378 bp; NW_021162891.1: 14056 bp; NW_021162892.1: 13917 bp; NW_021162893.1: 13939 bp; NW_021162894.1: 14104 bp; NW_021162895.1: 13238 bp; NW_021162896.1: 14209 bp; NW_021162897.1: 14220 bp; NW_021162898.1: 14211 bp; NW_021162899.1: 14304 bp; NW_021162900.1: 13549 bp; NW_021162901.1: 32155 bp; NW_021162902.1: 14220 bp; NW_021162903.1: 14158 bp; NW_021162904.1: 14272 bp; NW_021162905.1: 14321 bp; NW_021162906.1: 14317 bp; NW_021162907.1: 14433 bp; NW_021162908.1: 13953 bp; NW_021162909.1: 14498 bp; NW_021162910.1: 14325 bp; NW_021162911.1: 14328 bp; NW_021162912.1: 55060 bp; NW_021162913.1: 14389 bp; NW_021162914.1: 14413 bp; NW_021162915.1: 14460 bp; NW_021162916.1: 14549 bp; NW_021162917.1: 14368 bp; NW_021162918.1: 14509 bp; NW_021162919.1: 14702 bp; NW_021162920.1: 14508 bp; NW_021162921.1: 14393 bp; NW_021162922.1: 14602 bp; NW_021162923.1: 13704 bp; NW_021162924.1: 14195 bp; NW_021162925.1: 14594 bp; NW_021162926.1: 14544 bp; NW_021162927.1: 14591 bp; NW_021162928.1: 14671 bp; NW_021162929.1: 14570 bp; NW_021162930.1: 14577 bp; NW_021162931.1: 14690 bp; NW_021162932.1: 14648 bp; NW_021162933.1: 14727 bp; NW_021162934.1: 25116 bp; NW_021162935.1: 14639 bp; NW_021162936.1: 13671 bp; NW_021162937.1: 14564 bp; NW_021162938.1: 14580 bp; NW_021162939.1: 14794 bp; NW_021162940.1: 14810 bp; NW_021162941.1: 14798 bp; NW_021162942.1: 14675 bp; NW_021162943.1: 14848 bp; NW_021162944.1: 14717 bp; NW_021162945.1: 10281 bp; NW_021162946.1: 14243 bp; NW_021162947.1: 15014 bp; NW_021162948.1: 14871 bp; NW_021162949.1: 14993 bp; NW_021162950.1: 14950 bp; NW_021162951.1: 14818 bp; NW_021162952.1: 14866 bp; NW_021162953.1: 14986 bp; NW_021162954.1: 14931 bp; NW_021162955.1: 14882 bp; NW_021162956.1: 14945 bp; NW_021162957.1: 15028 bp; NW_021162958.1: 15180 bp; NW_021162959.1: 15060 bp; NW_021162960.1: 15321 bp; NW_021162961.1: 14722 bp; NW_021162962.1: 14720 bp; NW_021162963.1: 15258 bp; NW_021162964.1: 15563 bp; NW_021162965.1: 15316 bp; NW_021162966.1: 37796 bp; NW_021162967.1: 15318 bp; NW_021162968.1: 15330 bp; NW_021162969.1: 15517 bp; NW_021162970.1: 15589 bp; NW_021162971.1: 15588 bp; NW_021162972.1: 15338 bp; NW_021162973.1: 15529 bp; NW_021162974.1: 15700 bp; NW_021162975.1: 15590 bp; NW_021162976.1: 8909 bp; NW_021162977.1: 15493 bp; NW_021162978.1: 15549 bp; NW_021162979.1: 14868 bp; NW_021162980.1: 37717 bp; NW_021162981.1: 15306 bp; NW_021162982.1: 15859 bp; NW_021162983.1: 15679 bp; NW_021162984.1: 15846 bp; NW_021162985.1: 15570 bp; NW_021162986.1: 15710 bp; NW_021162987.1: 27507 bp; NW_021162988.1: 15776 bp; NW_021162989.1: 15726 bp; NW_021162990.1: 15964 bp; NW_021162991.1: 15790 bp; NW_021162992.1: 15927 bp; NW_021162993.1: 15944 bp; NW_021162994.1: 15879 bp; NW_021162995.1: 15880 bp; NW_021162996.1: 16121 bp; NW_021162997.1: 16080 bp; NW_021162998.1: 33825 bp; NW_021162999.1: 15822 bp; NW_021163000.1: 16025 bp; NW_021163001.1: 15997 bp; NW_021163002.1: 15858 bp; NW_021163003.1: 16094 bp; NW_021163004.1: 15959 bp; NW_021163005.1: 15799 bp; NW_021163006.1: 15823 bp; NW_021163007.1: 15985 bp; NW_021163008.1: 15913 bp; NW_021163009.1: 26049 bp; NC_005943.1: 16564 bp; \nNon-zero elements:  21,140,807\nMinimum (non zero): 3.59173195802721e-05\nMaximum:    0.06933028755391794\nNaN bins:   20943\n\n\n\n\n!hicMergeMatrixBins -m ../steps/SRR6502335_matrix.h5 -o SRR6502335_nb100 --numBins 100\n\n\n# Plot chr1 (NC_041755.1)\n\n!hicPlotMatrix -m SRR6502335_norm0_1_corrected.h5 -o SRR6502335_normcorrect_1.png --region NC_041755.1:0-105000000 --dpi 300\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: False\nINFO:hicexplorer.hicPlotMatrix:min: 3.59173195802721e-05, max: 0.06933028755391794\n\n\n\n\n!hicPlotMatrix -m SRR6502335_norm0_1_corrected.h5 -o SRR6502335_normcorrect_x.png --region NC_041774.1:0-105000000 --log1p --dpi 300\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: False\nINFO:hicexplorer.hicPlotMatrix:min: 3.59173195802721e-05, max: 0.06933028755391794",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#results-from-bowtie2---end-to-end",
    "href": "notebooks/01_hicexplorer.html#results-from-bowtie2---end-to-end",
    "title": "HiCExplorer using macaque data",
    "section": "Results from bowtie2 --end-to-end",
    "text": "Results from bowtie2 --end-to-end\nLet’s look at the summary logs for each of the samples\n\nSRR39 = HiCQCLog(\"../steps/bowtie2/SRR6502339_QC/QC.log\")\n\n\nimport os\nimport pandas as pd\nfrom IPython.display import display, HTML\n\n# Define the base directory\nbase_dir = \"../steps/bowtie2\"\n\n# List of sample directories (subfolders named SRR6502335_QC, SRR6502336_QC, ...)\nsample_dirs = [f\"SRR65023{n}_QC\" for n in range(35, 40)]\n\n\n# List of images to compare\nimage_filenames = [\n    \"distance.png\",\n    \"pairs_discarded.png\",\n    \"pairs_sequenced.png\",\n    \"read_orientation.png\",\n    \"unmappable_and_non_unique.png\"\n]\n\n# Create an empty dictionary to hold the image paths for each sample\ndata = {sample: [] for sample in sample_dirs}\n\n# Iterate over each sample folder and populate the paths for each image type\nfor sample_dir in sample_dirs:\n    sample_path = os.path.join(base_dir, sample_dir)\n    for image_filename in image_filenames:\n        image_path = os.path.join(sample_path, image_filename)\n        if os.path.exists(image_path):\n            # Use HTML to display the image in a cell\n            img_tag = f'&lt;img src=\"{image_path}\" width=\"400\"/&gt;'\n            data[sample_dir].append(img_tag)\n        else:\n            data[sample_dir].append('Image not found')\n\n# Create a DataFrame from the collected data\ndf = pd.DataFrame(data, index=image_filenames)\n\n# Display the DataFrame as HTML in Jupyter notebook with images\ndisplay(HTML(df.to_html(escape=False)))\n\n\n\n\n\nSRR6502335_QC\nSRR6502336_QC\nSRR6502337_QC\nSRR6502338_QC\nSRR6502339_QC\n\n\n\n\ndistance.png\n\n\n\n\n\n\n\npairs_discarded.png\n\n\n\n\n\n\n\npairs_sequenced.png\n\n\n\n\n\n\n\nread_orientation.png\n\n\n\n\n\n\n\nunmappable_and_non_unique.png\n\n\n\n\n\n\n\n\n\n\n\n%%bash\n\n# Use hicQC to compare:\n\n(echo ../steps/bowtie2/*_QC/QC.log)\n\nhicQC --logfiles $(echo ../steps/bowtie2/*_QC/QC.log) --labels \"SRR35\" \"SRR36\" \"SRR37\" \"SRR38\" \"SRR39\" --outputFolder ../steps/bowtie2/QC_all_samples\n\n../steps/bowtie2/SRR6502335_QC/QC.log ../steps/bowtie2/SRR6502336_QC/QC.log ../steps/bowtie2/SRR6502337_QC/QC.log ../steps/bowtie2/SRR6502338_QC/QC.log ../steps/bowtie2/SRR6502339_QC/QC.log\n\n\n\nplot_pngs_in_grid(\"../steps/bowtie2/QC_all_samples/\", ncol=3)\n\nPlotting all images in '../steps/bowtie2/QC_all_samples/*.png'",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#results-from-bowtie2---local",
    "href": "notebooks/01_hicexplorer.html#results-from-bowtie2---local",
    "title": "HiCExplorer using macaque data",
    "section": "Results from bowtie2 --local",
    "text": "Results from bowtie2 --local\n\n%%bash\n\n# Use hicQC to compare:\n\n(echo ../steps/bowtie2/*_QC/QC.log)\n\nhicQC --logfiles $(echo ../steps/bowtie2/local_mapping/*_QC/QC.log) --labels \"SRR35\" \"SRR36\" \"SRR37\" \"SRR38\" \"SRR39\" --outputFolder ../steps/bowtie2/local_mapping/QC_all_samples\n\n../steps/bowtie2/SRR6502335_QC/QC.log ../steps/bowtie2/SRR6502336_QC/QC.log ../steps/bowtie2/SRR6502337_QC/QC.log ../steps/bowtie2/SRR6502338_QC/QC.log ../steps/bowtie2/SRR6502339_QC/QC.log\n\n\n\nplot_pngs_in_grid(\"../steps/bowtie2/local_mapping/QC_all_samples/\")\n\nPlotting all images in '../steps/bowtie2/local_mapping/QC_all_samples/*.png'",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#comparing-qc-results-from-all-3-mappings",
    "href": "notebooks/01_hicexplorer.html#comparing-qc-results-from-all-3-mappings",
    "title": "HiCExplorer using macaque data",
    "section": "Comparing QC results from all 3 mappings",
    "text": "Comparing QC results from all 3 mappings\n\nimport os\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n# Define the base directories for the different analyses\nanalyses_dirs = [\n    '../steps/bwa/QC_all_samples',\n    '../steps/bowtie2/end-to-end/QC_all_samples',\n    '../steps/bowtie2/local/QC_all_samples'\n]\n\n# List of PNG files to compare (common to all analyses)\nimage_filenames = [\n    \"pairs_sequenced.png\",\n    \"pairs_discarded.png\",\n    \"unmappable_and_non_unique.png\",\n    \"distance.png\",\n    \"read_orientation.png\"\n]\n\n# Number of rows (one per image type) and columns (one per analysis)\nn_rows = len(image_filenames)\nn_cols = len(analyses_dirs)\n\n# Create a figure with subplots\nfig, axes = plt.subplots(n_rows, n_cols, figsize=(n_cols * 5, n_rows * 5))\n\n# Plot each image in the corresponding subplot\nfor row, image_filename in enumerate(image_filenames):\n    for col, analysis_dir in enumerate(analyses_dirs):\n        image_path = os.path.join(analysis_dir, image_filename)\n        if os.path.exists(image_path):\n            img = mpimg.imread(image_path)\n            axes[row, col].imshow(img)\n            axes[row, col].axis('off')  # Turn off axis labels\n        else:\n            axes[row, col].text(0.5, 0.5, 'Image not found', horizontalalignment='center', verticalalignment='center')\n        \n        # Set the title for the first row\n        if row == 0:\n            #axes[row, col].set_title(os.path.basename(analysis_dir), fontsize=14)\n            axes[row, col].set_title(analysis_dir.split(\"../steps/\")[1], fontsize=14)\n\n# Set row labels (for image types)\nfor row, image_filename in enumerate(image_filenames):\n    axes[row, 0].set_ylabel(image_filename, fontsize=14, labelpad=20)\n\n# Adjust layout for better spacing\nplt.tight_layout()\nplt.show()",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#filter-the-unplaced-scaffolds-from-the-mapping",
    "href": "notebooks/01_hicexplorer.html#filter-the-unplaced-scaffolds-from-the-mapping",
    "title": "HiCExplorer using macaque data",
    "section": "Filter the unplaced scaffolds from the mapping",
    "text": "Filter the unplaced scaffolds from the mapping\n\n!zcat \"../data/links/ucsc_ref/rheMac10.fa.gz\" | grep \"&gt;\" | sed 's/&gt;//' &gt; all_chromosomes.txt\n\n\n!grep -v \"_\" all_chromosomes.txt | sort -V &gt; standard_chromosomes.txt\n\n\n!cat standard_chromosomes.txt | tr '\\n' ' ' &gt; chromosome_order.txt\n\n\n%%bash \n\nhicAdjustMatrix -m ../steps/bowtie2/local/SRR6502335.cool \\\n--outFileName filtered_SRR6502335.cool \\\n--chromosomes $(cat standard_chromosomes.txt | tr '\\n' ' ')\n\n\n# Check the reduction in size\n\n!du -ha ../steps/bowtie2/local/*35.cool -d1\n\n76M ../steps/bowtie2/local/filtered_SRR6502335.cool\n80M ../steps/bowtie2/local/SRR6502335.cool",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#try-to-plot-the-new-filtered-matrix",
    "href": "notebooks/01_hicexplorer.html#try-to-plot-the-new-filtered-matrix",
    "title": "HiCExplorer using macaque data",
    "section": "Try to plot the new filtered matrix",
    "text": "Try to plot the new filtered matrix\nFirst, check the info on the cooler\n\n!hicInfo -m ../steps/bowtie2/local/filtered_SRR6502335.cool\n\n# Matrix information file. Created with HiCExplorer's hicInfo version 3.7.5\nFile:   ../steps/bowtie2/local/filtered_SRR6502335.cool\nDate:   2024-09-24T12:08:51.357930\nGenome assembly:    unknown\nSize:   285,408\nBin_length: 10000\nChromosomes:length: chr1: 223616942 bp; chr2: 196197964 bp; chr3: 185288947 bp; chr4: 169963040 bp; chr5: 187317192 bp; chr6: 179085566 bp; chr7: 169868564 bp; chr8: 145679320 bp; chr9: 134124166 bp; chr10: 99517758 bp; chr11: 133066086 bp; chr12: 130043856 bp; chr13: 108737130 bp; chr14: 128056306 bp; chr15: 113283604 bp; chr16: 79627064 bp; chr17: 95433459 bp; chr18: 74474043 bp; chr19: 58315233 bp; chr20: 77137495 bp; chrM: 16564 bp; chrX: 153388924 bp; chrY: 11753682 bp; \nNumber of chromosomes:  23\nNon-zero elements:  36,751,866\nThe following columns are available: ['chrom' 'start' 'end']\n\n\nGenerated by:   HiCMatrix-17.2\nCooler library version: cooler-0.10.2\nHiCMatrix url:  https://github.com/deeptools/HiCMatrix\n\n\n\n\n# Apparently, something went wrong when creating the different binSizes with hicBuildMatrix, so we will create and merge them manually and may convert them into .mcool\n\n!hicMergeMatrixBins --help\n\nusage: hicMergeMatrixBins --matrix matrix.h5 --outFileName OUTFILENAME\n                          --numBins int [--runningWindow] [--help] [--version]\n\nMerges bins from a Hi-C matrix. For example, using a matrix containing 5kb\nbins, a matrix of 50kb bins can be derived using --numBins 10. From one type\nof downstream analysis to another, different bin sizes are used. For example\nto call TADs, unmerged matrices are recommended while to display Hi-C\nmatrices, bins of approximately 2000bp usually yield the best representations\nwith `hicPlotMatrix` for small regions, and even larger bins (50kb) are\nrecommended for whole chromosome representations or for `hicPlotDistVsCounts`.\n\nRequired arguments:\n  --matrix matrix.h5, -m matrix.h5\n                        Matrix to reduce in h5 format. (default: None)\n  --outFileName OUTFILENAME, -o OUTFILENAME\n                        File name to save the resulting matrix. The output is\n                        also a .h5 file. But don't add the suffix. (default:\n                        None)\n  --numBins int, -nb int\n                        Number of bins to merge. (default: None)\n\nOptional arguments:\n  --runningWindow       Set to merge for using a running window of length\n                        --numBins. (default: False)\n  --help, -h            Show this help message and exit.\n  --version             show program's version number and exit\n\n\n\nMerge bins from the raw matrix\n\n!hicMergeMatrixBins -m ../steps/bowtie2/local/matrices/SRR6502335.cool -o ../steps/bowtie2/local/matrices/SRR6502335_50kb.cool -nb 5\n\nWARNING:hicexplorer.hicMergeMatrixBins:*WARNING*: The matrix is probably a corrected matrix that contains NaN bins. This bins can not be merged and are removed. It is preferable to first merge bins in a uncorrected  matrix and then correct the matrix. Correction factors, if present, are removed as well.\n\n\n\n!hicMergeMatrixBins -m ../steps/bowtie2/local/matrices/SRR6502335.cool -o ../steps/bowtie2/local/matrices/SRR6502335_100kb.cool -nb 10\n\nWARNING:hicexplorer.hicMergeMatrixBins:*WARNING*: The matrix is probably a corrected matrix that contains NaN bins. This bins can not be merged and are removed. It is preferable to first merge bins in a uncorrected  matrix and then correct the matrix. Correction factors, if present, are removed as well.\n\n\n\n\nMerge bins from the filtered matrix\n\n!hicMergeMatrixBins -m ../steps/bowtie2/local/matrices/filtered_SRR6502335.cool -o ../steps/bowtie2/local/matrices/filtered_SRR6502335_50kb.cool -nb 5\n\n\n!hicInfo -m ../steps/bowtie2/local/matrices/filtered_SRR6502335_50kb.cool\n\n# Matrix information file. Created with HiCExplorer's hicInfo version 3.7.5\nFile:   ../steps/bowtie2/local/matrices/filtered_SRR6502335_50kb.cool\nDate:   2024-09-24T15:52:47.957236\nGenome assembly:    unknown\nSize:   56,325\nChromosomes:length: chr1: 223616942 bp; chr2: 196190000 bp; chr3: 185270000 bp; chr4: 169963040 bp; chr5: 187280000 bp; chr6: 179085566 bp; chr7: 169850000 bp; chr8: 145679320 bp; chr9: 134110000 bp; chr10: 99517758 bp; chr11: 133066086 bp; chr12: 130040000 bp; chr13: 108730000 bp; chr14: 128040000 bp; chr15: 113283604 bp; chr16: 79627064 bp; chr17: 95410000 bp; chr18: 74460000 bp; chr19: 58310000 bp; chr20: 77137495 bp; chrX: 153380000 bp; chrY: 11250000 bp; \nNumber of chromosomes:  22\nNon-zero elements:  24,159,441\nThe following columns are available: ['chrom' 'start' 'end']\n\n\nGenerated by:   HiCMatrix-17.2\nCooler library version: cooler-0.10.2\nHiCMatrix url:  https://github.com/deeptools/HiCMatrix\n\n\n\n\n!hicMergeMatrixBins -m ../steps/bowtie2/local/matrices/filtered_SRR6502335.cool -o ../steps/bowtie2/local/matrices/filtered_SRR6502335_100kb.cool -nb 10\n\nWARNING:hicexplorer.hicMergeMatrixBins:*WARNING*: The matrix is probably a corrected matrix that contains NaN bins. This bins can not be merged and are removed. It is preferable to first merge bins in a uncorrected  matrix and then correct the matrix. Correction factors, if present, are removed as well.\n\n\n\n\nCreate plots (each chromosome separately) and compare filtered vs unfiltered matrices\n\n%%bash \n\nfor CHR in $(cat standard_chromosomes.txt)\ndo \n    echo $CHR\n    hicPlotMatrix -m ../steps/bowtie2/local/matrices/SRR6502335_50kb.cool --chromosomeOrder $CHR -o ../figures/bowtie2/local/raw_50kb_$CHR.png --dpi 200\n    hicPlotMatrix -m ../steps/bowtie2/local/matrices/filtered_SRR6502335_50kb.cool --chromosomeOrder $CHR -o ../figures/bowtie2/local/raw_filter_50kb_$CHR.png --dpi 200\ndone\n\nchr1\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr2\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr3\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr4\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr5\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr6\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr7\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr8\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr9\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr10\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr11\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr12\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr13\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr14\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr15\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr16\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr17\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr18\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr19\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr20\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrX\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrY\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nimport os\nfrom natsort import natsorted\nimport matplotlib.pyplot as plt\nfrom IPython.display import display, Image\n\n# Directory containing the PNG files\ndirectory = '../figures/bowtie2/local/'\n\n# List all raw_chr* files\nraw_files = [f for f in os.listdir(directory) if f.startswith('raw_50kb') and f.endswith('.png')]\n\n# List all raw_filter_chr* files\nraw_filter_files = [f for f in os.listdir(directory) if f.startswith('raw_filter_50kb') and f.endswith('.png')]\n\n# Sort files using natural sorting\nsorted_raw_files = natsorted(raw_files)\nsorted_raw_filter_files = natsorted(raw_filter_files)\n\npaired_files = list(zip(sorted_raw_files, sorted_raw_filter_files))\n\n# Plot the images side by side\nnum_pairs = len(paired_files)\nfig, axes = plt.subplots(num_pairs, 2, figsize=(15, 7 * num_pairs))\n\nfor i, (raw_file, raw_filter_file) in enumerate(paired_files):\n    # Plot raw image\n    raw_img_path = os.path.join(directory, raw_file)\n    raw_img = plt.imread(raw_img_path)\n    axes[i, 0].imshow(raw_img)\n    axes[i, 0].axis('off')\n    axes[i, 0].set_title(raw_file)\n\n    # Plot raw_filter image\n    raw_filter_img_path = os.path.join(directory, raw_filter_file)\n    raw_filter_img = plt.imread(raw_filter_img_path)\n    axes[i, 1].imshow(raw_filter_img)\n    axes[i, 1].axis('off')\n    axes[i, 1].set_title(raw_filter_file)\n\nplt.tight_layout()\nplt.show()",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#pooled-samples",
    "href": "notebooks/01_hicexplorer.html#pooled-samples",
    "title": "HiCExplorer using macaque data",
    "section": "Pooled samples",
    "text": "Pooled samples\n\nPool the samples (matrices) into one big matrix\n\n%%bash\n\n# Check the sizes of the (unmodified, 10kb binned) matrices\nhicInfo -m ../steps/bowtie2/local/matrices/SRR650233{5..9}.cool \\\n    | grep -E \"File|Size\" \\\n    | awk '/File/ {print; next} /Size/ {print $0 \"\\n\"}'\n\nFile:   ../steps/bowtie2/local/matrices/SRR6502335.cool\nSize:   298,615\n\nFile:   ../steps/bowtie2/local/matrices/SRR6502336.cool\nSize:   298,615\n\nFile:   ../steps/bowtie2/local/matrices/SRR6502337.cool\nSize:   298,615\n\nFile:   ../steps/bowtie2/local/matrices/SRR6502338.cool\nSize:   298,615\n\nFile:   ../steps/bowtie2/local/matrices/SRR6502339.cool\nSize:   298,615\n\n\n\n\n!hicSumMatrices -m $(echo ../steps/bowtie2/local/matrices/SRR650233{5..9}.cool) -o ../steps/bowtie2/local/matrices/pooled_10kb.cool\n\n\n%%bash \n\nhicAdjustMatrix -m ../steps/bowtie2/local/matrices/pooled_10kb.cool \\\n    --outFileName filtered_pooled_10kb.cool \\\n    --chromosomes $(cat chromosome_order.txt)\n\n\n!hicInfo -m ../steps/bowtie2/local/matrices/pooled_10kb.cool | grep -E 'File|Size|Number|Non'\n!echo \"\"\n!hicInfo -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool | grep -E 'File|Size|Number|Non'\n\nFile:   ../steps/bowtie2/local/matrices/pooled_10kb.cool\nSize:   298,615\nNumber of chromosomes:  2939\nNon-zero elements:  117,537,653\n\nFile:   ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool\nSize:   285,406\nNumber of chromosomes:  22\nNon-zero elements:  117,090,191\n\n\n\n\nCreate different bin sizes (hicMergeMatrixBins)\n\n%%bash \n\n# This command requires ~14G available memory. \n# hicMergeMatrixBins -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool -o ../steps/bowtie2/local/matrices/filtered_pooled_40kb.cool -nb 4\n\n\n%%bash \n\nhicMergeMatrixBins \\\n    -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool \\\n    -o ../steps/bowtie2/local/matrices/filtered_pooled_50kb.cool \\\n    -nb 5 \n\nhicMergeMatrixBins \\\n    -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool \\\n    -o ../steps/bowtie2/local/matrices/filtered_pooled_100kb.cool \\\n    -nb 10\n\nWARNING:hicexplorer.hicMergeMatrixBins:*WARNING*: The matrix is probably a corrected matrix that contains NaN bins. This bins can not be merged and are removed. It is preferable to first merge bins in a uncorrected  matrix and then correct the matrix. Correction factors, if present, are removed as well.\nWARNING:hicexplorer.hicMergeMatrixBins:*WARNING*: The matrix is probably a corrected matrix that contains NaN bins. This bins can not be merged and are removed. It is preferable to first merge bins in a uncorrected  matrix and then correct the matrix. Correction factors, if present, are removed as well.\n\n\n\n%%bash\nhicInfo -m ../steps/bowtie2/local/matrices/filtered_pooled_{10,50,100}kb.cool \\\n    | grep -E 'File|Size|Number|Non' \\\n    | sed '/Non/a\\\\'\n\nFile:   ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool\nSize:   285,406\nNumber of chromosomes:  22\nNon-zero elements:  117,090,191\n\nFile:   ../steps/bowtie2/local/matrices/filtered_pooled_50kb.cool\nSize:   56,129\nNumber of chromosomes:  22\nNon-zero elements:  73,496,938\n\nFile:   ../steps/bowtie2/local/matrices/filtered_pooled_100kb.cool\nSize:   28,066\nNumber of chromosomes:  22\nNon-zero elements:  55,337,833\n\n\n\n\n\nPlot the chromosomes (seperately)\n\n%%bash \n\nfor CHR in $(cat standard_chromosomes.txt)\ndo \n    echo $CHR\n    hicPlotMatrix -m ../steps/bowtie2/local/matrices/filtered_pooled_50kb.cool --chromosomeOrder $CHR -o ../figures/bowtie2/local/filter_pooled_50kb_$CHR.png --dpi 200\ndone\n\nchr1\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr2\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr3\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr4\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr5\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr6\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr7\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr8\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr9\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr10\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr11\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr12\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr13\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr14\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr15\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr16\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr17\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr18\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr19\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr20\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrX\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrY\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/\", suffix=\"filter_pooled_50kb_*\", ncol=2)\n\nPlotting all images in '../figures/bowtie2/local/*filter_pooled_50kb_*':\n\n\n\n\n\n\n\n\n\n\n\nDiagnostic plot for raw sample\n\n%%bash \n\nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool -o ../figures/bowtie2/local/raw/diag_filter_pooled_10kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/filtered_pooled_40kb.cool -o ../figures/bowtie2/local/raw/diag_filter_pooled_40kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/filtered_pooled_50kb.cool -o ../figures/bowtie2/local/raw/diag_filter_pooled_50kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/filtered_pooled_100kb.cool -o ../figures/bowtie2/local/raw/diag_filter_pooled_100kb.png & \n\nwait",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#normalize-to-the-smallest-read-count-hicnormalize--n-smallest--sz-1.0",
    "href": "notebooks/01_hicexplorer.html#normalize-to-the-smallest-read-count-hicnormalize--n-smallest--sz-1.0",
    "title": "HiCExplorer using macaque data",
    "section": "Normalize to the smallest read count (hicNormalize -n smallest -sz 1.0)",
    "text": "Normalize to the smallest read count (hicNormalize -n smallest -sz 1.0)\n\n!hicNormalize --help\n\nusage: hicNormalize --matrices MATRICES [MATRICES ...] --normalize\n                    {norm_range,smallest,multiplicative} --outFileName\n                    FILENAME [FILENAME ...]\n                    [--multiplicativeValue MULTIPLICATIVEVALUE]\n                    [--setToZeroThreshold SETTOZEROTHRESHOLD] [--help]\n                    [--version]\n\nNormalizes given matrices either to the smallest given read number of all matrices or to 0 - 1 range. However, it does NOT compute the contact probability.\n\nWe recommend to compute first the normalization (with hicNormalize) and correct the data (with hicCorrectMatrix) in a second step.\n\nRequired arguments:\n  --matrices MATRICES [MATRICES ...], -m MATRICES [MATRICES ...]\n                        The matrix (or multiple matrices) to get information\n                        about. HiCExplorer supports the following file\n                        formats: h5 (native HiCExplorer format) and cool.\n  --normalize {norm_range,smallest,multiplicative}, -n {norm_range,smallest,multiplicative}\n                        Normalize to a) 0 to 1 range, b) all matrices to the\n                        lowest read count of the given matrices (Default:\n                        smallest).\n  --outFileName FILENAME [FILENAME ...], -o FILENAME [FILENAME ...]\n                        Output file name for the Hi-C matrix.\n\nOptional arguments:\n  --multiplicativeValue MULTIPLICATIVEVALUE, -mv MULTIPLICATIVEVALUE\n                        Value to multiply if --normalize is set to\n                        multiplicative. (Default: 1).\n  --setToZeroThreshold SETTOZEROTHRESHOLD, -sz SETTOZEROTHRESHOLD\n                        A threshold to set all values after normalization to 0\n                        if smaller this threshold. Default value is 0 i.e.\n                        there is no effect.It is recommended to set it for the\n                        normalize mode \"smallest\" to 1.0. This parameter will\n                        influence the sparsity of the matrix by removing many\n                        values close to 0 in smallest normalization mode.\n  --help, -h            show this help message and exit\n  --version             show program's version number and exit\n\n\n\n%%bash \n\n# Try to utilize more than one core (if they have been requested) by submitting lines in the background (with '&')\n\nhicNormalize -m ../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool  -o ../steps/bowtie2/local/matrices/normsm_filtered_pooled_10kb.cool -n smallest -sz 1.0 &\nhicNormalize -m ../steps/bowtie2/local/matrices/filtered_pooled_40kb.cool  -o ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb.cool -n smallest -sz 1.0 &\nhicNormalize -m ../steps/bowtie2/local/matrices/filtered_pooled_50kb.cool  -o ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb.cool -n smallest -sz 1.0 &\nhicNormalize -m ../steps/bowtie2/local/matrices/filtered_pooled_100kb.cool -o ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb.cool -n smallest -sz 1.0 &\n\nwait \n\n\n%%bash\n\nhicInfo -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_{10,40,50,100}kb.cool | grep -E 'File|Size|Number|Non' | sed '/Non/a\\\\'\n\nFile:   ../steps/bowtie2/local/matrices/normsm_filtered_pooled_10kb.cool\nSize:   285,406\nNumber of chromosomes:  22\nNon-zero elements:  117,090,191\n\nFile:   ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb.cool\nSize:   70,164\nNumber of chromosomes:  22\nNon-zero elements:  79,495,904\n\nFile:   ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb.cool\nSize:   56,129\nNumber of chromosomes:  22\nNon-zero elements:  73,496,938\n\nFile:   ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb.cool\nSize:   28,066\nNumber of chromosomes:  22\nNon-zero elements:  55,337,833\n\n\n\n\nPlot the normalized, pooled matrix\n\n%%bash\n\nfor CHR in $(cat standard_chromosomes.txt)\ndo \n    echo $CHR\n    hicPlotMatrix -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb.cool --chromosomeOrder $CHR -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_40kb_$CHR.png --dpi 200\n    #hicPlotMatrix -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb.cool --chromosomeOrder $CHR -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_50kb_$CHR.png --dpi 200\ndone\n\nchr1\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr2\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr3\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr4\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr5\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr6\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr7\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr8\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr9\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr10\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr11\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr12\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr13\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr14\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr15\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr16\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr17\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr18\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr19\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchr20\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrX\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\nchrY\n\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\n\nDiagnose and correct the normalized, pooled matrix\n\n%%bash \n\nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_10kb.cool -o ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_10kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb.cool  -o ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_40kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb.cool  -o ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_50kb.png & \nhicCorrectMatrix diagnostic_plot -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb.cool -o ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_100kb.png & \n\nwait\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 0 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -3.261957134177215\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_100kb.png\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 0 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -3.3912234086628996\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_50kb.png\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 0 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -3.3260620737327184\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_40kb.png\n\nINFO:hicexplorer.hicCorrectMatrix:Removing 4762 zero value bins\nINFO:hicexplorer.hicCorrectMatrix:mad threshold -2.7562685931558937\nINFO:hicexplorer.hicCorrectMatrix:Saving diagnostic plot ../figures/bowtie2/local/normalized/diag_normsm_filter_pooled_10kb.png\n\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\nplt(\"../figures/bowtie2/local/normalized\", suffix=\"diag*\", ncol=4)\n\nplt(\"../figures/bowtie2/local/raw\", suffix=\"diag*\", ncol=4)\n\nPlotting all images in '../figures/bowtie2/local/normalized/*diag*':\n\n\n\n\n\n\n\n\n\nPlotting all images in '../figures/bowtie2/local/raw/*diag*':\n\n\n\n\n\n\n\n\n\n\n!hicCorrectMatrix correct --help\n\nusage: hicCorrectMatrix correct --matrix hic_matrix.h5 --filterThreshold -1.2 5 (Only if ICE)-out corrected_matrix.h5 \n\noptions:\n  -h, --help            show this help message and exit\n\nRequired arguments:\n  --matrix MATRIX, -m MATRIX\n                        Name of the Hi-C matrix to correct in .h5 format.\n                        (default: None)\n  --outFileName OUTFILENAME, -o OUTFILENAME\n                        File name to save the resulting matrix. The output is\n                        a .h5 file. (default: None)\n\nOptional arguments:\n  --correctionMethod STR\n                        Method to be used for matrix correction. It can be set\n                        to KR or ICE (Default: KR).\n  --filterThreshold FILTERTHRESHOLD FILTERTHRESHOLD, -t FILTERTHRESHOLD FILTERTHRESHOLD\n                        Removes bins of low or large coverage. Usually these\n                        bins do not contain valid Hi-C data or represent\n                        regions that accumulate reads and thus must be\n                        discarded. Use hicCorrectMatrix diagnostic_plot to\n                        identify the modified z-value thresholds. A lower and\n                        upper threshold are required separated by space, e.g.\n                        --filterThreshold -1.5 5. Applied only for ICE!\n                        (default: None)\n  --iterNum INT, -n INT\n                        Number of iterations to compute.only for ICE!\n                        (Default: 500).\n  --inflationCutoff INFLATIONCUTOFF\n                        Value corresponding to the maximum number of times a\n                        bin can be scaled up during the iterative correction.\n                        For example, an inflation cutoff of 3 will filter out\n                        all bins that were expanded 3 times or more during the\n                        iterative correctionself.Only for ICE! (default: None)\n  --transCutoff TRANSCUTOFF, -transcut TRANSCUTOFF\n                        Clip high counts in the top -transcut trans regions\n                        (i.e. between chromosomes). A usual value is 0.05.\n                        Only for ICE! (default: None)\n  --sequencedCountCutoff SEQUENCEDCOUNTCUTOFF\n                        Each bin receives a value indicating the fraction that\n                        is covered by reads. A cutoff of 0.5 will discard all\n                        those bins that have less than half of the bin\n                        covered. Only for ICE! (default: None)\n  --chromosomes CHROMOSOMES [CHROMOSOMES ...]\n                        List of chromosomes to be included in the iterative\n                        correction. The order of the given chromosomes will be\n                        then kept for the resulting corrected matrix (default:\n                        None)\n  --skipDiagonal, -s    If set, diagonal counts are not included. Only for\n                        ICE! (default: False)\n  --perchr              Normalize each chromosome separately. This is useful\n                        for samples from cells with uneven number of\n                        chromosomes and/or translocations. (default: False)\n  --filteredBed FILTEREDBED\n                        Print bins filtered our by --filterThreshold to this\n                        file (default: None)\n  --verbose             Print processing status. (default: False)\n  --version             show program's version number and exit\n\n\n\n\nCorrecting the matrices\nIs memory-intensive, and was therefore run in a workflow. However, I don’t know if it went well. It spent waay less MEM than documentation suggests.\n\n\nPlotting the corrected matrices\n\n\nChromosome 1\n\n%%bash \n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_10kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_10kb_corrected_chr1-20-80Mb.png \\\n    --region chr1:20000000-80000000 --log1p &\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_10kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_10kb_corrected_chr1-50-60Mb.png \\\n    --region chr1:50000000-60000000 --log1p &\n\nwait\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\n%%bash\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_50kb_corrected_chr1.png \\\n    --region chr1 --log1p\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\n%%bash\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_100kb_corrected_chr1.png \\\n    --region chr1 --log1p\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized/\", suffix=\"corrected*.png\", ncol=2)\n\nPlotting all images in '../figures/bowtie2/local/normalized/*corrected*.png':\n\n\n\n\n\n\n\n\n\n\n\nChr12 (as in Wang2019)\n\n%%bash \n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_100kb_corrected_chr12-1-105Mb.png \\\n    --region chr12:1-105000000 --log1p \\\n    --colorMap \"Reds\" &\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_50kb_corrected_chr12-60-70Mb.png \\\n    --region chr12:60000000-70000000 --log1p \\\n    --colorMap \"Reds\" &\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_40kb_corrected_chr12-60-70Mb.png \\\n    --region chr12:60000000-70000000 --log1p \\\n    --colorMap \"Reds\" &\n\nwait\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized/\", suffix=\"corrected_chr12*.png\", ncol=3)\n\nPlotting all images in '../figures/bowtie2/local/normalized/*corrected_chr12*.png':\n\n\n\n\n\n\n\n\n\n\n\nChrX\n\n%%bash \n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_100kb_corrected_chrX-1-105Mb.png \\\n    -t 'ChrX: 100kb bins' \\\n    --region chrX:1-105000000 --log1p \\\n    --colorMap \"Reds\" &\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_50kb_corrected_chrX-60-70Mb.png \\\n    -t 'ChrX: 50kb bins' \\\n    --region chrX:60000000-70000000 --log1p \\\n    --colorMap \"Reds\" &\n\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_40kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/normsm_filter_pooled_40kb_corrected_chrX-60-70Mb.png \\\n    -t 'ChrX: 40kb bins' \\\n    --region chrX:60000000-70000000 --log1p \\\n    --colorMap \"Reds\" &\n\nwait\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized/\", suffix=\"corrected_chrX*.png\", ncol=3)\n\nPlotting all images in '../figures/bowtie2/local/normalized/*corrected_chrX*.png':\n\n\n\n\n\n\n\n\n\n\n\nDist versus counts (P(s) in Wang2019?)\n\n!hicPlotDistVsCounts --help\n\nusage: hicPlotDistVsCounts --matrices MATRICES [MATRICES ...] --plotFile file\n                           name [--labels LABELS [LABELS ...]]\n                           [--skipDiagonal] [--maxdepth INT bp] [--perchr]\n                           [--chromosomeExclude CHROMOSOMEEXCLUDE [CHROMOSOMEEXCLUDE ...]]\n                           [--domains DOMAINS] [--outFileData OUTFILEDATA]\n                           [--plotsize PLOTSIZE PLOTSIZE] [--help] [--version]\n\nThis program creates distance vs. Hi-C counts plots. It can use several matrix\nfiles to compare them at once. If the `--perchr` option is given, each\nchromosome is plotted independently. When plotting multiple matrices, denser\nmatrices are scaled down to match the sum of the smallest matrix.\n\nRequired arguments:\n  --matrices MATRICES [MATRICES ...], -m MATRICES [MATRICES ...]\n                        Hi-C normalized (corrected) matrices. Each path should\n                        be separated by a space.\n  --plotFile file name, -o file name\n                        File name to save the file. The given file ending will\n                        be used to determine the image format. The available\n                        options are: .png, .emf, .eps, .pdf and .svg.\n\nOptional arguments:\n  --labels LABELS [LABELS ...]\n                        Label to assign to each matrix file. Each label should\n                        be separated by a space. Quote labels that contain\n                        spaces: E.g. --labels label1 \"labels 2\". If no labels\n                        are given then the file name is used.\n  --skipDiagonal, -s    If set, diagonal counts are not included.\n  --maxdepth INT bp     Maximum distance from diagonal to use. In other words,\n                        distances up to maxDepth are computed. Default is 3\n                        million bp.\n  --perchr              If given, computes and display distance versus Hi-C\n                        counts plots for each chromosome stored in the\n                        matrices passed to --matrices.\n  --chromosomeExclude CHROMOSOMEEXCLUDE [CHROMOSOMEEXCLUDE ...]\n                        Exclude the given list of chromosomes. This is useful\n                        for example to exclude the Y chromosome. The names of\n                        the chromosomes should be separated by space.\n  --domains DOMAINS     Bed file with domains coordinates: instead of\n                        evaluating the distance vs. Hi-C counts for intra\n                        chromosomal counts, compute it for intra-domains.\n  --outFileData OUTFILEDATA\n                        If given, the data underlying the plots is saved on\n                        this file.\n  --plotsize PLOTSIZE PLOTSIZE\n                        Width and height of the plot (in inches). Default is\n                        6*number of cols, 4 * number of rows. The maximum\n                        number of rows is 4. Example: --plotsize 6 5\n  --help, -h            show this help message and exit\n  --version             show program's version number and exit\n\n\n\n%%bash \n\nhicPlotDistVsCounts \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/distvscounts_100kb_corrected_chr.png \\\n    --perchr \\\n    --labels 'Pooled' \\\n    --plotsize 6 4 &\n\nhicPlotDistVsCounts \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/distvscounts_100kb_corrected_all.png \\\n    --labels 'Pooled' \\\n    --plotsize 6 4 &\n\nwait\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome all\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr1\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr2\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr3\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 47, diagonal len: 1791\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr4\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr5\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr6\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 49, diagonal len: 1724\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 50, diagonal len: 1723\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr7\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr8\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr9\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 48, diagonal len: 1265\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 49, diagonal len: 1264\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 50, diagonal len: 1263\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 51, diagonal len: 1262\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 52, diagonal len: 1261\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 53, diagonal len: 1260\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 54, diagonal len: 1259\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 55, diagonal len: 1258\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 56, diagonal len: 1257\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 57, diagonal len: 1256\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 58, diagonal len: 1255\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 59, diagonal len: 1254\n\nINFO:hicexplorer.hicPlotDistVsCounts:skipping rest of chromosome chr9. Too many emtpy diagonals\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr10\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 48, diagonal len: 908\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 49, diagonal len: 907\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 50, diagonal len: 906\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 51, diagonal len: 905\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 52, diagonal len: 904\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 53, diagonal len: 903\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 54, diagonal len: 902\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 55, diagonal len: 901\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 56, diagonal len: 900\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 57, diagonal len: 899\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 58, diagonal len: 898\n\nINFO:hicexplorer.hicPlotDistVsCounts:zero value for 59, diagonal len: 897\n\nINFO:hicexplorer.hicPlotDistVsCounts:skipping rest of chromosome chr10. Too many emtpy diagonals\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr11\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr12\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr13\n\nINFO:hicexplorer.hicPlotDistVsCounts:The scale factors used are: {'../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool': 1.0}\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr14\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr15\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr16\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr17\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr18\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr19\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chr20\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chrX\n\nINFO:hicexplorer.hicPlotDistVsCounts:processing chromosome chrY\n\nINFO:hicexplorer.hicPlotDistVsCounts:The scale factors used are: {'../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool': 1.0}\n\n\n\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized/\", suffix=\"distvscounts*.png\", ncol=2)\n\nPlotting all images in '../figures/bowtie2/local/normalized/*distvscounts*.png':",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/01_hicexplorer.html#chromatin-compartments",
    "href": "notebooks/01_hicexplorer.html#chromatin-compartments",
    "title": "HiCExplorer using macaque data",
    "section": "Chromatin Compartments",
    "text": "Chromatin Compartments\n\nHiCExplorer\n\n!hicPCA --help\n\nusage: hicPCA --matrix MATRIX --outputFileName OUTPUTFILENAME\n              [OUTPUTFILENAME ...]\n              [--whichEigenvectors WHICHEIGENVECTORS [WHICHEIGENVECTORS ...]]\n              [--format {bedgraph,bigwig}]\n              [--chromosomes CHROMOSOMES [CHROMOSOMES ...]]\n              [--method {dist_norm,lieberman}] [--ligation_factor]\n              [--extraTrack EXTRATRACK] [--histonMarkType HISTONMARKTYPE]\n              [--pearsonMatrix PEARSONMATRIX] [--obsexpMatrix OBSEXPMATRIX]\n              [--ignoreMaskedBins] [--help] [--version]\n\nComputes PCA eigenvectors for a Hi-C matrix.\n\n    $ hicPCA --matrix hic_matrix.h5 -o pca1.bedgraph pca2.bedgraph\n\nRequired arguments:\n  --matrix MATRIX, -m MATRIX\n                        HiCExplorer matrix in h5 format. (default: None)\n  --outputFileName OUTPUTFILENAME [OUTPUTFILENAME ...], -o OUTPUTFILENAME [OUTPUTFILENAME ...]\n                        File names for the result of the pca.Number of output\n                        files must match the number of computed eigenvectors.\n                        (default: None)\n\nOptional arguments:\n  --whichEigenvectors WHICHEIGENVECTORS [WHICHEIGENVECTORS ...], -we WHICHEIGENVECTORS [WHICHEIGENVECTORS ...]\n                        The list of eigenvectors that the PCA should compute\n                        e.g. 1 2 5 will return the first, second and fifth\n                        eigenvector. (Default: 1 2).\n  --format {bedgraph,bigwig}, -f {bedgraph,bigwig}\n                        Output format. Either bedgraph or bigwig (Default:\n                        bigwig).\n  --chromosomes CHROMOSOMES [CHROMOSOMES ...]\n                        List of chromosomes to be included in the correlation.\n                        (default: None)\n  --method {dist_norm,lieberman}\n                        possible methods which can be used to build the obs-\n                        exp matrix are dist_norm and lieberman (Default:\n                        dist_norm).\n  --ligation_factor     Setting this flag multiplies a scaling factor to each\n                        entry of the expected matrix to take care of the\n                        proximity ligation as has been explained in Homer\n                        software. This flag is only affective with dist_norm\n                        method and will be ignored if lieberman method is\n                        chosen. (default: False)\n  --extraTrack EXTRATRACK\n                        Either a gene track or a histone mark coverage file\n                        (preferably a broad mark) is needed to decide if the\n                        values of the eigenvector need a sign flip or not.\n                        Please consider: bed files are interpreted as gene\n                        tracks and bigwig files as histone marks. (default:\n                        None)\n  --histonMarkType HISTONMARKTYPE\n                        Set it to active or inactive. This is only necessary\n                        if a histon mark coverage file is given as an\n                        extraTrack (Default: active).\n  --pearsonMatrix PEARSONMATRIX, -pm PEARSONMATRIX\n                        Internally the input matrix is converted per\n                        chromosome to obs_exp matrix and consecutively to a\n                        Pearson matrix. Set this parameter to write the\n                        pearson matrix to a file. (default: None)\n  --obsexpMatrix OBSEXPMATRIX, -oem OBSEXPMATRIX\n                        Internally the input matrix is converted per\n                        chromosome to obs_exp matrix and consecutively to a\n                        Pearson matrix. Set this parameter to write the\n                        observe/expected matrix to a file. (default: None)\n  --ignoreMaskedBins    Mask bins are usually set to 0. This option removes\n                        the masked bins before the PCA is computed. Attention:\n                        this will lead to empty PCA regions. (default: False)\n  --help, -h            show the help message and exit\n  --version             show program's version number and exit\n\n\n\n%%bash\n\nhicPCA \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/pc{1,2,3}_100kb_corrected_chrX.bigwig \\\n    --chromosomes chrX \\\n    -we 1 2 3 &\n\nhicPCA \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/pc{1,2,3}_50kb_corrected_chrX.bigwig \\\n    --chromosomes chrX \\\n    -we 1 2 3 &\n\nwait\n\n\n%%bash \n\nfor NUM in 1 2 3; do\nhicPlotMatrix \\\n    -m ../steps/bowtie2/local/matrices/normsm_filtered_pooled_50kb_corrected.cool \\\n    -o ../figures/bowtie2/local/normalized/pc${NUM}_50kb_corrected_chrX.png \\\n    --bigwig ../figures/bowtie2/local/normalized/pc${NUM}_50kb_corrected_chrX.bigwig \\\n    --region chrX \\\n    -t \"ChrX:50kb bins: PC${NUM}\" \\\n    --log1p \\\n    --colorMap \"Reds\" \\\n    --dpi 100 &\ndone\n\nwait\n\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\nINFO:hicexplorer.hicPlotMatrix:Cooler or no cooler: True\n\n\n\nimport hicstuff\nimport importlib\nimportlib.reload(hicstuff)\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized\", suffix=\"pc*50kb*chrX.png\", ncol=3)\n\n\n\n\n\nThe X chromosome in 50kb bins and the first 3 PCs below. Made with HicExplorer.\n\n\n\n\n\nimport hicstuff\nimport importlib\nimportlib.reload(hicstuff)\nfrom hicstuff import plot_pngs_in_grid as plt\n\nplt(\"../figures/bowtie2/local/normalized\", suffix=\"pc*100kb*chrX.png\", ncol=3)\n\n\n\n\n\nThe X chromosome in 100kb bins and the first 3 PCs below. Made with HicExplorer.\n\n\n\n\n\n\nmatplotlib\n\n[f\"../figures/bowtie2/local/normalized/pc{NUM}_50kb_corrected_chrX.bigwig\" for NUM in range(1,4)]\n\n['../figures/bowtie2/local/normalized/pc1_50kb_corrected_chrX.bigwig',\n '../figures/bowtie2/local/normalized/pc2_50kb_corrected_chrX.bigwig',\n '../figures/bowtie2/local/normalized/pc3_50kb_corrected_chrX.bigwig']\n\n\n\nimport h5py\nimport pyBigWig\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Load Hi-C matrix from .cool file\ncool_file = '../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool'\nf = h5py.File(cool_file, 'r')\n\n\nfor key in list(f.keys()):\n    print(f\"{key}: {list(f[key])}\")\n\nbins: ['chrom', 'end', 'start', 'weight']\nchroms: ['length', 'name']\nindexes: ['bin1_offset', 'chrom_offset']\npixels: ['bin1_id', 'bin2_id', 'count']\n\n\n\nbins = f['bins']\nchroms = f['chroms']\nindexes = f['indexes']\npixels = f['pixels']\n\n\n# Determine the size of the matrix\nnum_bins = len(bins['start'])\nhic_matrix = np.zeros((num_bins, num_bins))\n\n\n# NB Uses 20Gb RAM\n# Fill the Hi-C matrix using pixels and indexes\nbin1_ids = pixels['bin1_id']\nbin2_ids = pixels['bin2_id']\ncounts = np.log1p(pixels['count'])  # Apply log1p transformation directly\n\n# Use NumPy's advanced indexing to fill the matrix\nhic_matrix[bin1_ids, bin2_ids] = counts\nhic_matrix[bin2_ids, bin1_ids] = counts  # Symmetric matrix\n\n\n# NB Uses 32 Gb RAM\n# Load bw files\n\nbw_files = [f\"../figures/bowtie2/local/normalized/pc{NUM}_100kb_corrected_chrX.bigwig\" for NUM in range(1,4)]\nbw_data = []\nfor bw_file in bw_files:\n    bw = pyBigWig.open(bw_file)\n    chroms = bw.chroms()\n    data = []\n    for chrom in chroms:\n        chrom_data = bw.values(chrom, 0, chroms[chrom])\n        data.append(chrom_data)\n    bw_data.append(np.concatenate(data))\n    bw.close()\n\n\n# NB Crashed at 64 Gb RAM w/ 50 kb bins\n\n# Plot Hi-C matrix\nfig, ax = plt.subplots(len(bw_files) + 1, 1, figsize=(10, 10), gridspec_kw={'height_ratios': [3] + [1] * len(bw_files)})\n\n# Plot Hi-C matrix with log1p transformation\nax[0].imshow(hic_matrix_dense, cmap='Reds', aspect='equal')\nax[0].set_title('Hi-C Matrix (log1p transformed)')\n\n# Plot bigwig tracks\nfor i, data in enumerate(bw_data):\n    ax[i + 1].plot(data)\n    ax[i + 1].set_title(f'PC{i + 1}')\n    ax[i + 1].set_xlim(0, len(data))\n\nplt.tight_layout()\nplt.show()\n\n\n\nFirst try Copilot\nI don´t want to spend more time on this now. Switching notebook to cooler.\n\nimport h5py\nimport pyBigWig\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport scipy.sparse as sp\nimport gc\n\n# Load Hi-C matrix from .cool file\ncool_file = '../steps/bowtie2/local/matrices/normsm_filtered_pooled_100kb_corrected.cool'\n\nwith h5py.File(cool_file, 'r') as f:\n    bins = f['bins']\n    pixels = f['pixels']\n\n    # Determine the size of the matrix\n    num_bins = len(bins['start'])\n    hic_matrix = sp.lil_matrix((num_bins, num_bins))\n\n    # Fill the Hi-C matrix using pixels\n    bin1_ids = pixels['bin1_id']\n    bin2_ids = pixels['bin2_id']\n    counts = np.log1p(pixels['count'])  # Apply log1p transformation directly\n\n    # Use sparse matrix to fill the matrix\n    hic_matrix[bin1_ids, bin2_ids] = counts\n    hic_matrix[bin2_ids, bin1_ids] = counts  # Symmetric matrix\n\n# Convert to CSR format for efficient arithmetic and matrix vector operations\nhic_matrix = hic_matrix.tocsr()\n\n# Load bw files and plot in chunks\nbw_files = [f\"../figures/bowtie2/local/normalized/pc{NUM}_100kb_corrected_chrX.bigwig\" for NUM in range(1, 4)]\n\nfig, ax = plt.subplots(len(bw_files) + 1, 1, figsize=(10, 10), gridspec_kw={'height_ratios': [3] + [1] * len(bw_files)})\n\n# Plot Hi-C matrix with log1p transformation\nax[0].imshow(hic_matrix.toarray(), cmap='Reds', aspect='equal')\nax[0].set_title('Hi-C Matrix (log1p transformed)')\n\n# Plot bigwig tracks\nfor i, bw_file in enumerate(bw_files):\n    with pyBigWig.open(bw_file) as bw:\n        chroms = bw.chroms()\n        data = []\n        for chrom in chroms:\n            chrom_data = bw.values(chrom, 0, chroms[chrom])\n            data.append(chrom_data)\n        data = np.concatenate(data)\n        ax[i + 1].plot(data)\n        ax[i + 1].set_title(f'PC{i + 1}')\n        ax[i + 1].set_xlim(0, len(data))\n\nplt.tight_layout()\nplt.show()\n\n# Free memory\ndel hic_matrix\ndel data\ngc.collect()\n\n\n\n\n\n\n\n\n9",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>HiCExplorer using macaque data</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html",
    "href": "notebooks/02_open2c_framework.html",
    "title": "Open2C framework",
    "section": "",
    "text": "pairtools: Convert sequencing data to a list of contacts",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#check-out-the-bamfiles",
    "href": "notebooks/02_open2c_framework.html#check-out-the-bamfiles",
    "title": "Open2C framework",
    "section": "Check out the bamfiles",
    "text": "Check out the bamfiles\n\n%%bash \n\ncd ../steps/bowtie2/local/bamfiles\n\nsamtools view SRR6502335_1.bam | head -n1\n\nSRR6502335.1    16  chr2    194419849   44  149M1S  *   0   0   AGAGAGAAAGAGTAGAAGGGAGAAACAAAGGGCAGGAGAGGGGATAGATGAAGAGGAACTAGACTTTGCACATATTGGCTGGCAATGATGGAATAGTCCAGTTTCAAAGAGTGAGATCTTGTAGTTATCTTCTCATTTATTCACTTAATN  &lt;FFAF-J7AJJA7AFA77-&lt;AAF-7-A7-7A7-FJ&lt;FA7FAA-7--AAA--&lt;&lt;A7FFJAJJJA&lt;-A-F7F7&lt;-A&lt;F7---&lt;A&lt;JJFFAAF7JFAAJ&lt;FFJF-&lt;-FJJFFFFFJFAF&lt;&lt;-AJJJJJFFF-JFJFFJF7AFJFFFAA-AAA#  AS:i:285    XN:i:0  XM:i:2  XO:i:0  XG:i:0  NM:i:2  MD:Z:44G78A25   YT:Z:UU\n\n\n\n%%bash \n\ncd ../steps/bowtie2/local/bamfiles/paired\n\nsamtools view SRR6502335_paired.bam | head -n1\n\nSRR6502335.1    0   chr2    194419717   44  10S140M *   0   0   NTTCTGGATCGATCATTTTTACATTATTTTTGCCTATGAACCAACTTTCAAAATTATTTCTCGTTTAAAATACAATTCAATGAGGTATTCATTTTTGTCTGGGGGGAAAGATGGAAGGTAGGAAGAAGAAAGAAGTGAAGAAAGAGAGAA  #AAAFAF&lt;JJJJJJFJJJJJJJ-JJFJJJJJ&lt;JAA-FF-FFAAFJFJFJJ--7&lt;F-AJFFAJFFFJF-7FF-FJF&lt;FFJFJFFF&lt;JA&lt;AJA7&lt;AJ&lt;AJFJ&lt;---77-7--7-7&lt;AAFFAF77&lt;FJ-&lt;&lt;--7-AFJ---7AF&lt;AAF--7&lt;7  AS:i:275    XN:i:0  XM:i:1  XO:i:0  XG:i:0  NM:i:1  MD:Z:125G14 YT:Z:UU\n\n\n\nI had to decompress the reference genome\nTo make samtools faidx work (or compress with bgzip, not gunzip)\n\n%%bash \n\ncd /home/sojern/hic-spermatogenesis/data/macaque_raw/ucsc_ref\n\ngunzip -k rheMac10.fa.gz",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#pair-and-sort-the-bamfiles-workfflow---turned-out-not-to-work-no-mapped-reads-were-left-after-filtering",
    "href": "notebooks/02_open2c_framework.html#pair-and-sort-the-bamfiles-workfflow---turned-out-not-to-work-no-mapped-reads-were-left-after-filtering",
    "title": "Open2C framework",
    "section": "Pair and sort the bamfiles (workfflow) - turned out not to work (no mapped reads were left after filtering)",
    "text": "Pair and sort the bamfiles (workfflow) - turned out not to work (no mapped reads were left after filtering)\n\nfrom IPython.display import display, Markdown\n\n# Read the content of the Python file\nwith open('../gwf_pair_alignments.py', 'r') as file:\n    file_content = file.read()\n\n# Display the content as Markdown\ndisplay(Markdown(f\"```python\\n{file_content}\\n```\"))\n\n# %% [markdown]\n# ---\n# title: \"gwf_bowtie_local\"\n# author: Søren Jørgensen\n# date: last-modified\n# execute: \n#   enabled: false\n# ---\n\n# %%\nfrom gwf import *\nimport glob\nimport os.path as op\n\n#######################################\n#\n# GWF workflow to pair alignments from mate-pair sequencing, after mapping to the reference individually.\n# After mapping, the mate-pairs are merged with `samtools merge` (another workflow) and then parsed with `pairtools parse`. \n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_gwf_pair_alignments.py status\n#\n# Workflow:\n#   1   pairtools parse : Parse the fastq files into pairs (after merging with `samtools merge`)\n#\n# Footnote: always activate the conda environment before running the workflow:\n# source $(conda info --base)/etc/profile.d/conda.sh\n# conda activate env_name\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef pair_sort_alignments(chromsizes, bam_merged, sorted_pairs):\n    \"\"\"Pair the merged alignments from mate-pair sequencing with `pairtools parse`\"\"\"\n    inputs = [bam_merged]\n    outputs = [f\"{bam_merged}_parsed.stats\", \n               sorted_pairs]\n    options = {'cores':12, 'memory':\"4g\", 'walltime':\"01:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools parse \\\n    -c {chromsizes} \\\n    --drop-sam --drop-seq \\\n    --output-stats {bam_merged}_parsed.stats \\\n    --add-columns mapq \\\n    --assembly rheMac10 --no-flip \\\n    --walks-policy mask \\\n    {bam_merged} | \\\npairtools sort -o {sorted_pairs} \n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef dedup(sorted_pairs, ):\n    \"\"\"Deduplicate the sorted pairs with `pairtools dedup`\"\"\"\n\n    pairs_prefix = sorted_pairs.split(\".sorted\")[0]\n    inputs = [sorted_pairs]\n    outputs = [f\"{pairs_prefix}.nodups.pairs.gz\",\n               f\"{pairs_prefix}.nodups.bam\",\n               f\"{pairs_prefix}.unmapped.pairs.gz\",\n               f\"{pairs_prefix}.unmapped.bam\",\n               f\"{pairs_prefix}.dups.pairs.gz\",\n               f\"{pairs_prefix}.dups.bam\",\n               f\"{pairs_prefix}.dedup.stats\"]\n    options = {'cores':12, 'memory': \"4g\", 'walltime': \"01:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools dedup \\\n    --max-mismatch 3 \\\n    --mark-dups \\\n    --output \\\n        &gt;(pairtools split \\\n            --output-pairs {pairs_prefix}.nodups.pairs.gz \\\n            --output-sam {pairs_prefix}.nodups.bam \\\n         ) \\\n    --output-unmapped \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.unmapped.pairs.gz \\\n            --output-sam {pairs_prefix}.unmapped.bam \\\n         ) \\\n    --output-dups \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.dups.pairs.gz \\\n            --output-sam {pairs_prefix}.dups.bam \\\n            ) \\\n    --output-stats {pairs_prefix}.dedup.stats \\\n    {sorted_pairs}\n\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n#############################################\n################ Targets ####################\n#############################################\n\n# Define the chromsizes file\nchromsizes = \"data/links/ucsc_ref/misc/rheMac10.chrom.sizes\"\n\n# Find the merged bam files\nmerged_bams = gwf.glob(\"steps/bowtie2/local/bamfiles/paired/*_paired.bam\")\n\nsorted_bams = sorted(merged_bams)\n\n\nfor inbam in sorted_bams:\n    base = op.basename(inbam)\n    prefix = base.split(\"_paired\")[0]\n    \n    outdir = \"steps/bowtie2/local/bamfiles/paired/\"\n    outfile = f\"{base.split(\"_paired\")[0]}\" + \".sorted.pairs.gz\"\n    out_sorted_pairs = op.join(outdir, outfile)\n\n    gwf.target_from_template(f\"pair_sort_{prefix}\",\n                            pair_sort_alignments(chromsizes, inbam, out_sorted_pairs))\n    \n    gwf.target_from_template(f\"dedup_{prefix}\",\n                            dedup(out_sorted_pairs))",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#map-the-reads-again-but-as-pe-reads-in-stead-cooler-recommendation-workflow",
    "href": "notebooks/02_open2c_framework.html#map-the-reads-again-but-as-pe-reads-in-stead-cooler-recommendation-workflow",
    "title": "Open2C framework",
    "section": "Map the reads again but as PE reads in stead (cooler recommendation, workflow)",
    "text": "Map the reads again but as PE reads in stead (cooler recommendation, workflow)\n\nfrom IPython.display import display, Markdown\n\n# Read the content of the Python file\nwith open('../gwf_bwamem.py', 'r') as file:\n    file_content = file.read()\n\n# Display the content as Markdown\ndisplay(Markdown(f\"```python\\n{file_content}\\n```\"))\n\n# %% [markdown]\n# ---\n# title: \"gwf_map_reads\"\n# author: Søren Jørgensen\n# date: last-modified\n# execute: \n#   enabled: false\n# ---\n\n# %%\nfrom gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to map Hi-C reads to pairs with `bwa` and `samtools`.\n# Pairs are generated with `pairtools parse` and deduplicated with `pairtools dedup`.\n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_bwamem.py status\n#\n# Workflow:\n#   1a bwa_index        : [Reference genome] Index the reference genome with `bwa index`\n#   1b sam_index        : [Reference genome] Index the fasta again with `samtools faidx``\n#   2  bwa_map          : Map reads (PE) to the reference with `bwa mem` \n#   3  pair_sort        : Pair the merged alignments from mate-pair sequencing with `pairtools parse`, \n#                         then sort with `pairtools sort`\n#   4  dedup            : Deduplicate the sorted pairs with `pairtools dedup`  \n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef bwa_index(ref_genome):\n    \"\"\"Template for indexing the reference genome with bwa\"\"\"\n    inputs  = [ref_genome]\n    outputs = [f\"{ref_genome}.amb\", \n               f\"{ref_genome}.ann\", \n               f\"{ref_genome}.bwt\", \n               f\"{ref_genome}.pac\", \n               f\"{ref_genome}.sa\"]\n    options = {'cores':1, 'memory': \"5g\", 'walltime':\"02:00:00\"}\n    spec = f'''\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa index -p {ref_genome} -a bwtsw {ref_genome}\n'''\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef sam_index(ref_genome):\n    \"\"\"Creating a Fasta index. `bwa mem` also needs a fasta index generated by samtools\"\"\"\n    inputs = [ref_genome]\n    outputs = [f\"{ref_genome}.fai\"]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nsamtools faidx {ref_genome}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef bwa_map(ref_genome, mate_1, mate_2, out_bam):\n    \"\"\"\n    Template for mapping reads to a reference genome using `bwa` and `samtools`. \n    NB! Here, we map the mates together, as bwa states it is no problem for Hi-C reads. \n    \"\"\"\n    threads = 32\n    inputs = [f\"{ref_genome}.amb\", \n              f\"{ref_genome}.ann\", \n              f\"{ref_genome}.bwt\", \n              f\"{ref_genome}.pac\", \n              f\"{ref_genome}.sa\", \n              f\"{ref_genome}.fai\",\n              mate_1, mate_2]\n    outputs = [out_bam]\n    options = {'cores':threads, 'memory': \"32g\", 'walltime':\"06:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa mem -t {threads} -SP {ref_genome} {mate_1} {mate_2} &gt; {out_bam}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef pair_sort_alignments(chromsizes, bam_merged, sorted_pairs):\n    \"\"\"Pair the merged alignments from mate-pair sequencing with `pairtools parse`\"\"\"\n    inputs = [bam_merged]\n    outputs = [f\"{bam_merged}_parsed.stats\", \n               sorted_pairs]\n    options = {'cores':12, 'memory':\"4g\", 'walltime':\"02:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools parse \\\n    -c {chromsizes} \\\n    --drop-sam --drop-seq \\\n    --output-stats {bam_merged}_parsed.stats \\\n    --add-columns mapq \\\n    --assembly rheMac10 --no-flip \\\n    --walks-policy mask \\\n    {bam_merged} | \\\npairtools sort -o {sorted_pairs} \n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef dedup(sorted_pairs):\n    \"\"\"Deduplicate the sorted pairs with `pairtools dedup`\"\"\"\n    pairs_prefix = sorted_pairs.split(\".sorted\")[0]\n    inputs = [sorted_pairs]\n    outputs = [f\"{pairs_prefix}.nodups.pairs.gz\",\n               f\"{pairs_prefix}.nodups.bam\",\n               f\"{pairs_prefix}.unmapped.pairs.gz\",\n               f\"{pairs_prefix}.unmapped.bam\",\n               f\"{pairs_prefix}.dups.pairs.gz\",\n               f\"{pairs_prefix}.dups.bam\",\n               f\"{pairs_prefix}.dedup.stats\"]\n    options = {'cores':12, 'memory': \"4g\", 'walltime': \"01:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools dedup \\\n    --max-mismatch 3 \\\n    --mark-dups \\\n    --output \\\n        &gt;(pairtools split \\\n            --output-pairs {pairs_prefix}.nodups.pairs.gz \\\n            --output-sam {pairs_prefix}.nodups.bam \\\n         ) \\\n    --output-unmapped \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.unmapped.pairs.gz \\\n            --output-sam {pairs_prefix}.unmapped.bam \\\n         ) \\\n    --output-dups \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.dups.pairs.gz \\\n            --output-sam {pairs_prefix}.dups.bam \\\n            ) \\\n    --output-stats {pairs_prefix}.dedup.stats \\\n    {sorted_pairs}\n\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\n#############################################\n############### Create targets ##############\n#############################################\n\n# Do stuff with the [unpacked] reference genome\nref_genome = \"data/links/ucsc_ref/rheMac10.fa\"\n\nT1a = gwf.target_from_template(f\"bwa_index_{os.path.basename(ref_genome)}\", \n                               bwa_index(ref_genome=ref_genome))\nT1b = gwf.target_from_template(f\"sam_index_{os.path.basename(ref_genome)}\", \n                               sam_index(ref_genome=ref_genome))\n\n\n# Define the chromsizes file\nchromsizes = \"data/links/ucsc_ref/misc/rheMac10.chrom.sizes\"\n\n\n# Locate Hi-C reads \nfastq_folder = \"data/links/macaque_fastq/\"\nfastq_files = glob.glob(os.path.join(fastq_folder, \"*.fastq.gz\"))\n\n# Pair the files (make sure they have the same base name prefix):\nfastq_files.sort()\npaired_fastq_files = list(zip(fastq_files[::2], fastq_files[1::2]))\n\nfor f1,f2 in paired_fastq_files:\n    \n    # Get the base names\n    basename_1 = os.path.basename(f1).split('.fast')[0]\n    basename_2 = os.path.basename(f2).split('.fast')[0]\n    \n    # Combine pair names\n    pairname = os.path.commonprefix([basename_1, basename_2]).split('_')[0]\n\n    # Create the output bam filenames\n    bam_dir = f\"steps/bwa/PE/bamfiles/\"\n    bam_file = pairname + \".PE.bam\"\n    out_bam = os.path.join(bam_dir, bam_file)\n\n    # Create targets for mapping\n    T2 = gwf.target_from_template(f\"bwa_map_{pairname}\", \n                                  bwa_map(ref_genome=ref_genome, \n                                          mate_1=f1, mate_2=f2, \n                                          out_bam=out_bam))\n    \n    # Create targets for sorting the pairs\n    pair_dir = \"steps/bwa/PE/pairs/\"\n    pair_file = pairname + \".sorted.pairs.gz\"\n    sorted_pairs = os.path.join(pair_dir, pair_file)\n\n    T3 = gwf.target_from_template(f\"pair_sort_{pairname}\", \n                                  pair_sort_alignments(chromsizes=chromsizes, \n                                                       bam_merged=out_bam, \n                                                       sorted_pairs=sorted_pairs))\n    \n    T4 = gwf.target_from_template(f\"dedup_{pairname}\", dedup(sorted_pairs=sorted_pairs))",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#check-the-sorted-pairs",
    "href": "notebooks/02_open2c_framework.html#check-the-sorted-pairs",
    "title": "Open2C framework",
    "section": "Check the sorted pairs",
    "text": "Check the sorted pairs\n\n%%bash\n\n#cd ../steps/bowtie2/local/bamfiles/paired\ncd ../steps/bwa/PE/pairs\n\n# Unique pairs:\ngzip -dc SRR6502339.nodups.pairs.gz | grep -v '#' |  head -n 5\n\necho \"--\"\n\n# Only dups\ngzip -dc SRR6502339.dups.pairs.gz | grep -v '#' |  head -n 5\n\necho \"--\"\n\nSRR6502339.38272510 chr1    898 chr1    1026    +   -   UU  3   3\nSRR6502339.13727657 chr1    976 chr1    175669579   +   -   UR  4   60\nSRR6502339.67930411 chr1    1035    chr1    99209   +   -   UU  22  60\nSRR6502339.90172213 chr1    1134    chr1    11385306    -   +   UR  9   60\nSRR6502339.53849219 chr1    5186    chr1    56858619    +   -   UR  2   60\n--\nSRR6502339.53849978 chr1    5186    chr1    56858619    +   -   DD  2   60\nSRR6502339.67632192 chr1    13335   chr1    370581  +   -   DD  3   7\nSRR6502339.92006828 chr1    16215   chr1    16560   +   -   DD  35  12\nSRR6502339.71065550 chr1    19644   chr1    62483   +   -   DD  23  60\nSRR6502339.89600080 chr1    19644   chr1    62483   +   -   DD  25  60\n--\n\n\n[main_samview] fail to read the header from \"SRR6502339.nodups.bam\".",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#visualize-stats-pairtools-stats",
    "href": "notebooks/02_open2c_framework.html#visualize-stats-pairtools-stats",
    "title": "Open2C framework",
    "section": "Visualize Stats: pairtools stats",
    "text": "Visualize Stats: pairtools stats\nIt might be the same stats that are (optionally) returned from pairtools parse.\nLet’s look at the parsed stats in a nice way:\n\nIf it is not the same, then run this command on all the sorted pairs.\n\n%%bash \n\ncd ../steps/bwa/PE/pairs\n\n#pairtools stats SRR6502339.sorted.pairs.gz -o test.stats\n\n\n\nOtherwise, just use MultiQC\n\nGenerate the MultiQC files\n\n\nNow visualize:\n\nAll results merged (before dedup)\n\nfrom IPython.display import IFrame\n\nIFrame(src='../steps/bwa/PE/bamfiles/Fibroblasts_all_multiqc_report.html', width=1400, height=900)\n\n\n        \n        \n\n\n\n%%bash \n\ncd ../steps/bwa/PE/pairs/\n\nmultiqc -i Fibroblasts_all.dedup --no-data-dir  *.stats \n\n\n/// d=807531;https://multiqc.info\u001b\\MultiQC;;\u001b\\ 🔍 v1.25.1\n\n     update_config | Report title: Fibroblasts_all.dedup\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/SRR6502335.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/SRR6502336.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/SRR6502337.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/SRR6502338.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/SRR6502339.dedup.stats\n         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 5/5  .dedup.statsmSRR6502338.dedup.stats\n         pairtools | Found 5 reports\n     write_results | Data        : None\n     write_results | Report      : Fibroblasts_all.dedup_multiqc_report.html\n           multiqc | MultiQC complete\n\n\n\nfrom IPython.display import IFrame\n\nIFrame(src='../steps/bwa/PE/pairs/Fibroblasts_all.dedup_multiqc_report.html', width=1400, height=900)",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#dedup-the-pairs-and-visualize-stats-again",
    "href": "notebooks/02_open2c_framework.html#dedup-the-pairs-and-visualize-stats-again",
    "title": "Open2C framework",
    "section": "Dedup the pairs and visualize stats again",
    "text": "Dedup the pairs and visualize stats again\nThe pairs was deduplicated with a gwf workflow gwf_bwamem.py\n\n%%bash \n\ncd ../steps/bwa/PE/pairs/sorted\n\nmultiqc -i fibroblast.dedup --no-data-dir *.stats\n\n\n/// d=271458;https://multiqc.info\u001b\\MultiQC;;\u001b\\ 🔍 v1.25.1\n\n     update_config | Report title: fibroblast.dedup\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/sorted/SRR6502335.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/sorted/SRR6502336.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/sorted/SRR6502337.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/sorted/SRR6502338.dedup.stats\n       file_search | Search path: /faststorage/project/hic-spermatogenesis/people/sojern/hic-spermatogenesis/steps/bwa/PE/pairs/sorted/SRR6502339.dedup.stats\n         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 5/5  0/5  \n         pairtools | Found 5 reports\n     write_results | Data        : None\n     write_results | Report      : fibroblast.dedup_multiqc_report.html\n           multiqc | MultiQC complete\n\n\n\nfrom IPython.display import IFrame\n\nIFrame(src='../steps/bwa/PE/pairs/sorted/fibroblast.dedup_multiqc_report.html', width=1400, height=900)",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#introduction",
    "href": "notebooks/02_open2c_framework.html#introduction",
    "title": "Open2C framework",
    "section": "Introduction",
    "text": "Introduction\nFirst, we have to check the data output from HiCExplorer. The output is a .cool file, which is a binary format for storing Hi-C data. The file contains the binned contact matrix and the genomic coordinates of the bins.\nThe cooler package is a Python library for working with .cool files. It provides tools for reading, writing, and manipulating Hi-C data. The cooltools package is a collection of tools for analyzing Hi-C data, including normalization, visualization, and interaction calling.",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#follow-cooler-walkthrough-from-the-documentation",
    "href": "notebooks/02_open2c_framework.html#follow-cooler-walkthrough-from-the-documentation",
    "title": "Open2C framework",
    "section": "Follow cooler walkthrough from the documentation",
    "text": "Follow cooler walkthrough from the documentation\n\n# Import the packages we will use\nimport os.path as op\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas\nimport h5py\n\nimport cooler\n\n\n# The following directive activates inline plotting\n%matplotlib inline\n\n\n# Define the filepath (I choose the uncorrected matrix)\n\nfilepath = \"../steps/bowtie2/local/matrices/filtered_pooled_10kb.cool\"\n\n\nDirect access with h5py\n\nh5 = h5py.File(filepath, 'r')\nh5\n\n&lt;HDF5 file \"filtered_pooled_10kb.cool\" (mode r)&gt;\n\n\n\nh5.keys()\n\n&lt;KeysViewHDF5 ['bins', 'chroms', 'indexes', 'pixels']&gt;\n\n\n\nh5['pixels']\n\n&lt;HDF5 group \"/pixels\" (3 members)&gt;\n\n\n\nlist(h5['pixels'].keys())\n\n['bin1_id', 'bin2_id', 'count']\n\n\nh5py dataset objects are views onto the data on disk\n\nh5['pixels']['bin2_id']\n\n&lt;HDF5 dataset \"bin2_id\": shape (117090191,), type \"&lt;i4\"&gt;\n\n\nSlicing or indexing returns a numpy array in memory.\n\nh5['pixels']['bin2_id'][:10]\n\narray([   0,    9,   30,   33,  124,  127,  145,  756, 1167, 2416],\n      dtype=int32)\n\n\n\nh5['pixels']['count'][:10]\n\narray([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])\n\n\n\nh5.close()\n\nThe Python cooler package is just a thin wrapper over h5py.\n\nIt lets you access the data tables as Pandas data frames and series.\nIt also provides a matrix abstraction: letting you query the upper triangle pixel table as if it were a full rectangular sparse matrix via SciPy.\n\n\n\nThe Cooler class\nAccepts a file path or an open HDF5 file object.\nNOTE: Using a filepath allows the Cooler object to be serialized/pickled since the file is only opened when needed\n\nc = cooler.Cooler(filepath)\n\n\nc.info\n\n{'bin-size': 10000,\n 'bin-type': 'fixed',\n 'creation-date': '2024-09-24T21:20:38.656143',\n 'format': 'HDF5::Cooler',\n 'format-url': 'https://github.com/mirnylab/cooler',\n 'format-version': 3,\n 'generated-by': 'HiCMatrix-17.2',\n 'generated-by-cooler-lib': 'cooler-0.10.2',\n 'genome-assembly': 'unknown',\n 'metadata': {'format': 'HDF5::Cooler',\n  'format-url': 'https://github.com/mirnylab/cooler',\n  'generated-by': 'HiCMatrix-17.2',\n  'generated-by-cooler-lib': 'cooler-0.10.2',\n  'tool-url': 'https://github.com/deeptools/HiCMatrix'},\n 'nbins': 285406,\n 'nchroms': 22,\n 'nnz': 117090191,\n 'storage-mode': 'symmetric-upper',\n 'sum': 193589731.0,\n 'tool-url': 'https://github.com/deeptools/HiCMatrix'}\n\n\n\nc.chroms()\n\n&lt;cooler.core._selectors.RangeSelector1D at 0x146a5acf1cd0&gt;\n\n\nThe return value is a selector or “view” on a table that accepts column and range queries (“slices”).\n\nColumn selections return a new view.\nRange selections return pandas DataFrames or Series.\n\n\n# Get a slice of the chromosomes\nc.chroms()[0:5]\n\n# Or the whole dict\n#c.chroms()[:]\n\n\n\n\n\n\n\n\nname\nlength\n\n\n\n\n0\nchr1\n223616942\n\n\n1\nchr2\n196197964\n\n\n2\nchr3\n185288947\n\n\n3\nchr4\n169963040\n\n\n4\nchr5\n187317192\n\n\n\n\n\n\n\n\n# Convenience\nc.chromnames, c.chromsizes\n\n(['chr1',\n  'chr2',\n  'chr3',\n  'chr4',\n  'chr5',\n  'chr6',\n  'chr7',\n  'chr8',\n  'chr9',\n  'chr10',\n  'chr11',\n  'chr12',\n  'chr13',\n  'chr14',\n  'chr15',\n  'chr16',\n  'chr17',\n  'chr18',\n  'chr19',\n  'chr20',\n  'chrX',\n  'chrY'],\n name\n chr1     223616942\n chr2     196197964\n chr3     185288947\n chr4     169963040\n chr5     187317192\n chr6     179085566\n chr7     169868564\n chr8     145679320\n chr9     134124166\n chr10     99517758\n chr11    133066086\n chr12    130043856\n chr13    108737130\n chr14    128056306\n chr15    113283604\n chr16     79627064\n chr17     95433459\n chr18     74474043\n chr19     58315233\n chr20     77137495\n chrX     153388924\n chrY      11753682\n Name: length, dtype: int32)\n\n\n\n# Access bins\nc.bins()[:10]\n\n\n\n\n\n\n\n\nchrom\nstart\nend\n\n\n\n\n0\nchr1\n0\n10000\n\n\n1\nchr1\n10000\n20000\n\n\n2\nchr1\n20000\n30000\n\n\n3\nchr1\n30000\n40000\n\n\n4\nchr1\n40000\n50000\n\n\n5\nchr1\n50000\n60000\n\n\n6\nchr1\n60000\n70000\n\n\n7\nchr1\n70000\n80000\n\n\n8\nchr1\n80000\n90000\n\n\n9\nchr1\n90000\n100000\n\n\n\n\n\n\n\nSelecting a list of columns returns a new DataFrame view on that subset of columns\n\nbins = c.bins()[['chrom', 'start', 'end']]\nbins\n\n&lt;cooler.core._selectors.RangeSelector1D at 0x146a60464a40&gt;\n\n\n\nbins[:5]\n\n\n\n\n\n\n\n\nchrom\nstart\nend\n\n\n\n\n0\nchr1\n0\n10000\n\n\n1\nchr1\n10000\n20000\n\n\n2\nchr1\n20000\n30000\n\n\n3\nchr1\n30000\n40000\n\n\n4\nchr1\n40000\n50000\n\n\n\n\n\n\n\nThe pixel table contains the non-zero upper triangle entries of the contact map.\n\n# Use the join=True option if you would like to expand the bin IDs into genomic bin coordinates by joining the output with the bin table.\n\ndisplay(c.pixels()[:10], c.pixels(join=True)[:10])\n\n\n\n\n\n\n\n\nbin1_id\nbin2_id\ncount\n\n\n\n\n0\n0\n0\n1.0\n\n\n1\n0\n9\n1.0\n\n\n2\n0\n30\n1.0\n\n\n3\n0\n33\n1.0\n\n\n4\n0\n124\n1.0\n\n\n5\n0\n127\n1.0\n\n\n6\n0\n145\n1.0\n\n\n7\n0\n756\n1.0\n\n\n8\n0\n1167\n1.0\n\n\n9\n0\n2416\n1.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nchrom1\nstart1\nend1\nchrom2\nstart2\nend2\ncount\n\n\n\n\n0\nchr1\n0\n10000\nchr1\n0\n10000\n1.0\n\n\n1\nchr1\n0\n10000\nchr1\n90000\n100000\n1.0\n\n\n2\nchr1\n0\n10000\nchr1\n300000\n310000\n1.0\n\n\n3\nchr1\n0\n10000\nchr1\n330000\n340000\n1.0\n\n\n4\nchr1\n0\n10000\nchr1\n1240000\n1250000\n1.0\n\n\n5\nchr1\n0\n10000\nchr1\n1270000\n1280000\n1.0\n\n\n6\nchr1\n0\n10000\nchr1\n1450000\n1460000\n1.0\n\n\n7\nchr1\n0\n10000\nchr1\n7560000\n7570000\n1.0\n\n\n8\nchr1\n0\n10000\nchr1\n11670000\n11680000\n1.0\n\n\n9\nchr1\n0\n10000\nchr1\n24160000\n24170000\n1.0\n\n\n\n\n\n\n\nDump any table selection with pandas to tabular\n\ndf = c.pixels(join=True)[:100]\n\n# df.to_csv('data/myselection.txt'), sep='\\t', index=False, header=False) \n\n\n\nBin annotation\nAnother way to annotate the bins in a data frame of pixels is to use cooler.annotate. It does a left outer join from the bin1_id and bin2_id columns onto a data frame indexed by bin ID that describes the bins.\n\nbins = c.bins()[:] # fetch all\npix = c.pixels()[100:110] # select some pixels\npix\n\n\n\n\n\n\n\n\nbin1_id\nbin2_id\ncount\n\n\n\n\n100\n2\n481\n1.0\n\n\n101\n2\n500\n1.0\n\n\n102\n2\n519\n1.0\n\n\n103\n2\n557\n1.0\n\n\n104\n2\n580\n1.0\n\n\n105\n2\n594\n1.0\n\n\n106\n2\n606\n1.0\n\n\n107\n2\n621\n1.0\n\n\n108\n2\n625\n1.0\n\n\n109\n2\n646\n1.0\n\n\n\n\n\n\n\n\ncooler.annotate(pix, bins)\n\n\n\n\n\n\n\n\nchrom1\nstart1\nend1\nchrom2\nstart2\nend2\nbin1_id\nbin2_id\ncount\n\n\n\n\n100\nchr1\n20000\n30000\nchr1\n4810000\n4820000\n2\n481\n1.0\n\n\n101\nchr1\n20000\n30000\nchr1\n5000000\n5010000\n2\n500\n1.0\n\n\n102\nchr1\n20000\n30000\nchr1\n5190000\n5200000\n2\n519\n1.0\n\n\n103\nchr1\n20000\n30000\nchr1\n5570000\n5580000\n2\n557\n1.0\n\n\n104\nchr1\n20000\n30000\nchr1\n5800000\n5810000\n2\n580\n1.0\n\n\n105\nchr1\n20000\n30000\nchr1\n5940000\n5950000\n2\n594\n1.0\n\n\n106\nchr1\n20000\n30000\nchr1\n6060000\n6070000\n2\n606\n1.0\n\n\n107\nchr1\n20000\n30000\nchr1\n6210000\n6220000\n2\n621\n1.0\n\n\n108\nchr1\n20000\n30000\nchr1\n6250000\n6260000\n2\n625\n1.0\n\n\n109\nchr1\n20000\n30000\nchr1\n6460000\n6470000\n2\n646\n1.0\n\n\n\n\n\n\n\n\ncooler.annotate(pix, bins[['start']], replace=False)\n\n\n\n\n\n\n\n\nstart1\nstart2\nbin1_id\nbin2_id\ncount\n\n\n\n\n100\n20000\n4810000\n2\n481\n1.0\n\n\n101\n20000\n5000000\n2\n500\n1.0\n\n\n102\n20000\n5190000\n2\n519\n1.0\n\n\n103\n20000\n5570000\n2\n557\n1.0\n\n\n104\n20000\n5800000\n2\n580\n1.0\n\n\n105\n20000\n5940000\n2\n594\n1.0\n\n\n106\n20000\n6060000\n2\n606\n1.0\n\n\n107\n20000\n6210000\n2\n621\n1.0\n\n\n108\n20000\n6250000\n2\n625\n1.0\n\n\n109\n20000\n6460000\n2\n646\n1.0\n\n\n\n\n\n\n\n\n\nEnter the Matrix\nFinally, the matrix method provides a 2D-sliceable view on the data. It allows you to query the data on file as a full rectangular contact matrix.\n\nc.matrix()\n\n&lt;cooler.core._selectors.RangeSelector2D at 0x146a5ad44470&gt;\n\n\n\narr = c.matrix(balance=False)[1000:1200, 1000:1200]\narr\n\narray([[ 57.,  33.,   9., ...,   0.,   1.,   0.],\n       [ 33.,  88.,  33., ...,   1.,   0.,   0.],\n       [  9.,  33.,  74., ...,   0.,   0.,   0.],\n       ...,\n       [  0.,   1.,   0., ..., 104.,  27.,  12.],\n       [  1.,   0.,   0., ...,  27., 118.,  46.],\n       [  0.,   0.,   0., ...,  12.,  46., 135.]])\n\n\n\n# Use sparse=True to return a scipy.sparse.coo_matrix in stead\n\nmat = c.matrix(balance=False, sparse=True)[1000:1200,1000:1200]\nmat\n\n&lt;200x200 sparse matrix of type '&lt;class 'numpy.float64'&gt;'\n    with 26544 stored elements in COOrdinate format&gt;\n\n\nConvert to a 2D numpy array\n\narr = mat.toarray()\narr\n\narray([[ 57.,  33.,   9., ...,   0.,   1.,   0.],\n       [ 33.,  88.,  33., ...,   1.,   0.,   0.],\n       [  9.,  33.,  74., ...,   0.,   0.,   0.],\n       ...,\n       [  0.,   1.,   0., ..., 104.,  27.,  12.],\n       [  1.,   0.,   0., ...,  27., 118.,  46.],\n       [  0.,   0.,   0., ...,  12.,  46., 135.]])\n\n\nNotice that tha lower triangle has automatically been filled\n\n# Plot\nfig = plt.figure(figsize=(10,10))\nax  = fig.add_subplot(111)\nim  = ax.matshow(np.log1p(arr), cmap='Reds')\nfig.colorbar(im)",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#use-the-new-pairs",
    "href": "notebooks/02_open2c_framework.html#use-the-new-pairs",
    "title": "Open2C framework",
    "section": "Use the new pairs",
    "text": "Use the new pairs\n\n# Import the packages we will use\nimport os.path as op\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas\nimport h5py\n\nimport cooler\n\n# The following directive activates inline plotting\n%matplotlib inline\n\n\nfilepath = \"../steps/bwa/PE/pairs/cool/SRR6502335.nodups.10000.cool\"\n\n\nc = cooler.Cooler(filepath)\nc.info\n\n{'bin-size': 10000,\n 'bin-type': 'fixed',\n 'creation-date': '2024-10-08T14:31:29.159937',\n 'format': 'HDF5::Cooler',\n 'format-url': 'https://github.com/open2c/cooler',\n 'format-version': 3,\n 'generated-by': 'cooler-0.10.2',\n 'genome-assembly': 'rheMac10',\n 'metadata': {},\n 'nbins': 298615,\n 'nchroms': 2939,\n 'nnz': 67535020,\n 'storage-mode': 'symmetric-upper',\n 'sum': 115865253}\n\n\n\nc.bins()[:100]\n\n\n\n\n\n\n\n\nchrom\nstart\nend\n\n\n\n\n0\nchr1\n0\n10000\n\n\n1\nchr1\n10000\n20000\n\n\n2\nchr1\n20000\n30000\n\n\n3\nchr1\n30000\n40000\n\n\n4\nchr1\n40000\n50000\n\n\n...\n...\n...\n...\n\n\n95\nchr1\n950000\n960000\n\n\n96\nchr1\n960000\n970000\n\n\n97\nchr1\n970000\n980000\n\n\n98\nchr1\n980000\n990000\n\n\n99\nchr1\n990000\n1000000\n\n\n\n\n100 rows × 3 columns\n\n\n\n\nc.matrix()\n\n&lt;cooler.core._selectors.RangeSelector2D at 0x14fc849042c0&gt;\n\n\n\narr = c.matrix(balance=False).fetch('chrX')\narr\n\narray([[39,  0,  4, ...,  0,  0,  0],\n       [ 0,  9,  3, ...,  0,  0,  0],\n       [ 4,  3, 29, ...,  0,  0,  0],\n       ...,\n       [ 0,  0,  0, ...,  7,  0,  0],\n       [ 0,  0,  0, ...,  0,  0,  0],\n       [ 0,  0,  0, ...,  0,  0,  0]], dtype=int32)\n\n\n\n# Plot with matplotlib\nfig = plt.figure(figsize=(10,10))\nax =  fig.add_subplot(111)\nim =  ax.matshow(np.log1p(arr), cmap=\"Reds\")\nfig.colorbar(im)",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#merge-the-replicates-according-to-sra-id",
    "href": "notebooks/02_open2c_framework.html#merge-the-replicates-according-to-sra-id",
    "title": "Open2C framework",
    "section": "Merge the replicates according to SRA ID",
    "text": "Merge the replicates according to SRA ID\n\nFirst, subset the chromosomes to only the real chromosomes\n\nprint(filepath)\nprint(filepath.replace('nodups', 'subset.nodups'))\n\n../steps/bwa/PE/pairs/cool/SRR6502335.nodups.10000.cool\n../steps/bwa/PE/pairs/cool/SRR6502335.subset.nodups.10000.cool\n\n\n\nMake a loop\n\nimport cooler\nimport os.path as op\nfrom pprintpp import pprint as pp\n\ncoolers = [f\"../steps/bwa/PE/pairs/cool/SRR650233{n}.nodups.10000.cool\" for n in range(5,10)]\nprint(f\"Subsetting coolers and merging replicates from\")\npp(coolers)\n\nfor cool in coolers:\n    # Filenames\n    cool_file = cool\n    output_cool_file = cool_file.replace('nodups', 'subset.nodups')\n\n    if op.exists(output_cool_file):\n        print(f\"Skipping {cool_file} (exists)\")\n        continue\n\n    print(f\"Input: {cool_file} \\nOutput: {output_cool_file}\\n\\nInitializing cooler from input...\")\n    \n    # Load the original .cool file\n    c = cooler.Cooler(cool_file)\n    \n    # Define the chromosomes to keep (e.g., excluding unplaced scaffolds/contigs)\n    chroms_to_keep = c.chroms()[0:22]['name']\n    \n    # Filter the bins to include only the selected chromosomes\n    print(\"Filtering bins...\")\n    \n    bins = c.bins()[:]\n    filtered_bins = bins[bins['chrom'].isin(chroms_to_keep)]\n    \n    # Filter the pixels to include only the selected bins\n    print(\"Filtering pixels...\")\n    \n    bin_ids_to_keep = set(filtered_bins.index)\n    pixels = c.pixels()[:]\n    filtered_pixels = pixels[pixels['bin1_id'].isin(bin_ids_to_keep) & pixels['bin2_id'].isin(bin_ids_to_keep)]\n\n    # Subset the coolers\n\n    print(\"Creating subsetted cooler...\")\n\n    cooler.create_cooler(\n        cool_uri=output_cool_file,\n        bins=filtered_bins,\n        pixels=filtered_pixels,\n        assembly='rheMac10',  # Optional: specify the genome assembly\n        ordered=True,  # Assuming the input chunks are in the correct order\n        symmetric_upper=True,  # Assuming the input data references the upper triangle of a symmetric matrix\n        mode='w',  # Write mode\n        ensure_sorted=True,  # Ensure that each input chunk is properly sorted\n        boundscheck=True,  # Check that all bin IDs lie in the expected range\n        dupcheck=True,  # Check that no duplicate pixels exist within any chunk\n        triucheck=True  # Check that bin1_id &lt;= bin2_id when creating coolers in symmetric-upper mode\n    )\n\n    print(f\"Subset .cool file created: {output_cool_file}\")\n\nSubsetting coolers and merging replicates from\n[\n    '../steps/bwa/PE/pairs/cool/SRR6502335.nodups.10000.cool',\n    '../steps/bwa/PE/pairs/cool/SRR6502336.nodups.10000.cool',\n    '../steps/bwa/PE/pairs/cool/SRR6502337.nodups.10000.cool',\n    '../steps/bwa/PE/pairs/cool/SRR6502338.nodups.10000.cool',\n    '../steps/bwa/PE/pairs/cool/SRR6502339.nodups.10000.cool',\n]\nSkipping ../steps/bwa/PE/pairs/cool/SRR6502335.nodups.10000.cool (exists)\nSkipping ../steps/bwa/PE/pairs/cool/SRR6502336.nodups.10000.cool (exists)\nSkipping ../steps/bwa/PE/pairs/cool/SRR6502337.nodups.10000.cool (exists)\nSkipping ../steps/bwa/PE/pairs/cool/SRR6502338.nodups.10000.cool (exists)\nSkipping ../steps/bwa/PE/pairs/cool/SRR6502339.nodups.10000.cool (exists)\n\n\n\n# Merge rep1\nrep1_out = \"../steps/bwa/PE/pairs/cool/fib_rep1.10000.cool\"\nif not op.exists(rep1_out):\n    cooler.merge_coolers(output_uri = rep1_out,\n                         input_uris = [\"../steps/bwa/PE/pairs/cool/SRR6502335.subset.nodups.10000.cool\",\n                                      \"../steps/bwa/PE/pairs/cool/SRR6502336.subset.nodups.10000.cool\"],\n                         mergebuf = 20000000)\nelse:\n    print(f\"{rep1_out} already exists\")\n\n../steps/bwa/PE/pairs/cool/fib_rep1.10000.cool already exists\n\n\n\n# Merge rep2\nrep2_out = \"../steps/bwa/PE/pairs/cool/fib_rep2.10000.cool\"\nif not op.exists(rep2_out):\n    cooler.merge_coolers(output_uri = rep2_out,\n                         input_uris = [\"../steps/bwa/PE/pairs/cool/SRR6502337.subset.nodups.10000.cool\",\n                                      \"../steps/bwa/PE/pairs/cool/SRR6502338.subset.nodups.10000.cool\",\n                                      \"../steps/bwa/PE/pairs/cool/SRR6502339.subset.nodups.10000.cool\"],\n                         mergebuf = 20000000)\nelse:\n    print(f\"{rep1_out} already exists\")\n\n../steps/bwa/PE/pairs/cool/fib_rep1.10000.cool already exists\n\n\n\nc_rep1 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.10000.cool\")\nc_rep2 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep2.10000.cool\")\n\npp(c_rep1.info) \npp(c_rep2.info)\n\n{\n    'bin-size': 10000,\n    'bin-type': 'fixed',\n    'creation-date': '2024-10-08T21:02:38.036175',\n    'format': 'HDF5::Cooler',\n    'format-url': 'https://github.com/open2c/cooler',\n    'format-version': 3,\n    'generated-by': 'cooler-0.10.2',\n    'genome-assembly': 'rheMac10',\n    'metadata': {},\n    'nbins': 285406,\n    'nchroms': 22,\n    'nnz': 112572916,\n    'storage-mode': 'symmetric-upper',\n    'sum': 211718459,\n}\n{\n    'bin-size': 10000,\n    'bin-type': 'fixed',\n    'creation-date': '2024-10-08T21:52:32.813516',\n    'format': 'HDF5::Cooler',\n    'format-url': 'https://github.com/open2c/cooler',\n    'format-version': 3,\n    'generated-by': 'cooler-0.10.2',\n    'genome-assembly': 'rheMac10',\n    'metadata': {},\n    'nbins': 285406,\n    'nchroms': 22,\n    'nnz': 117207943,\n    'storage-mode': 'symmetric-upper',\n    'sum': 211294810,\n}",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#zoomify-the-merged-replicates",
    "href": "notebooks/02_open2c_framework.html#zoomify-the-merged-replicates",
    "title": "Open2C framework",
    "section": "zoomify the merged replicates",
    "text": "zoomify the merged replicates\nGenerate an .mcool file containing coarser resolution to be called.\n\nimport cooler\nimport os.path as op\n\ncool_paths = {'rep1': \"../steps/bwa/PE/pairs/cool/fib_rep1.10000.cool\",\n              'rep2': \"../steps/bwa/PE/pairs/cool/fib_rep2.10000.cool\"}\n\nmcool_paths = {'rep1': \"../steps/bwa/PE/pairs/cool/fib_rep1.mcool\",\n               'rep2': \"../steps/bwa/PE/pairs/cool/fib_rep2.mcool\"}\n\nfor cool,path in cool_paths.items():\n    if op.exists(mcool_paths[cool]):\n        print(f\"Skipping: {mcool_paths[cool]} already exists\")\n        continue\n\n    print(f\"Zoomifying cooler: \\n\\t   {path}\\n\\t-&gt; {mcool_paths[cool]}\", end=\"\\n\")\n    \n    cooler.zoomify_cooler(base_uris = path,\n                          outfile = mcool_paths[cool],\n                          resolutions = [10000,50000,100000,500000],\n                          chunksize = 10000000,\n                          nproc = 4)\n    print(\" --&gt; done\")\n\nSkipping: ../steps/bwa/PE/pairs/cool/fib_rep1.mcool already exists\nSkipping: ../steps/bwa/PE/pairs/cool/fib_rep2.mcool already exists\n\n\n\n# to print which resolutions are stored in the mcool, use list_coolers\ncooler.fileops.list_coolers(mcool_paths['rep1'])\n\n['/resolutions/10000',\n '/resolutions/50000',\n '/resolutions/100000',\n '/resolutions/500000']",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#visualize-the-matrices",
    "href": "notebooks/02_open2c_framework.html#visualize-the-matrices",
    "title": "Open2C framework",
    "section": "Visualize the matrices",
    "text": "Visualize the matrices\n\nPlot the uncorrected matrix\n\nc1 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/100000\")\nc2 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep2.mcool::resolutions/100000\")\n\n\nc1.info\n\n{'bin-size': 100000,\n 'bin-type': 'fixed',\n 'creation-date': '2024-10-08T22:48:20.327186',\n 'format': 'HDF5::Cooler',\n 'format-url': 'https://github.com/open2c/cooler',\n 'format-version': 3,\n 'generated-by': 'cooler-0.10.2',\n 'genome-assembly': 'unknown',\n 'metadata': {},\n 'nbins': 28550,\n 'nchroms': 22,\n 'nnz': 52382089,\n 'storage-mode': 'symmetric-upper',\n 'sum': 211718459}\n\n\n\narr1 = c1.matrix(balance=False).fetch('chrX')\narr2 = c2.matrix(balance=False).fetch('chrX')\n\n\n# Plot with matplotlib\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))\n\n# Plot the first replicate\nim1 = ax1.matshow(np.log1p(arr1), cmap=\"Reds\")\nax1.set_title('Replicate 1')\nfig.colorbar(im1, ax=ax1)\n\n# Plot the second replicate\nim2 = ax2.matshow(np.log1p(arr2), cmap=\"Reds\")\nax2.set_title('Replicate 2')\nfig.colorbar(im2, ax=ax2)\n\nplt.show()\n\n\n\n\nThe X chromosome in 100kb bins and the first 3 PCs below. UNCORRECTED. Made with cooler and matplotlib.\n\n\n\n\n\nFollow `cooltools´ suggestion/guide\n\nimport cooler\n\nc1 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/500000\")\nclr = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/100000\")\nc2 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/50000\")\n\n\n### to print chromosomes and binsize for this cooler\nprint(f'chromosomes: {c1.chromnames}, binsize: {c1.binsize}')\nprint(f'chromosomes: {clr.chromnames}, binsize: {clr.binsize}')\nprint(f'chromosomes: {c2.chromnames}, binsize: {c2.binsize}')\n\n### to make a list of chromosome start/ends in bins:\nchromstarts = []\nchromstarts500kb = []\nchromstarts50kb = []\nfor i in clr.chromnames:\n    chromstarts500kb.append(c1.extent(i)[0])\n    chromstarts.append(clr.extent(i)[0])\n    chromstarts50kb.append(c2.extent(i)[0])\n\nchromosomes: ['chr1', 'chr2', 'chr5', 'chr3', 'chr6', 'chr4', 'chr7', 'chrX', 'chr8', 'chr9', 'chr11', 'chr12', 'chr14', 'chr15', 'chr13', 'chr10', 'chr17', 'chr16', 'chr20', 'chr18', 'chr19', 'chrY'], binsize: 500000\nchromosomes: ['chr1', 'chr2', 'chr5', 'chr3', 'chr6', 'chr4', 'chr7', 'chrX', 'chr8', 'chr9', 'chr11', 'chr12', 'chr14', 'chr15', 'chr13', 'chr10', 'chr17', 'chr16', 'chr20', 'chr18', 'chr19', 'chrY'], binsize: 100000\nchromosomes: ['chr1', 'chr2', 'chr5', 'chr3', 'chr6', 'chr4', 'chr7', 'chrX', 'chr8', 'chr9', 'chr11', 'chr12', 'chr14', 'chr15', 'chr13', 'chr10', 'chr17', 'chr16', 'chr20', 'chr18', 'chr19', 'chrY'], binsize: 50000\n\n\n\n# to plot ticks in terms of megabases we use the EngFormatter\n# https://matplotlib.org/gallery/api/engineering_formatter.html\n# Also, here we fetch the chromosomes directly from within the plot\n# Import the packages we will use\nimport os.path as op\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas\nimport h5py\n\n# The following directive activates inline plotting\n%matplotlib inline\n\nfrom matplotlib.ticker import EngFormatter\nbp_formatter = EngFormatter('b')\n\ndef format_ticks(ax, x=True, y=True, rotate=True):\n    if y:\n        ax.yaxis.set_major_formatter(bp_formatter)\n    if x:\n        ax.xaxis.set_major_formatter(bp_formatter)\n        ax.xaxis.tick_bottom()\n    if rotate:\n        ax.tick_params(axis='x',rotation=45)\n\n\nf, axs = plt.subplots(\n    figsize=(14,4),\n    ncols=3)\n\nax = axs[0]\nim = ax.matshow(np.log1p(c1.matrix(balance=False)[:]), \n                #vmax=2500, \n                cmap='Reds');\nplt.colorbar(im, ax=ax ,fraction=0.046, pad=0.04, label='raw counts');\nax.set_xticks(chromstarts500kb)\nax.set_xticklabels(c1.chromnames, fontsize=6)\nax.set_yticks(chromstarts500kb)\nax.set_yticklabels(c1.chromnames, fontsize=6)\nax.xaxis.tick_bottom()\nax.tick_params(axis='x',rotation=90)\nax.set_title('All data')\n\nax = axs[1]\nim = ax.matshow(\n    np.log1p(clr.matrix(balance=False).fetch('chrX')),\n    cmap='Reds',\n    #vmax=2500,\n    extent=(0,clr.chromsizes['chrX'], clr.chromsizes['chrX'], 0)\n);\nplt.colorbar(im, ax=ax ,fraction=0.046, pad=0.04, label='raw counts');\nax.set_title('chrX', y=1.08)\nax.set_ylabel('position, Mb')\nformat_ticks(ax)\n\nax = axs[2]\nstart, end = 60_000_000, 70_000_000\nregion = ('chrX', start, end)\nim = ax.matshow(\n    np.log1p(c2.matrix(balance=False).fetch(region)),\n    #vmax=2500,\n    cmap='Reds',\n    extent=(start, end, end, start)\n);\nax.set_title(f'chrX:{start:,}-{end:,}', y=1.08)\nplt.colorbar(im, ax=ax ,fraction=0.046, pad=0.04, label='raw counts');\nformat_ticks(ax)\nplt.tight_layout()\n\n\n\n\nRaw matrix. Left: All chromosomes plotted in 100kb bins. Middle: chrX in 100kb bins. Right: chrX:60Mb-70Mb in 50 kb bins",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#balance-the-matrices-iterative-correction",
    "href": "notebooks/02_open2c_framework.html#balance-the-matrices-iterative-correction",
    "title": "Open2C framework",
    "section": "Balance the matrices (iterative correction)",
    "text": "Balance the matrices (iterative correction)",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "notebooks/02_open2c_framework.html#visualize-weights-as-well",
    "href": "notebooks/02_open2c_framework.html#visualize-weights-as-well",
    "title": "Open2C framework",
    "section": "Visualize weights as well",
    "text": "Visualize weights as well\n\nimport os.path as op\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas\nimport h5py\nimport cooltools.lib.plotting\n\n\n# The following directive activates inline plotting\n%matplotlib inline\n\nfrom matplotlib.ticker import EngFormatter\nfrom matplotlib.colors import LogNorm\n\nbp_formatter = EngFormatter('b')\n\ndef format_ticks(ax, x=True, y=True, rotate=True):\n    if y:\n        ax.yaxis.set_major_formatter(bp_formatter)\n    if x:\n        ax.xaxis.set_major_formatter(bp_formatter)\n        ax.xaxis.tick_bottom()\n    if rotate:\n        ax.tick_params(axis='x',rotation=45)\n\n\nimport cooler\n\nc100 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/100000\")\nc50 = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/50000\")\n\n\n### plot the raw and corrected data in logscale ###\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\n\n# Initialize the plot grid: rows, cols, rel_widths etc.\nplt_width=4\nf, axs = plt.subplots(\n    figsize=( plt_width+plt_width+2, plt_width+plt_width+1),\n    ncols=4,\n    nrows=3,\n    gridspec_kw={'height_ratios':[4,4,1],\"wspace\":0.01,'width_ratios':[1,.05,1,.05]},\n    constrained_layout=True\n)\n\n# Set the colorscale to fit the log scale\nnorm = LogNorm(vmax=0.1)\nnorm_raw = LogNorm(vmin=1, vmax=10_000)\n\n# Set the first cell in the grid\nax = axs[0,0]\nim = ax.matshow(\n    c100.matrix(balance=False).fetch('chrX'),\n    norm=norm_raw,\n    cmap='fall',\n    aspect='auto',\n    extent=(0,c100.chromsizes['chrX'], c100.chromsizes['chrX'], 0)\n);\nax.xaxis.set_visible(False)\nax.set_title('chr X')\nax.set_ylabel('raw', fontsize=16)\nformat_ticks(ax, x=False,y=True)\n\n# Set the colorbar next to the plot\ncax = axs[0,1]\nplt.colorbar(im, cax=cax, label='raw counts')\n\n# Second row, 1st column\nax = axs[1,0]\nim = ax.matshow(\n    c100.matrix().fetch('chrX'),\n    norm=norm,\n    cmap='fall',\n    extent=(0,c100.chromsizes['chrX'], c100.chromsizes['chrX'], 0)\n);\nax.xaxis.set_visible(False)\nax.set_ylabel('balanced', fontsize=16)\nformat_ticks(ax, x=False,y=True)\n\n# Set colorbar\ncax = axs[1,1]\nplt.colorbar(im, cax=cax, label='corrected freqs')\n\n# 3rd row, 1st col (weights)\nax1 = axs[2,0]\nweights = c100.bins().fetch('chrX')['weight'].values\nax1.plot(\n    np.linspace(0, c100.chromsizes['chrX'], len(weights)),\n    weights\n)\nax1.set_xlim([0, c100.chromsizes['chrX']])\nax1.set_xlabel('position, bp')\nformat_ticks(ax1, y=False)\n\nax1 = axs[2,1]\nax1.set_visible(False)\n\n\n# 2nd column\nstart = 60_000_000\nend = 70_000_000\nregion = ('chrX', start, end)\n\n# Unbalanced\nax = axs[0,2]\nim = ax.matshow(\n    c50.matrix(balance=False).fetch(region),\n    norm=norm_raw,\n    cmap='fall',\n    extent=(start, end, end, start)\n);\nax.set_title(f'chrX:{start:,}-{end:,}')\nax.xaxis.set_visible(False)\n\ncax = axs[0,3]\nplt.colorbar(im, cax=cax, label='raw counts');\n\n# Balanced\nax = axs[1,2]\nim = ax.matshow(\n    c50.matrix().fetch(region),\n    norm=norm,\n    cmap='fall',\n    extent=(start, end, end, start)\n);\nax.xaxis.set_visible(False)\n\ncax = axs[1,3]\nplt.colorbar(im, cax=cax, label='corrected frequencies');\n\nax1 = axs[2,2]\nweights = c50.bins().fetch(region)['weight'].values\nax1.plot(\n    np.linspace(start, end, len(weights)),\n    weights\n)\nformat_ticks(ax1, y=False, rotate=False)\nax1.set_xlim(start, end);\nax1.set_xlabel('chrX position, bp')\n\nax1 = axs[2,3]\nax1.set_visible(False)\n\n\n\n\n\n\n\n\n\nCoverage (distinct from the weights)\n\nclr = cooler.Cooler(\"../steps/bwa/PE/pairs/cool/fib_rep1.mcool::resolutions/500000\")\ncis_coverage, tot_coverage = cooltools.coverage(clr, nproc=4)\n\nf, ax = plt.subplots(\n    figsize=(15, 10),\n)\n\nnorm = LogNorm(vmax=0.1)\n\nim = ax.matshow(\n    clr.matrix()[:],\n    norm=norm,\n    cmap='fall'\n);\ndivider = make_axes_locatable(ax)\ncax = divider.append_axes(\"right\", size=\"5%\", pad=0.1)\nplt.colorbar(im, cax=cax, label='corrected frequencies');\nax.set_title('full matrix')\nax.xaxis.set_visible(False)\n\nax1 = divider.append_axes(\"bottom\", size=\"25%\", pad=0.1, sharex=ax)\nweights = clr.bins()[:]['weight'].values\nax1.plot( cis_coverage, label='cis')\nax1.plot( tot_coverage, label='total')\nax1.set_xlim([0, len(clr.bins()[:])])\nax1.set_ylabel('Coverage')\nax1.legend()\nax1.set_xticks([])\n\nax2 = divider.append_axes(\"bottom\", size=\"25%\", pad=0.1, sharex=ax)\nax2.plot( cis_coverage/ tot_coverage)\nax2.set_xlim([0, len(clr.bins()[:])])\nax2.set_ylabel('coverage ratio')\n\nINFO:root:creating a Pool of 4 workers\n/scratch/45765264/ipykernel_2320495/1150490948.py:31: RuntimeWarning: invalid value encountered in divide\n  ax2.plot( cis_coverage/ tot_coverage)\n\n\nText(0, 0.5, 'coverage ratio')\n\n\n\n\n\n\n\n\n\n\n\nSmoothing and interpolation\n\nimport os.path as op\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas\nimport h5py\nimport cooltools.lib.plotting\n\n\n# The following directive activates inline plotting\n%matplotlib inline\n\nfrom matplotlib.ticker import EngFormatter\nfrom matplotlib.colors import LogNorm\n\nbp_formatter = EngFormatter('b')\n\ndef format_ticks(ax, x=True, y=True, rotate=True):\n    if y:\n        ax.yaxis.set_major_formatter(bp_formatter)\n    if x:\n        ax.xaxis.set_major_formatter(bp_formatter)\n        ax.xaxis.tick_bottom()\n    if rotate:\n        ax.tick_params(axis='x',rotation=45)\n\n\nfrom cooltools.lib.numutils import adaptive_coarsegrain, interp_nan\n\nclr_10kb = c50\n\nstart = 60_000_000\nend = 70_000_000\nregion = ('chrX', start, end)\nextents = (start, end, end, start)\n\ncg = adaptive_coarsegrain(clr_10kb.matrix(balance=True).fetch(region),\n                              clr_10kb.matrix(balance=False).fetch(region),\n                              cutoff=3, max_levels=8)\n\ncgi = interp_nan(cg)\n\nf, axs = plt.subplots(\n    figsize=(18,5),\n    nrows=1,\n    ncols=3,\n    sharex=True, sharey=True)\n\nax = axs[0]\nim = ax.matshow(clr_10kb.matrix(balance=True).fetch(region), cmap='fall', norm=norm, extent=extents)\nax.set_title('corrected')\n\nax = axs[1]\nim2 = ax.matshow(cg, cmap='fall', norm=norm, extent=extents)\nax.set_title(f'adaptively coarsegrained')\n\nax = axs[2]\nim3 = ax.matshow(cgi, cmap='fall', norm=norm, extent=extents)\nax.set_title(f'interpolated')\n\nfor ax in axs:\n    format_ticks(ax, rotate=False)\n\nplt.colorbar(im3, ax=axs, fraction=0.046, label='corrected frequencies')\n\n/home/sojern/miniconda3/envs/hic/lib/python3.12/site-packages/cooltools/lib/numutils.py:1376: RuntimeWarning: invalid value encountered in divide\n  val_cur = ar_cur / armask_cur",
    "crumbs": [
      "Notebooks",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Open2C framework</span>"
    ]
  },
  {
    "objectID": "gwf_map_reads.html",
    "href": "gwf_map_reads.html",
    "title": "gwf_map_reads",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to map Hi-C reads to pairs with `bwa`, `samtools` and `HiCExplorer`.\n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_map_reads.py status\n#\n# Workflow:\n#   1a bwa_index        : [Reference genome] Index the reference genome with `bwa index`\n#   1b sam_index        : [Reference genome] Index the fasta again with `samtools faidx``\n#   1c find_rest_sites  : [Reference genome] Find the restriction sites in the reference genome with `hicFindRestSites` from HiCExplorer\n#   2  bwa_map          : Map reads (individually) to the reference with `bwa mem`\n#   3  build_hic_matrix : Build the interaction matrix from mapped reads (.bam) with `hicBuildMatrix` from HiCExplorer\n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef bwa_index(ref_genome):\n    \"\"\"Template for indexing the reference genome with bwa\"\"\"\n    inputs  = [ref_genome]\n    outputs = [f\"{ref_genome}.amb\", \n               f\"{ref_genome}.ann\", \n               f\"{ref_genome}.bwt\", \n               f\"{ref_genome}.pac\", \n               f\"{ref_genome}.sa\"]\n    options = {'cores':1, 'memory': \"5g\", 'walltime':\"02:00:00\"}\n    spec = f'''\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa index -p {ref_genome} -a bwtsw {ref_genome}\n'''\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef sam_index(ref_genome):\n    \"\"\"Creating a Fasta index. `bwa mem` also needs a fasta index generated by samtools\"\"\"\n    inputs = [ref_genome]\n    outputs = [f\"{ref_genome}.fai\"]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec=\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nsamtools faidx {ref_genome}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef find_rest_sites(ref_genome, rest_seq, out_bed):\n    \"\"\"Find the restriction sites in the reference genome.\n    Used by `hicBuildMatrix` when building the interaction matrix\"\"\"\n    inputs = [ref_genome]\n    outputs = [out_bed]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicFindRestSites --fasta {ref_genome} --searchPattern {rest_seq} --outFile {out_bed}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef bwa_map(ref_genome, in_fastq, out_bam):\n    \"\"\"\n    Template for mapping reads to a reference genome using `bwa` and `samtools`. \n    NB! For Hi-C reads, pairs are mapped individually to avoid heuristics made for standard PE libs. (https://hicexplorer.readthedocs.io/en/latest/content/mES-HiC_analysis.html)\n    bwa mem should be able to operate on .gz files directly\n    \"\"\"\n    threads = 16\n    inputs = [f\"{ref_genome}.amb\", \n              f\"{ref_genome}.ann\", \n              f\"{ref_genome}.bwt\", \n              f\"{ref_genome}.pac\", \n              f\"{ref_genome}.sa\", \n              f\"{ref_genome}.fai\",\n              in_fastq]\n    outputs = [out_bam]\n    options = {'cores':threads, 'memory': \"16g\", 'walltime':\"03:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa mem -t {threads} -A 1 -B 4 -E 50 -L 0 {ref_genome} {in_fastq} | samtools view -Shb - &gt; {out_bam}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef build_hic_matrix(bam1, bam2, rest_seq, rest_site_positions, out_matrix, out_qc_folder):\n    threads = 8\n    inputs = [bam1, bam2, rest_site_positions]\n    outputs = [out_matrix, out_qc_folder]\n    options = {'cores':threads, 'memory': \"64g\", 'walltime':\"02:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicBuildMatrix --samFiles {bam1} {bam2} \\\n    --binSize 10000 \\\n    --restrictionSequence {rest_seq} \\\n    --danglingSequence {rest_seq} \\\n    --restrictionCutFile {rest_site_positions} \\\n    --threads {threads} \\\n    --inputBufferSize 100000 \\\n    -o {out_matrix} \\\n    --QCfolder ./{out_qc_folder}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\n#############################################\n############### Create targets ##############\n#############################################\n\n# Do stuff with the reference genome\nref_genome = \"../hicdata/Mmul10/ncbi_dataset/data/GCF_003339765.1/GCF_003339765.1_Mmul_10_genomic.fna\"\nrest_seq = \"GATC\"\nrest_sites_out = \"../hicdata/test/rest_site_positions.bed\"\n\nT1a = gwf.target_from_template(f\"bwa_index_{os.path.basename(ref_genome)}\", bwa_index(ref_genome=ref_genome))\nT1b = gwf.target_from_template(f\"sam_index_{os.path.basename(ref_genome)}\", sam_index(ref_genome=ref_genome))\nT1c = gwf.target_from_template(f\"find_rest_sites_{os.path.basename(ref_genome)}\", find_rest_sites(ref_genome=ref_genome, rest_seq=rest_seq, out_bed=rest_sites_out))\n\n\n# Map Hi-C reads \nfastq_folder = \"data/links/macaque_fastq/\"\nfastq_files = glob.glob(os.path.join(fastq_folder, \"*.fastq.gz\"))\n\n\n# Pair the files (make sure they have the same base name prefix):\nfastq_files.sort()\npaired_fastq_files = list(zip(fastq_files[::2], fastq_files[1::2]))\n\nfor f1,f2 in paired_fastq_files:\n    # Get the base names\n    basename_1 = os.path.basename(f1).split('.fast')[0]\n    basename_2 = os.path.basename(f2).split('.fast')[0]\n    \n    # Create the output bam filenames\n    out_bam_1 = f\"steps/{basename_1}.bam\"\n    out_bam_2 = f\"steps/{basename_2}.bam\"\n\n    # Create targets for mapping\n    T2a = gwf.target_from_template(f\"bwa_map_{basename_1}\", bwa_map(ref_genome=ref_genome, in_fastq=f1, out_bam=out_bam_1))\n    T2b = gwf.target_from_template(f\"bwa_map_{basename_2}\", bwa_map(ref_genome=ref_genome, in_fastq=f2, out_bam=out_bam_2))\n\n    # Combine pair names\n    pairname = os.path.commonprefix([basename_1, basename_2]).split('_')[0]\n\n    # Create the target for building the matrix (uses out_bam_1 and out_bam_2)\n    out_matrix = f\"steps/{pairname}_hic.cool\"\n    out_qc_folder = f\"steps/{pairname}_QC\"\n    T3 = gwf.target_from_template(f\"build_hic_matrix_{pairname}\", \n                                  build_hic_matrix(bam1=out_bam_1, bam2=out_bam_2, \n                                                   rest_seq=rest_seq,\n                                                   rest_site_positions=rest_sites_out, \n                                                   out_matrix=out_matrix, \n                                                   out_qc_folder=out_qc_folder))",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>gwf_map_reads</span>"
    ]
  },
  {
    "objectID": "gwf_bowtie.html",
    "href": "gwf_bowtie.html",
    "title": "gwf_bowtie",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to map Hi-C reads to pairs with `bowtie2`, `samtools`.\n# We try to follow Wang2019's parameters. \n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_map_reads.py status\n#\n# Workflow:\n#   1a bwa_index        : [Reference genome] Index the reference genome with `bwa index`\n#   1b sam_index        : [Reference genome] Index the fasta again with `samtools faidx``\n#   1c find_rest_sites  : [Reference genome] Find the restriction sites in the reference genome with `hicFindRestSites` from HiCExplorer\n#   2  bwa_map          : Map reads (individually) to the reference with `bwa mem`\n#   3  build_hic_matrix : Build the interaction matrix from mapped reads (.bam) with `hicBuildMatrix` from HiCExplorer\n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef bowtie_index(ref_genome):\n    \"\"\"Creating a bowtie2 index. Afterwards, bowtie2 only uses these files, and not the original fasta file\"\"\"\n    threads = 16\n    inputs = [ref_genome]\n    outputs = [f\"{ref_genome}.1.bt2l\",\n               f\"{ref_genome}.2.bt2l\",\n               f\"{ref_genome}.3.bt2l\",\n               f\"{ref_genome}.4.bt2l\",\n               f\"{ref_genome}.rev.1.bt2l\",\n               f\"{ref_genome}.rev.2.bt2l\"]\n    options = {'cores':threads, 'memory':\"32g\", 'walltime':\"01:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbowtie2-build -f --large-index --threads {threads}  {ref_genome} {ref_genome}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef find_rest_sites(ref_genome, rest_seq, out_bed):\n    \"\"\"Find the restriction sites in the reference genome.\n    Used by `hicBuildMatrix` when building the interaction matrix\"\"\"\n    inputs = [ref_genome]\n    outputs = [out_bed]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicFindRestSite --fasta {ref_genome} --searchPattern {rest_seq} --outFile {out_bed}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef bowtie_map(bt2_idx, in_fastq, out_bam):\n    \"\"\"Map reads to the reference genome with bowtie2\"\"\"\n    threads = 32\n    inputs = [in_fastq,\n              f\"{bt2_idx}.1.bt2l\",\n               f\"{bt2_idx}.2.bt2l\",\n               f\"{bt2_idx}.3.bt2l\",\n               f\"{bt2_idx}.4.bt2l\",\n               f\"{bt2_idx}.rev.1.bt2l\",\n               f\"{bt2_idx}.rev.2.bt2l\"]\n    outputs = [out_bam]\n    options = {'cores':threads, 'memory':\"16g\", 'walltime':\"05:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbowtie2 -x {bt2_idx} --threads {threads} -U {in_fastq} -t --reorder --end-to-end --very-sensitive | \\\n    samtools view --threads {threads-1} -Shb - &gt; {out_bam}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef build_hic_matrix(bam1, bam2, rest_seq, rest_site_positions, out_matrix, out_qc_folder):\n    threads = 8\n    inputs = [bam1, bam2, rest_site_positions]\n    outputs = [out_matrix, out_qc_folder]\n    options = {'cores':threads, 'memory': \"128g\", 'walltime':\"02:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicBuildMatrix --samFiles {bam1} {bam2} \\\n    --binSize 10000 40000 100000 \\\n    --restrictionSequence {rest_seq} \\\n    --danglingSequence {rest_seq} \\\n    --restrictionCutFile {rest_site_positions} \\\n    --threads {threads} \\\n    --inputBufferSize 100000 \\\n    -o {out_matrix} \\\n    --QCfolder ./{out_qc_folder}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\n#############################################\n############### Create targets ##############\n#############################################\n\n# Do stuff with the reference genome\nref_genome = \"data/links/ucsc_ref/rheMac10.fa.gz\"\nrest_seq = \"GATC\"\nrest_sites_out = \"steps/rest_site_positions.bed\"\n\nT1a = gwf.target_from_template(\n    f\"bowtie_index_{os.path.basename(ref_genome)}\", \n    bowtie_index(ref_genome=ref_genome))\n\nT1b = gwf.target_from_template(\n    f\"find_rest_sites_{os.path.basename(ref_genome)}\", \n    find_rest_sites(ref_genome=ref_genome, rest_seq=rest_seq, out_bed=rest_sites_out))\n\n\n# Map Hi-C reads \nfastq_folder = \"data/links/macaque_fastq/\"\nfastq_files = gwf.glob(os.path.join(fastq_folder, \"*.fastq.gz\"))\n\n\n# Pair the files (make sure they have the same base name prefix):\nfastq_files.sort()\npaired_fastq_files = list(zip(fastq_files[::2], fastq_files[1::2]))\n\nfor f1,f2 in paired_fastq_files:\n    # Get the base names\n    basename_1 = os.path.basename(f1).split('.fast')[0]\n    basename_2 = os.path.basename(f2).split('.fast')[0]\n    \n    # Create the output bam filenames\n    out_bam_1 = f\"steps/bowtie2/{basename_1}.bam\"\n    out_bam_2 = f\"steps/bowtie2/{basename_2}.bam\"\n\n    # Create targets for mapping\n    T2a = gwf.target_from_template(f\"bowtie_map_{basename_1}\", bowtie_map(bt2_idx=ref_genome, in_fastq=f1, out_bam=out_bam_1))\n    T2b = gwf.target_from_template(f\"bowtie_map_{basename_2}\", bowtie_map(bt2_idx=ref_genome, in_fastq=f2, out_bam=out_bam_2))\n\n    # Combine pair names\n    pairname = os.path.commonprefix([basename_1, basename_2]).split('_')[0]\n\n    # Create the target for building the matrix (uses out_bam_1 and out_bam_2)\n    out_matrix = f\"steps/bowtie2/{pairname}_hic.cool\"\n    out_qc_folder = f\"steps/bowtie2/{pairname}_QC\"\n\n    T3 = gwf.target_from_template(f\"build_hic_matrix_{pairname}\", \n                                  build_hic_matrix(bam1=out_bam_1, bam2=out_bam_2, \n                                                   rest_seq=rest_seq,\n                                                   rest_site_positions=rest_sites_out, \n                                                   out_matrix=out_matrix, \n                                                   out_qc_folder=out_qc_folder))",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>gwf_bowtie</span>"
    ]
  },
  {
    "objectID": "gwf_bowtie_local.html",
    "href": "gwf_bowtie_local.html",
    "title": "gwf_bowtie_local",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to map Hi-C reads to pairs with `bowtie2`, `samtools`.\n# We try to follow Wang2019's parameters. \n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_map_reads.py status\n#\n# Workflow:\n#   1a bwa_index        : [Reference genome] Index the reference genome with `bwa index`\n#   1b sam_index        : [Reference genome] Index the fasta again with `samtools faidx``\n#   1c find_rest_sites  : [Reference genome] Find the restriction sites in the reference genome with `hicFindRestSites` from HiCExplorer\n#   2  bwa_map          : Map reads (individually) to the reference with `bwa mem`\n#   3  build_hic_matrix : Build the interaction matrix from mapped reads (.bam) with `hicBuildMatrix` from HiCExplorer\n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef bowtie_index(ref_genome):\n    \"\"\"Creating a bowtie2 index. Afterwards, bowtie2 only uses these files, and not the original fasta file\"\"\"\n    threads = 16\n    inputs = [ref_genome]\n    outputs = [f\"{ref_genome}.1.bt2l\",\n               f\"{ref_genome}.2.bt2l\",\n               f\"{ref_genome}.3.bt2l\",\n               f\"{ref_genome}.4.bt2l\",\n               f\"{ref_genome}.rev.1.bt2l\",\n               f\"{ref_genome}.rev.2.bt2l\"]\n    options = {'cores':threads, 'memory':\"32g\", 'walltime':\"01:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbowtie2-build -f --large-index --threads {threads}  {ref_genome} {ref_genome}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef find_rest_sites(ref_genome, rest_seq, out_bed):\n    \"\"\"Find the restriction sites in the reference genome.\n    Used by `hicBuildMatrix` when building the interaction matrix\"\"\"\n    inputs = [ref_genome]\n    outputs = [out_bed]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicFindRestSite --fasta {ref_genome} --searchPattern {rest_seq} --outFile {out_bed}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef bowtie_map(bt2_idx, in_fastq, out_bam):\n    \"\"\"Map reads to the reference genome with bowtie2\"\"\"\n    threads = 64\n    inputs = [in_fastq,\n              f\"{bt2_idx}.1.bt2l\",\n               f\"{bt2_idx}.2.bt2l\",\n               f\"{bt2_idx}.3.bt2l\",\n               f\"{bt2_idx}.4.bt2l\",\n               f\"{bt2_idx}.rev.1.bt2l\",\n               f\"{bt2_idx}.rev.2.bt2l\"]\n    outputs = [out_bam]\n    options = {'cores':threads, 'memory':\"16g\", 'walltime':\"05:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbowtie2 -x {bt2_idx} --threads {threads} -U {in_fastq} -t --reorder --local --very-sensitive-local | \\\n    samtools view --threads {threads-1} -Shb - &gt; {out_bam}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef build_hic_matrix(bam1, bam2, rest_seq, rest_site_positions, out_matrix, out_qc_folder):\n    threads = 16\n    inputs = [bam1, bam2, rest_site_positions]\n    outputs = [out_matrix, out_qc_folder]\n    options = {'cores':threads, 'memory': \"128g\", 'walltime':\"02:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicBuildMatrix --samFiles {bam1} {bam2} \\\n    --binSize 10000 40000 100000 \\\n    --restrictionSequence {rest_seq} \\\n    --danglingSequence {rest_seq} \\\n    --restrictionCutFile {rest_site_positions} \\\n    --threads {threads} \\\n    --inputBufferSize 100000 \\\n    -o {out_matrix} \\\n    --QCfolder ./{out_qc_folder} \\\n    --genomeAssembly rheMac10\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n\n#############################################\n############### Create targets ##############\n#############################################\n\n# Do stuff with the reference genome\nref_genome = \"data/links/ucsc_ref/rheMac10.fa.gz\"\nrest_seq = \"GATC\"\nrest_sites_out = \"steps/rest_site_positions.bed\"\n\nT1a = gwf.target_from_template(\n    f\"bowtie_index_{os.path.basename(ref_genome)}\", \n    bowtie_index(ref_genome=ref_genome))\n\nT1b = gwf.target_from_template(\n    f\"find_rest_sites_{os.path.basename(ref_genome)}\", \n    find_rest_sites(ref_genome=ref_genome, rest_seq=rest_seq, out_bed=rest_sites_out))\n\n\n# Map Hi-C reads \nfastq_folder = \"data/links/macaque_fastq/\"\nfastq_files = gwf.glob(os.path.join(fastq_folder, \"*.fastq.gz\"))\nout_dir = \"steps/bowtie2/local\"\n    \n# Pair the files (make sure they have the same base name prefix):\nfastq_files.sort()\npaired_fastq_files = list(zip(fastq_files[::2], fastq_files[1::2]))\n\nfor f1,f2 in paired_fastq_files:\n    # Get the base names\n    basename_1 = os.path.basename(f1).split('.fast')[0]\n    basename_2 = os.path.basename(f2).split('.fast')[0]\n    \n    # Create the output bam filenames\n    bam_dir = f\"{out_dir}/bamfiles/\"\n    out_bam_1 = f\"{bam_dir}/{basename_1}.bam\"\n    out_bam_2 = f\"{bam_dir}/{basename_2}.bam\"\n\n    # Create targets for mapping\n    T2a = gwf.target_from_template(f\"bowtie_map_{basename_1}\", bowtie_map(bt2_idx=ref_genome, in_fastq=f1, out_bam=out_bam_1))\n    T2b = gwf.target_from_template(f\"bowtie_map_{basename_2}\", bowtie_map(bt2_idx=ref_genome, in_fastq=f2, out_bam=out_bam_2))\n\n    # Combine pair names\n    pairname = os.path.commonprefix([basename_1, basename_2]).split('_')[0]\n\n    # Create the target for building the matrix (uses out_bam_1 and out_bam_2)\n    matrix_dir = f\"{out_dir}/matrices\"\n\n\n    out_matrix = f\"{matrix_dir}/{pairname}.cool\"\n    out_qc_folder = f\"{out_dir}/{pairname}_QC\"\n\n    T3 = gwf.target_from_template(f\"build_cool_{pairname[-2:]}\", \n                                  build_hic_matrix(bam1=out_bam_1, bam2=out_bam_2, \n                                                   rest_seq=rest_seq,\n                                                   rest_site_positions=rest_sites_out, \n                                                   out_matrix=out_matrix, \n                                                   out_qc_folder=out_qc_folder))",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>gwf_bowtie_local</span>"
    ]
  },
  {
    "objectID": "gwf_hiccorrect.html",
    "href": "gwf_hiccorrect.html",
    "title": "gwf_hiccorrect",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to \n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_hiccorrect.py status\n#\n# Workflow:\n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef hiccorrect(in_matrix, out_matrix, mem, thresholds):\n    \"\"\"Correct Hi-C data with HiCExplorer's hicCorrectMatrix\"\"\"\n    inputs = [in_matrix]\n    outputs = [out_matrix]\n    options = {'cores':1, 'memory':mem, 'walltime':\"04:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nhicCorrectMatrix correct \\\n    -m {in_matrix} -o {out_matrix} \\\n    --correctionMethod ICE \\\n    --filterThreshold {thresholds[0]} {thresholds[1]} \\\n    --perchr \\\n    --verbose\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n#############################################\n############### Targets #####################\n#############################################\n\nbase_dir = \"steps/bowtie2/local/matrices\"\n\n# 10kb resolution (a LOT of memory is needed) --maybe not??? (updated values after inspecting target on jobinfo)\nin_10kb = os.path.join(base_dir, \"normsm_filtered_pooled_10kb.cool\")\nout_10kb = os.path.join(base_dir, \"normsm_filtered_pooled_10kb_corrected.cool\")\ngwf.target_from_template(\"hiccorrect_10kb\", \n                         hiccorrect(\n                             in_matrix=in_10kb,\n                             out_matrix=out_10kb,\n                             mem=\"32g\",\n                             thresholds=(-2, 5)\n                             )\n                        )\n\n# 40kb resolution (a LOT of memory is needed) --maybe not??? (updated values after inspecting target on jobinfo)\nin_40kb = os.path.join(base_dir, \"normsm_filtered_pooled_40kb.cool\")\nout_40kb = os.path.join(base_dir, \"normsm_filtered_pooled_40kb_corrected.cool\")\ngwf.target_from_template(\"hiccorrect_40kb\",\n                         hiccorrect(\n                             in_matrix=in_40kb,\n                             out_matrix=out_40kb,\n                             mem=\"16g\",\n                             thresholds=(-1.5, 5)\n                             )\n                        )\n\n\n# 50kb resolution (a bit less memory is needed) --maybe not??? (updated values after inspecting target on jobinfo)\nin_50kb = os.path.join(base_dir, \"normsm_filtered_pooled_50kb.cool\")\nout_50kb = os.path.join(base_dir, \"normsm_filtered_pooled_50kb_corrected.cool\")\ngwf.target_from_template(\"hiccorrect_50kb\", \n                         hiccorrect(\n                             in_matrix=in_50kb,\n                             out_matrix=out_50kb,\n                             mem=\"16g\",\n                             thresholds=(-1.5, 5)\n                             )\n                        )\n\n# 100kb resolution (still a large amount of memory is needed) --maybe not??? (updated values after inspecting target on jobinfo)\nin_100kb = os.path.join(base_dir, \"normsm_filtered_pooled_100kb.cool\")\nout_100kb = os.path.join(base_dir, \"normsm_filtered_pooled_100kb_corrected.cool\")\ngwf.target_from_template(\"hiccorrect_100kb\", \n                         hiccorrect(\n                             in_matrix=in_100kb,\n                             out_matrix=out_100kb,\n                             mem=\"8g\",\n                             thresholds=(-1.5, 5)\n                             )\n                        )",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>gwf_hiccorrect</span>"
    ]
  },
  {
    "objectID": "gwf_bwamem.html",
    "href": "gwf_bwamem.html",
    "title": "gwf_bwamem",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os\n\n#######################################\n#\n# GWF workflow to map Hi-C reads to pairs with `bwa` and `samtools`.\n# Pairs are generated with `pairtools parse` and deduplicated with `pairtools dedup`.\n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_bwamem.py status\n#\n# Workflow:\n#   1a bwa_index        : [Reference genome] Index the reference genome with `bwa index`\n#   1b sam_index        : [Reference genome] Index the fasta again with `samtools faidx``\n#   2  bwa_map          : Map reads (PE) to the reference with `bwa mem` \n#   3  pair_sort        : Pair the merged alignments from mate-pair sequencing with `pairtools parse`, \n#                         then sort with `pairtools sort`\n#   4  dedup            : Deduplicate the sorted pairs with `pairtools dedup`  \n#\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef bwa_index(ref_genome):\n    \"\"\"Template for indexing the reference genome with bwa\"\"\"\n    inputs  = [ref_genome]\n    outputs = [f\"{ref_genome}.amb\", \n               f\"{ref_genome}.ann\", \n               f\"{ref_genome}.bwt\", \n               f\"{ref_genome}.pac\", \n               f\"{ref_genome}.sa\"]\n    options = {'cores':1, 'memory': \"5g\", 'walltime':\"02:00:00\"}\n    spec = f'''\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa index -p {ref_genome} -a bwtsw {ref_genome}\n'''\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef sam_index(ref_genome):\n    \"\"\"Creating a Fasta index. `bwa mem` also needs a fasta index generated by samtools\"\"\"\n    inputs = [ref_genome]\n    outputs = [f\"{ref_genome}.fai\"]\n    options = {'cores':1, 'memory':\"5g\", 'walltime':\"00:20:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nsamtools faidx {ref_genome}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef bwa_map(ref_genome, mate_1, mate_2, out_bam):\n    \"\"\"\n    Template for mapping reads to a reference genome using `bwa` and `samtools`. \n    NB! Here, we map the mates together, as bwa states it is no problem for Hi-C reads. \n    \"\"\"\n    threads = 32\n    inputs = [f\"{ref_genome}.amb\", \n              f\"{ref_genome}.ann\", \n              f\"{ref_genome}.bwt\", \n              f\"{ref_genome}.pac\", \n              f\"{ref_genome}.sa\", \n              f\"{ref_genome}.fai\",\n              mate_1, mate_2]\n    outputs = [out_bam]\n    options = {'cores':threads, 'memory': \"32g\", 'walltime':\"06:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\nbwa mem -t {threads} -SP {ref_genome} {mate_1} {mate_2} &gt; {out_bam}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef pair_sort_alignments(chromsizes, bam_merged, sorted_pairs):\n    \"\"\"Pair the merged alignments from mate-pair sequencing with `pairtools parse`\"\"\"\n    inputs = [bam_merged]\n    outputs = [f\"{bam_merged}_parsed.stats\", \n               sorted_pairs]\n    options = {'cores':12, 'memory':\"4g\", 'walltime':\"03:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools parse \\\n    -c {chromsizes} \\\n    --drop-sam --drop-seq \\\n    --output-stats {bam_merged}_parsed.stats \\\n    --add-columns mapq \\\n    --assembly rheMac10 --no-flip \\\n    --walks-policy mask \\\n    {bam_merged} | \\\npairtools sort -o {sorted_pairs} \n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef select_pairs(chromsizes, sorted_pairs):\n    \"\"\"Select the pairs with `pairtools select`\"\"\"\n    inputs = [sorted_pairs]\n    outputs = [sorted_pairs.replace(\".sorted\", \".selected\"), \n               f\"{sorted_pairs.replace(\".sorted\", \".selected\")}.done\"]\n    options = {'cores':12, 'memory':\"16g\", 'walltime':\"00:30:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools select \"True\" --chrom-subset {chromsizes} {sorted_pairs} # | \\\n#pairtools header generate \\\n#    --chroms-path {chromsizes} \\\n#    --output {sorted_pairs.replace(\".sorted\", \".selected.withheader\")} \\\n#    --extra-columns mapq1,mapq2 \\\n#    --pairs \ntouch {sorted_pairs.replace(\".sorted\", \".selected\")}.done\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\ndef dedup(sorted_pairs, chromsizes):\n    \"\"\"Deduplicate the sorted pairs with `pairtools dedup`\"\"\"\n    pairs_prefix = sorted_pairs.split(\".sorted\")[0]\n    inputs = [sorted_pairs]\n    outputs = [f\"{pairs_prefix}.nodups.pairs.gz\",\n               f\"{pairs_prefix}.unmapped.pairs.gz\",\n               f\"{pairs_prefix}.dups.pairs.gz\",\n               f\"{pairs_prefix}.dedup.stats\",\n               f\"{pairs_prefix}.dedup.done\"]\n    options = {'cores':12, 'memory': \"16g\", 'walltime': \"02:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools dedup \\\n    --max-mismatch 3 \\\n    --mark-dups \\\n    --chunksize 100000 \\\n    --chrom-subset {chromsizes} \\\n    --output {pairs_prefix}.nodups.pairs.gz \\\n    --output-unmapped {pairs_prefix}.unmapped.pairs.gz \\\n    --output-stats {pairs_prefix}.dedup.stats \\\n    --output-dups {pairs_prefix}.dups.pairs.gz \\\n    {sorted_pairs}\ntouch {pairs_prefix}.dedup.done\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef make_pairs_cool(chromsizes, pairs, cool_out):\n    \"\"\"Create coolers from pairs with `cooler cload pairs`\"\"\"\n    base = os.path.basename(pairs).split(\".pairs.gz\")[0]\n    inputs = [pairs]\n    outputs = [cool_out]\n    options = {'cores':1, 'memory':\"4g\", 'walltime':\"01:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\ncooler cload pairs \\\n    -c1 2 -p1 3 -c2 4 -p2 5 \\\n    --assembly rheMac10 \\\n    --chunksize 50000 \\\n    {chromsizes}:10000 \\\n    {pairs} \\\n    {cool_out}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n    \n\n\n#############################################\n############### Create targets ##############\n#############################################\n\n# Do stuff with the [unpacked] reference genome\nref_genome = \"data/links/ucsc_ref/rheMac10.fa\"\n\nT1a = gwf.target_from_template(f\"bwa_index_{os.path.basename(ref_genome)}\", \n                               bwa_index(ref_genome=ref_genome))\nT1b = gwf.target_from_template(f\"sam_index_{os.path.basename(ref_genome)}\", \n                               sam_index(ref_genome=ref_genome))\n\n\n# Define the chromsizes file\nchromsizes = \"data/links/ucsc_ref/misc/rheMac10.chrom.sizes\"\n\n\n# Locate Hi-C reads \nfastq_folder = \"data/links/macaque_fastq/\"\nfastq_files = glob.glob(os.path.join(fastq_folder, \"*.fastq.gz\"))\n\n# Pair the files (make sure they have the same base name prefix):\nfastq_files.sort()\npaired_fastq_files = list(zip(fastq_files[::2], fastq_files[1::2]))\n\nfor f1,f2 in paired_fastq_files:\n    \n    # Get the base names\n    basename_1 = os.path.basename(f1).split('.fast')[0]\n    basename_2 = os.path.basename(f2).split('.fast')[0]\n    \n    # Combine pair names\n    pairname = os.path.commonprefix([basename_1, basename_2]).split('_')[0]\n\n    # Create the output bam filenames\n    bam_dir = f\"steps/bwa/PE/bamfiles/\"\n    bam_file = pairname + \".PE.bam\"\n    out_bam = os.path.join(bam_dir, bam_file)\n\n    # Create targets for mapping\n    T2 = gwf.target_from_template(f\"bwa_map_{pairname}\", \n                                  bwa_map(ref_genome=ref_genome, \n                                          mate_1=f1, mate_2=f2, \n                                          out_bam=out_bam))\n    \n    # Create targets for sorting the pairs\n    pair_dir = \"steps/bwa/PE/pairs/sorted\"\n    pair_file = pairname + \".sorted.pairs.gz\"\n    sorted_pairs = os.path.join(pair_dir, pair_file)\n\n    T3 = gwf.target_from_template(f\"pair_sort_{pairname}\", \n                                  pair_sort_alignments(chromsizes=chromsizes, \n                                                       bam_merged=out_bam, \n                                                       sorted_pairs=sorted_pairs))\n    \n    # Create targets for deduplicating the selected pairs\n    # NB! We are using the reduced chromsizes file (only 'real' chromosomes)\n    filtered_chromsizes = \"data/links/ucsc_ref/misc/rheMac10.filtered.chrom.sizes\"\n\n    T4 = gwf.target_from_template(f\"dedup_{pairname}\", dedup(sorted_pairs=T3.outputs[1],\n                                                             chromsizes=filtered_chromsizes))\n    \n    # Create the .cools start with 10kb bins\n    # It worked with the full chromsizes file, so we will use that\n    cool_dir = \"steps/bwa/PE/pairs/cool\"\n\n    T4outpairs = [x for x in T4.outputs if x.endswith(\".pairs.gz\")]\n\n    for T4out in T4outpairs:\n        \n        # Filter to be removed if we want to\n        if 'nodups' not in T4out:\n            continue\n\n        cool_name = f\"{pairname}.{T4out.split('.')[1]}\"\n        cool_file = os.path.join(cool_dir, f\"{cool_name}.10000.cool\")\n        T5 = gwf.target_from_template(f\"pairs_cool_{cool_name}\",\n                                        make_pairs_cool(chromsizes=chromsizes, pairs=T4out, cool_out=cool_file))",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>gwf_bwamem</span>"
    ]
  },
  {
    "objectID": "gwf_pair_alignments.html",
    "href": "gwf_pair_alignments.html",
    "title": "gwf_pair_alignments",
    "section": "",
    "text": "from gwf import *\nimport glob\nimport os.path as op\n\n#######################################\n#\n# GWF workflow to pair alignments from mate-pair sequencing, after mapping to the reference individually.\n# After mapping, the mate-pairs are merged with `samtools merge` (another workflow) and then parsed with `pairtools parse`. \n#\n# How to run:\n# conda activate gwf\n# gwf -f gwf_gwf_pair_alignments.py status\n#\n# Workflow:\n#   1   pairtools parse : Parse the fastq files into pairs (after merging with `samtools merge`)\n#\n# Footnote: always activate the conda environment before running the workflow:\n# source $(conda info --base)/etc/profile.d/conda.sh\n# conda activate env_name\n#######################################\n\n# Create a workflow object\ngwf = Workflow(defaults={'nodes': 1, 'queue':\"normal\", 'account':\"hic-spermatogenesis\"})\n\n#############################################\n############### Templates ###################\n#############################################\n\ndef pair_sort_alignments(chromsizes, bam_merged, sorted_pairs):\n    \"\"\"Pair the merged alignments from mate-pair sequencing with `pairtools parse`\"\"\"\n    inputs = [bam_merged]\n    outputs = [f\"{bam_merged}_parsed.stats\", \n               sorted_pairs]\n    options = {'cores':12, 'memory':\"16g\", 'walltime':\"03:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools parse \\\n    -c {chromsizes} \\\n    --drop-sam --drop-seq \\\n    --output-stats {bam_merged}_parsed.stats \\\n    --add-columns mapq \\\n    --assembly rheMac10 --no-flip \\\n    --walks-policy mask \\\n    {bam_merged} | \\\npairtools sort -o {sorted_pairs} \n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef select_pairs(chromsizes, sorted_pairs, selected_pairs):\n    \"\"\"Select the pairs with `pairtools select`\"\"\"\n    inputs = [sorted_pairs]\n    outputs = [selected_pairs]\n    options = {'cores':12, 'memory':\"16g\", 'walltime':\"03:00:00\"}\n    spec=f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools select \\\n    --output {selected_pairs} \\\n    --chrom-subset {chromsizes} \\\n    {sorted_pairs}\n\"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\ndef dedup(sorted_pairs, ):\n    \"\"\"Deduplicate the sorted pairs with `pairtools dedup`\"\"\"\n    pairs_prefix = sorted_pairs.split(\".sorted\")[0]\n    inputs = [sorted_pairs]\n    outputs = [f\"{pairs_prefix}.nodups.pairs.gz\",\n               f\"{pairs_prefix}.nodups.bam\",\n               f\"{pairs_prefix}.unmapped.pairs.gz\",\n               f\"{pairs_prefix}.unmapped.bam\",\n               f\"{pairs_prefix}.dups.pairs.gz\",\n               f\"{pairs_prefix}.dups.bam\",\n               f\"{pairs_prefix}.dedup.stats\"]\n    options = {'cores':12, 'memory': \"4g\", 'walltime': \"01:00:00\"}\n    spec = f\"\"\"\nsource $(conda info --base)/etc/profile.d/conda.sh\nconda activate hic\npairtools dedup \\\n    --max-mismatch 3 \\\n    --mark-dups \\\n    --output \\\n        &gt;(pairtools split \\\n            --output-pairs {pairs_prefix}.nodups.pairs.gz \\\n            --output-sam {pairs_prefix}.nodups.bam \\\n         ) \\\n    --output-unmapped \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.unmapped.pairs.gz \\\n            --output-sam {pairs_prefix}.unmapped.bam \\\n         ) \\\n    --output-dups \\\n        &gt;( pairtools split \\\n            --output-pairs {pairs_prefix}.dups.pairs.gz \\\n            --output-sam {pairs_prefix}.dups.bam \\\n            ) \\\n    --output-stats {pairs_prefix}.dedup.stats \\\n    {sorted_pairs}\n\n    \"\"\"\n    return AnonymousTarget(inputs=inputs, outputs=outputs, options=options, spec=spec)\n\n\n#############################################\n################ Targets ####################\n#############################################\n\n# Define the chromsizes file\nchromsizes = \"data/links/ucsc_ref/misc/rheMac10.chrom.sizes\"\n\n# Find the merged bam files\nmerged_bams = gwf.glob(\"steps/bowtie2/local/bamfiles/paired/*_paired.bam\")\n\nsorted_bams = sorted(merged_bams)\n\n\nfor inbam in sorted_bams:\n    base = op.basename(inbam)\n    prefix = base.split(\"_paired\")[0]\n\n    # Sort the pairs    \n    outdir = \"steps/bowtie2/local/bamfiles/paired/\"\n    outfile = f\"{base.split(\"_paired\")[0]}\" + \".sorted.pairs.gz\"\n    out_sorted_pairs = op.join(outdir, outfile)\n\n    gwf.target_from_template(f\"pair_sort_{prefix}\",\n                            pair_sort_alignments(chromsizes, inbam, out_sorted_pairs))\n    \n    # Select the pairs (filter out unplaced contigs)\n    chromsizes = \"data/links/ucsc_ref/misc/rheMac10.filtered.chrom.sizes\"\n    selected_pairs = out_sorted_pairs.replace(\".sorted\", \".filtered\")\n\n    gwf.target_from_template(f\"select_{prefix}\",\n                            select_pairs(chromsizes, out_sorted_pairs, selected_pairs))\n\n    # Deduplicate the pairs\n    gwf.target_from_template(f\"dedup_{prefix}\",\n                            dedup(out_sorted_pairs))",
    "crumbs": [
      "Workflows",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>gwf_pair_alignments</span>"
    ]
  },
  {
    "objectID": "results/Readme.html",
    "href": "results/Readme.html",
    "title": "Result files",
    "section": "",
    "text": "Quality control\nhicBuildMatrix was used to generate the matrices for the Hi-C data, doing some quality control in the process. The quality control results are available as a html file in each folder.\nTo preview the html files, prepend the following to the URL of the hicQC.html in each folder: https://html-preview.github.io/?url=\nOr click the links below:",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Result files</span>"
    ]
  },
  {
    "objectID": "results/Readme.html#quality-control",
    "href": "results/Readme.html#quality-control",
    "title": "Result files",
    "section": "",
    "text": "Preview sample SRR6502335 QC results\n\n\n\nName\nCount\nPercent\n\n\n\n\nSequenced reads\n244,003,806\n100\n\n\nMappable, highQ+uniq\n164,715,495\n67.5\n\n\nHi-C contacts\n110,459,727\n45.27\n\n\nInter chromosomal\n28,350,411\n25.67\n\n\nIntra short\n14,384,188\n13.02\n\n\nIntra long\n67,725,128\n61.31\n\n\n\n\n\nPreview sample SRR6502336 QC results\n\n\n\nName\nCount\nPercent\n\n\n\n\nSequenced reads\n217,066,567\n100\n\n\nMappable, highQ+uniq\n147,553,720\n68\n\n\nHi-C contacts\n94,317,987\n43.45\n\n\nInter chromosomal\n24,058,490\n25.51\n\n\nIntra short\n12,514,652\n13.27\n\n\nIntra long\n57,744,845\n61.22\n\n\n\n\n\nPreview sample SRR6502337 QC results\n\n\n\nName\nCount\nPercent\n\n\n\n\nSequenced reads\n175,897,321\n100\n\n\nMappable, highQ+uniq\n117,483,977\n66.79\n\n\nHi-C contacts\n79,573,279\n45.24\n\n\nInter chromosomal\n22,500,348\n28.28\n\n\nIntra short\n9,800,706\n12.32\n\n\nIntra long\n47,272,225\n59.41\n\n\n\n\n\nPreview sample SRR6502338 QC results\n\n\n\nName\nCount\nPercent\n\n\n\n\nSequenced reads\n174,596,497\n100\n\n\nMappable, highQ+uniq\n119,036,178\n68.18\n\n\nHi-C contacts\n84,296,486\n48.28\n\n\nInter chromosomal\n23,802,080\n28.24\n\n\nIntra short\n10,189,916\n12.09\n\n\nIntra long\n50,304,490\n59.68\n\n\n\n\n\nPreview sample SRR6502339 QC results\n\n\n\nName\nCount\nPercent\n\n\n\n\nSequenced reads\n96,286,472\n100\n\n\nMappable, highQ+uniq\n65,355,035\n67.88\n\n\nHi-C contacts\n41,072,908\n42.66\n\n\nInter chromosomal\n11,586,845\n28.21\n\n\nIntra short\n5,180,947\n12.61\n\n\nIntra long\n24,305,116\n59.18\n\n\n\n\n\nGuidelines from HiCExplorer:\nThe hicBuildMatrix command generates a bam file and a matrix file for the Hi-C data. The bam file contains only the valid Hi-C read pairs, which can be used to assess the quality of the Hi-C library on the genome browser. A good Hi-C library should have an abundance of reads near the restriction fragment sites.\nIn the QC folder, an html file is saved with plots that provide useful information for the quality control of the Hi-C sample. This includes metrics such as the number of valid pairs, duplicated pairs, and self-ligations. Typically, only 25%-40% of the reads are considered valid and used to build the Hi-C matrix, as reads on repetitive regions are discarded.\nOne important quality control measurement is the interchromosomal fraction of reads, which indirectly measures random Hi-C contacts. A good Hi-C library should have less than 10% interchromosomal contacts. The hicQC module can be used to compare the quality control measures across different samples.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Result files</span>"
    ]
  },
  {
    "objectID": "reports/manuscript.html",
    "href": "reports/manuscript.html",
    "title": "Correlating Chromatin Compartments with Selection",
    "section": "",
    "text": "Abstract\nThis is a dummy abstract, dreamt up by chatGPT. Chromatin organization plays a crucial role in gene regulation and genome stability, particularly during the complex process of spermatogenesis. This thesis explores the three-dimensional chromatin architecture of the X chromosome in baboons, macaques, and humans, with a specific focus on the role of chromatin compartments during spermatogenesis. Leveraging publicly available Hi-C data, interaction maps were generated to identify Principal Component 1 (PC1) compartments, revealing distinct chromatin compartmentalization patterns across species. The analysis was extended to examine transition zones, areas where chromatin shifts from one compartment type to another, and their correlation with regions under positive selection.\nBy comparing these zones with regions of known evolutionary significance, the study aims to uncover how chromatin structure reflects and potentially drives evolutionary pressures. A key finding is the identification of conserved chromatin features that may contribute to the retention of non-advantageous alleles, suggesting a possible role for selfish genetic elements in shaping genome evolution. The results of this research provide novel insights into the interplay between chromatin architecture and evolutionary dynamics, contributing to a deeper understanding of the conservation and divergence of chromatin structures across primate species.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Correlating Chromatin Compartments with Selection</span>"
    ]
  },
  {
    "objectID": "reports/manuscript.html#introduction",
    "href": "reports/manuscript.html#introduction",
    "title": "Correlating Chromatin Compartments with Selection",
    "section": "Introduction",
    "text": "Introduction\nDenmark is …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Correlating Chromatin Compartments with Selection</span>"
    ]
  },
  {
    "objectID": "reports/manuscript.html#results",
    "href": "reports/manuscript.html#results",
    "title": "Correlating Chromatin Compartments with Selection",
    "section": "Results",
    "text": "Results\n\nWeather\nAs shown in Figure 14.1, the Danish weather is blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah.\n\n\n\n\n\n\n\n\n\nFigure 14.1: Danish weather: This is the weather forcast for your project\n\n\n\n\n\n\n\n\nSocial norms\nIn Denmark, the workplace interaction is very informal and largely unaffected by seniority and age.\n\n\n\nI sampled 100 danaes from workplaces in Denmark. More about the sampling… blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,\n\n\n\nI found that neither academic seniority or age of workplace individuals much affected how informal our interaction was (see Figure 14.2).\n\n\n\n\n\n\n\n\n\nFigure 14.2: Interaction among Danes: How Danes interact is has very little to do with age and seniority, compared to most other contries.\n\n\n\n\n\n\n\n\n\n\nThe correlation between informality and age was -0.131 and the correlation between informality and seniority was 0.029.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Correlating Chromatin Compartments with Selection</span>"
    ]
  },
  {
    "objectID": "reports/manuscript.html#discussion",
    "href": "reports/manuscript.html#discussion",
    "title": "Correlating Chromatin Compartments with Selection",
    "section": "Discussion",
    "text": "Discussion\nThis this investigation of Danes…, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Correlating Chromatin Compartments with Selection</span>"
    ]
  },
  {
    "objectID": "reports/manuscript.html#methods",
    "href": "reports/manuscript.html#methods",
    "title": "Correlating Chromatin Compartments with Selection",
    "section": "Methods",
    "text": "Methods\n\nWeather analysis\n\n\n\nWeather data was collected… blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah\n\n\n\n\n\nInteraction analysis\n\n\n\nWorkplace individuals were interviewed by …. blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah,",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Correlating Chromatin Compartments with Selection</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Søren’s MSc project about Hi-C and spermatogenesis",
    "section": "",
    "text": "Project",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Project</span>"
    ]
  },
  {
    "objectID": "index.html#outline",
    "href": "index.html#outline",
    "title": "Søren’s MSc project about Hi-C and spermatogenesis",
    "section": "Outline",
    "text": "Outline\nHi-C data is often generated for whole-genome sequencing (WGS) and the assembly of genomes due to its ability to capture the three-dimensional organization of the genome. This spatial information helps in correctly assembling contigs into chromosomes by providing contacts between distant genomic regions, thus resolving ambiguities in the linear sequence data. Thus, Hi-C data is often available, and leveraging this existing data can provide valuable insights to other areas without the need for additional sequencing. The aim of this project is to analyze chromatin compartments on the X chromosome during spermatogenesis in baboons, macaques, and humans using Hi-C data. The project involves generating interaction maps and identifying PC1 compartments. A key objective is to compare transition zones with regions undergoing positive selection to uncover how chromatin architecture reflects evolutionary pressures. The ultimate goal is to deepen our understanding of chromatin organization and the conservation of non-advantageous alleles, providing insights into the role of selfish genes in shaping genome evolution.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Project</span>"
    ]
  },
  {
    "objectID": "index.html#notes-on-litterature-as-i-read-it",
    "href": "index.html#notes-on-litterature-as-i-read-it",
    "title": "Søren’s MSc project about Hi-C and spermatogenesis",
    "section": "Notes on litterature as I read it",
    "text": "Notes on litterature as I read it\n(Wang et al. 2019) Macaque/Mouse Hi-C paper. They use HiC-Pro and incorporates RNAseq data analyzed by TopHat and CuffLinks. Introduce small-scale in situ Hi-C (sisHi-C). They analyze both A/B compartments and TADs. Also introduce ‘Refined A/B compartments’ with ‘Local PCA’. They cite (Servant et al. 2015) for their PCA method.\n(Servant et al. 2015) describes the software HiC-Pro. Is a pipeline for all the steps until analysis of the contact maps. Includes (iterative correction) normalization steps, which is also available as standalone hiclib/iced tool. They refer to (Lieberman-Aiden et al. 2009) for PCA method.\n(Lieberman-Aiden et al. 2009) Introduces the Hi-C method and some ways of analyzing the data. E.g. the eigenvector (PCA) method, where they refer back to (Price et al. 2006)\n(Price et al. 2006) use PCA to account for stratification in GWAS. The paper was cited by the Hi-C paper (2009) which was cited by the HiC-Pro paper as their PCA method. No real use for this paper, and they also refer back to a general guide on PCA from 2003. End of citation chain.\n(Zuo et al. 2021) Stage-resolved Hi-C analysis in mouse spermatogenesis, using mm10 reference genome. They use hiclib (now replaced by distiller) and cooler/cooltools from mirnylab. They focus on genome-wide chromatin structure, especially the weakening of TADs in prophase I (pachytene stage) while there is persistent CTCF binding (loops). They suggest that chromosome organization may provide an infrastructure for the modulation of meiotic recombination in higher eukaryotes.\n\nQ: Could alterations in TAD organization during specific meiotic stages create opportunities for selfish genes to proliferate or influence transmission?\n\n(Batra et al. 2020) Baboon paper. They announce a new de novo-assembled reference genome, Panubis1.0, more accurate than the previous Panu3.0, which was a highly fragmented assembly based on short-read seq-tech and reference guided assembly (ref: rhesus macaque). They made the de novo assembly by combining 10x Genomics (physically linked short-reads) with Nanopore long-reads, and finally ordering and orienting the reads with Hi-C seq. They state no specific conclusions about the Hi-C data separate from the assemmbly.\n(Shami et al. 2020) Divergent features of mammalian spermatogenesis. They use scRNA-seq to study spermatogenesis in human, macaque, mice. They compare conserved and divergent features of spermatogenesis across species. Spermatogonia, spermatocytes, spermatids. Identified a gene TSPAN33 that was expressed in primate spermatogonia populations, but not in mice. They found both conserved patterns across species and species-specific patterns, notably in genes involved in immune system and blood-testis barrier, also including signalling pathways. Identify a genetic region that may be of interest, but otherwise I don’t know how to use this paper, unless they have Hi-C data they can send us.\n(Chakraborty, Wang, and Ay 2022) dcHiC paper/dcHiC tool. Differential compartments analysis. Utilize a multivariate distance measure, Mahalanobis (opposed to only pairwise comparisons) to identify and analyze changes across multiple Hi-C maps. They found compartmental changes in regions containing genes involved in cell identity (regulating pluripottency, cell adhesion, signaling pathways) during neuronal development. dcHiC can also identify sub-compartmental changes, and integrate compartmentalization data from other datasets (gene expression, histone modification, replication timing). Multivariata seems to be a better way of considering the Hi-C data.\n(Bicciato and Ferrari 2022) Book on Hi-C data analysis. Might use to find conventional use of thresholds, etc. Might follow a couple of these pipelines if they are not already outdated.\n(Skov et al. 2023) Paper from Munch-group. Cautiously hypothesize that meiotic drive on X chr could be responsible for their observations. Examining the selective sweeps in the context of (primate) spermatogenesis could be insightful. Integrating gene expression and Hi-C maps during spermatogenesis, could potentially uncover if the sweeps preferentially affect active elements/gene during spermatogenesis at i.e. specific stages.\n(Bravo Núñez, Nuckolls, and Zanders 2018). Paper on Genetic Villains/meiotic drivers. Describes the difficulty of detecting drive, and different types of drive. Killer-Target, Poison-Antidote. They have nice illustrations of meiotic drive.\n(Gong et al. 2021) Most recent paper I could find on Hi-C in human. But it is about cancer and other omics than Hi-C.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Project</span>"
    ]
  },
  {
    "objectID": "index.html#schedule-work-plan",
    "href": "index.html#schedule-work-plan",
    "title": "Søren’s MSc project about Hi-C and spermatogenesis",
    "section": "Schedule / Work plan",
    "text": "Schedule / Work plan\nSemester: Monday, Aug 26th – Wednesday, Jan 15th (Week 35-3)\nHand-in: Wednesday, Jan 15th (Week 3)\nHoliday: Wednesday, Oct 23rd – Monday, Oct 28th (Week 43)\nChristmas Holidays: Monday, Dec 23rd – Friday, Jan 3rd (Week 52-1)\n\nWeek 35-36 (Aug 26 - Sep 7):\nConduct a literature review on chromatin architecture, Hi-C methodology, and the concept of selfish genes. Get an overview of (and obtain) data sets to be used.\nWeek 37-38 (Sep 9 - Sep 21):\nAssess the status of existing Hi-C data (raw or QC’ed). If necessary, perform initial quality control. Align reads to reference genomes.\nWeek 39-40 (Sep 23 - Oct 5):\nProcess Hi-C interaction data. Perform quality assessment.\nWeek 41-42 (Oct 7 - Oct 19):\nGenerate and normalize interaction matrices for the X chromosome.\nWeek 43 (Oct 21 - Oct 26):\nHoliday from Wednesday (no major activities planned). Tidy notes and do some writing.\nWeek 44-45 (Oct 28 - Nov 9):\nPerform PCA to obtain PC1 compartments. Visualize results.\nWeek 46-47 (Nov 11 - Nov 23):\nIdentify A/B compartment transitions. Overlay with positive selection regions.\nWeek 48-49 (Nov 25 - Dec 7):\nConduct cross-species analysis by converting genomic coordinates.\nWeek 50 (Dec 9 - Dec 14):\nFinish analyses. Compare results.\nWeek 51 (Dec 16 - Dec 21):\nFinalize analyses and begin writing initial thesis draft, incorporating analysis results and discussions.\nWeek 52 (Dec 23 - Dec 28):\nChristmas holidays (no major activities planned). Will work a couple of days Dec 27-29.\nWeek 1 (Dec 30 - Jan 4):\nChristmas holidays until Jan 2 (just performing modifications to analyses, etc.).\nWeek 2 (Jan 6 - Jan 11):\nRevise thesis draft based on feedback. Continue refinement of analyses if necessary.\nWeek 3 (Jan 13 - Jan 15):\nFinal revisions and hand-in on Wednesday, January 15th.\n\n\n\n\nBatra, Sanjit Singh, Michal Levy-Sakin, Jacqueline Robinson, Joseph Guillory, Steffen Durinck, Tauras P Vilgalys, Pui-Yan Kwok, et al. 2020. “Accurate Assembly of the Olive Baboon ( Papio Anubis ) Genome Using Long-Read and Hi-C Data.” GigaScience 9 (12): giaa134. https://doi.org/10.1093/gigascience/giaa134.\n\n\nBicciato, Silvio, and Francesco Ferrari, eds. 2022. Hi-C Data Analysis: Methods and Protocols. Vol. 2301. Methods in Molecular Biology. New York, NY: Springer US. https://doi.org/10.1007/978-1-0716-1390-0.\n\n\nBravo Núñez, María Angélica, Nicole L. Nuckolls, and Sarah E. Zanders. 2018. “Genetic Villains: Killer Meiotic Drivers.” Trends in Genetics 34 (6): 424–33. https://doi.org/https://doi.org/10.1016/j.tig.2018.02.003.\n\n\nChakraborty, Abhijit, Jeffrey G. Wang, and Ferhat Ay. 2022. “dcHiC Detects Differential Compartments Across Multiple Hi-C Datasets.” Nature Communications 13 (1): 6827. https://doi.org/10.1038/s41467-022-34626-6.\n\n\nGong, Haiyan, Yi Yang, Sichen Zhang, Minghong Li, and Xiaotong Zhang. 2021. “Application of Hi-c and Other Omics Data Analysis in Human Cancer and Cell Differentiation Research.” Computational and Structural Biotechnology Journal 19: 2070–83. https://doi.org/https://doi.org/10.1016/j.csbj.2021.04.016.\n\n\nLieberman-Aiden, Erez, Nynke L. Van Berkum, Louise Williams, Maxim Imakaev, Tobias Ragoczy, Agnes Telling, Ido Amit, et al. 2009. “Comprehensive Mapping of Long-Range Interactions Reveals Folding Principles of the Human Genome.” Science 326 (5950): 289–93. https://doi.org/10.1126/science.1181369.\n\n\nPrice, Alkes L, Nick J Patterson, Robert M Plenge, Michael E Weinblatt, Nancy A Shadick, and David Reich. 2006. “Principal Components Analysis Corrects for Stratification in Genome-Wide Association Studies.” Nature Genetics 38 (8): 904–9. https://doi.org/10.1038/ng1847.\n\n\nServant, Nicolas, Nelle Varoquaux, Bryan R. Lajoie, Eric Viara, Chong-Jian Chen, Jean-Philippe Vert, Edith Heard, Job Dekker, and Emmanuel Barillot. 2015. “HiC-Pro: An Optimized and Flexible Pipeline for Hi-C Data Processing.” Genome Biology 16 (1): 259. https://doi.org/10.1186/s13059-015-0831-x.\n\n\nShami, Adrienne Niederriter, Xianing Zheng, Sarah K. Munyoki, Qianyi Ma, Gabriel L. Manske, Christopher D. Green, Meena Sukhwani, Kyle E. Orwig, Jun Z. Li, and Saher Sue Hammoud. 2020. “Single-Cell RNA Sequencing of Human, Macaque, and Mouse Testes Uncovers Conserved and Divergent Features of Mammalian Spermatogenesis.” Developmental Cell 54 (4): 529–547.e12. https://doi.org/10.1016/j.devcel.2020.05.010.\n\n\nSkov, Laurits, Moisès Coll Macià, Elise Anne Lucotte, Maria Izabel Alves Cavassim, David Castellano, Mikkel Heide Schierup, and Kasper Munch. 2023. “Extraordinary Selection on the Human X Chromosome Associated with Archaic Admixture.” Cell Genomics 3 (3): 100274. https://doi.org/10.1016/j.xgen.2023.100274.\n\n\nWang, Yao, Hanben Wang, Yu Zhang, Zhenhai Du, Wei Si, Suixing Fan, Dongdong Qin, et al. 2019. “Reprogramming of Meiotic Chromatin Architecture During Spermatogenesis.” Molecular Cell 73 (3): 547–561.e6. https://doi.org/10.1016/j.molcel.2018.11.019.\n\n\nZuo, Wu, Guangming Chen, Zhimei Gao, Shuai Li, Yanyan Chen, Chenhui Huang, Juan Chen, Zhengjun Chen, Ming Lei, and Qian Bian. 2021. “Stage-Resolved Hi-C Analyses Reveal Meiotic Chromosome Organizational Features Influencing Homolog Alignment.” Nature Communications 12 (1): 5827. https://doi.org/10.1038/s41467-021-26033-0.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Project</span>"
    ]
  },
  {
    "objectID": "thoughts.html",
    "href": "thoughts.html",
    "title": "Thoughts and Prayers",
    "section": "",
    "text": "Notes on Quarto\nI feel like i have the Markdown/Quarto thing under control, which is pretty nice. It is going to be really cool when actually starting to write the manus (I think).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Thoughts and Prayers</span>"
    ]
  },
  {
    "objectID": "thoughts.html#notes-on-hicexplorer",
    "href": "thoughts.html#notes-on-hicexplorer",
    "title": "Thoughts and Prayers",
    "section": "Notes on HiCExplorer",
    "text": "Notes on HiCExplorer\nIt feels very old school and unnecessary that I can’t just output the HiCExplorer commands [plots] to the Jupyter display. I have to save the plots to .pngs, which is flooding my figures directory. I should probably clean it up.\nI have created plots to mimic the (Wang et al. 2019) for the chr12 as well as chrX. They don’t compare very well with Wang2019, and the both PC1 and PC2 plot looks like they’re highly biased (only intersects 0 one time). PC3 looks more reasonable, but I don’t know if it is reasonable at all to use the 3rd PC in stead of the 1st. I guess it means that the compartmentalization is not the most variable feature, and there are some biases that we have to get rid of. That, or the X chromosome is divided only into two compartments in fibroblasts (unlikely).\n\n\n\n\n\n\nThe X chromosome in 50kb bins and the first 3 PCs below. Made with HicExplorer.\n\n\n\n\n\n\n\n\n\n\n\nThe X chromosome in 100kb bins and the first 3 PCs below. Made with HicExplorer.\n\n\n\n\n\n\nPlotting .cool files with h5py and pyBigWig\nIt does not work as I want. To read both the matrix and PC components, it requires an abnormal amount of memory (I don’t think it is strictly necessary to load 75 Gb of data into memory to make a 5x8” plot). However, HicExplorer advise against merging bins after correction and normalization, but I just don’t get that. I see no reason it could mess up the correction. Jupyter Display and, ultimately, my screen resolution makes that binning, so It would be completely fine to just bin the matrices after the fact.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Thoughts and Prayers</span>"
    ]
  },
  {
    "objectID": "thoughts.html#notes-on-open2c-framework",
    "href": "thoughts.html#notes-on-open2c-framework",
    "title": "Thoughts and Prayers",
    "section": "Notes on Open2C framework",
    "text": "Notes on Open2C framework\n\npairtools\nI’m considering to just map the reads again with bwa, mates together to create a pairs file in the first place. Alternatively, I will use samtools sort | samtools fixmate to convert them back into a paired-end alignment for inputting into cooler. Their own recommendation is to map with bwa mem with paired-end mates.\n\nEnded up mapping them again\n\n\n\ncooler\nI’ve decided that this is a much better tool than HiCExplorer, the overall experience is way better. The Python API makes it optimal for Jupyter Notebooks, in stead of doing shell escapes in every cell. It can plot 10kb bins without any issue.\n\nUpdate: 08-10-2024\nIt took more than a week to get a valid .pairs file and to get that processed into a .cool matrix. But now it seems to work pretty smoothly, and I believe it is more customizable. The pairs are split up into .nodups, .dups, and .unmapped pairs, meaning all the reads are still saved. A dedup.stats is also generated and visualized with MultiQC.\nI made these plots of both uncorrected and corrected (ICE) matrices (made with cooler)\n\n\n\n\n\n\nRaw matrix. Left: All chromosomes plotted in 100kb bins. Middle: chrX in 100kb bins. Right: chrX:60Mb-70Mb in 50 kb bins\n\n\n\n\n\n\n\n\n\n\n\nCorrected matrix. Left: All chromosomes plotted in 100kb bins. Middle: chrX in 100kb bins. Right: chrX:60Mb-70Mb in 50 kb bins\n\n\n\n\n\nNeither of them really resembles the ones from (Wang et al. 2019), but we have some confidence in our method still. Next step is to do the default compartmentalization analysis from cooler as well.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Thoughts and Prayers</span>"
    ]
  },
  {
    "objectID": "thoughts.html#notes-on-methods",
    "href": "thoughts.html#notes-on-methods",
    "title": "Thoughts and Prayers",
    "section": "Notes on methods",
    "text": "Notes on methods\n\n(Wang et al. 2019) uses a sliding window approach (Dixon et al. 2015) to calculate the obs/exp matrices for the PCA. I will try that next, and work within the cooler/cooltools framework which has a Python API and is thus more suitable to run in Jupyter Notebooks.\nHiCExplorer use a genome-wide contact-distance-based normalization method (dist_norm) to generate obs/exp matrices for PCA (similar to (Lieberman-Aiden et al. 2009)) that may introduce biases. I don’t know why, but it looks more like (Wang et al. 2019) when subtracting the running average [triangular windows, Kasper did this] from the computed PCs.\n\n\n\n\n\nDixon, Jesse R., Inkyung Jung, Siddarth Selvaraj, Yin Shen, Jessica E. Antosiewicz-Bourget, Ah Young Lee, Zhen Ye, et al. 2015. “Chromatin Architecture Reorganization During Stem Cell Differentiation.” Nature 518 (7539): 331–36. https://doi.org/10.1038/nature14222.\n\n\nLieberman-Aiden, Erez, Nynke L. Van Berkum, Louise Williams, Maxim Imakaev, Tobias Ragoczy, Agnes Telling, Ido Amit, et al. 2009. “Comprehensive Mapping of Long-Range Interactions Reveals Folding Principles of the Human Genome.” Science 326 (5950): 289–93. https://doi.org/10.1126/science.1181369.\n\n\nWang, Yao, Hanben Wang, Yu Zhang, Zhenhai Du, Wei Si, Suixing Fan, Dongdong Qin, et al. 2019. “Reprogramming of Meiotic Chromatin Architecture During Spermatogenesis.” Molecular Cell 73 (3): 547–561.e6. https://doi.org/10.1016/j.molcel.2018.11.019.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Thoughts and Prayers</span>"
    ]
  },
  {
    "objectID": "reports/supplementary.html",
    "href": "reports/supplementary.html",
    "title": "Supplementary info",
    "section": "",
    "text": "Regression analysis of formality\nBlah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Supplementary info</span>"
    ]
  },
  {
    "objectID": "reports/supplementary.html#regression-analysis-of-formality",
    "href": "reports/supplementary.html#regression-analysis-of-formality",
    "title": "Supplementary info",
    "section": "",
    "text": "Figure 15.1: Interaction among Danes: Regressions of informality against age for five levels of seniority.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Supplementary info</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Batra, Sanjit Singh, Michal Levy-Sakin, Jacqueline Robinson, Joseph\nGuillory, Steffen Durinck, Tauras P Vilgalys, Pui-Yan Kwok, et al. 2020.\n“Accurate Assembly of the Olive Baboon ( Papio\nAnubis ) Genome Using Long-Read and Hi-C\nData.” GigaScience 9 (12): giaa134. https://doi.org/10.1093/gigascience/giaa134.\n\n\nBicciato, Silvio, and Francesco Ferrari, eds. 2022.\nHi-C Data Analysis:\nMethods and Protocols. Vol. 2301. Methods\nin Molecular Biology. New York, NY: Springer\nUS. https://doi.org/10.1007/978-1-0716-1390-0.\n\n\nBravo Núñez, María Angélica, Nicole L. Nuckolls, and Sarah E. Zanders.\n2018. “Genetic Villains: Killer Meiotic Drivers.”\nTrends in Genetics 34 (6): 424–33. https://doi.org/https://doi.org/10.1016/j.tig.2018.02.003.\n\n\nChakraborty, Abhijit, Jeffrey G. Wang, and Ferhat Ay. 2022. “dcHiC Detects Differential Compartments Across\nMultiple Hi-C Datasets.” Nature\nCommunications 13 (1): 6827. https://doi.org/10.1038/s41467-022-34626-6.\n\n\nDixon, Jesse R., Inkyung Jung, Siddarth Selvaraj, Yin Shen, Jessica E.\nAntosiewicz-Bourget, Ah Young Lee, Zhen Ye, et al. 2015.\n“Chromatin Architecture Reorganization During Stem Cell\nDifferentiation.” Nature 518 (7539): 331–36. https://doi.org/10.1038/nature14222.\n\n\nGong, Haiyan, Yi Yang, Sichen Zhang, Minghong Li, and Xiaotong Zhang.\n2021. “Application of Hi-c and Other Omics Data Analysis in Human\nCancer and Cell Differentiation Research.” Computational and\nStructural Biotechnology Journal 19: 2070–83. https://doi.org/https://doi.org/10.1016/j.csbj.2021.04.016.\n\n\nLieberman-Aiden, Erez, Nynke L. Van Berkum, Louise Williams, Maxim\nImakaev, Tobias Ragoczy, Agnes Telling, Ido Amit, et al. 2009.\n“Comprehensive Mapping of\nLong-Range Interactions\nReveals Folding Principles of the\nHuman Genome.” Science 326\n(5950): 289–93. https://doi.org/10.1126/science.1181369.\n\n\nPrice, Alkes L, Nick J Patterson, Robert M Plenge, Michael E Weinblatt,\nNancy A Shadick, and David Reich. 2006. “Principal Components\nAnalysis Corrects for Stratification in Genome-Wide Association\nStudies.” Nature Genetics 38 (8): 904–9. https://doi.org/10.1038/ng1847.\n\n\nServant, Nicolas, Nelle Varoquaux, Bryan R. Lajoie, Eric Viara,\nChong-Jian Chen, Jean-Philippe Vert, Edith Heard, Job Dekker, and\nEmmanuel Barillot. 2015. “HiC-Pro: An\nOptimized and Flexible Pipeline for Hi-C Data\nProcessing.” Genome Biology 16 (1): 259. https://doi.org/10.1186/s13059-015-0831-x.\n\n\nShami, Adrienne Niederriter, Xianing Zheng, Sarah K. Munyoki, Qianyi Ma,\nGabriel L. Manske, Christopher D. Green, Meena Sukhwani, Kyle E. Orwig,\nJun Z. Li, and Saher Sue Hammoud. 2020. “Single-Cell\nRNA Sequencing of Human,\nMacaque, and Mouse Testes\nUncovers Conserved and Divergent\nFeatures of Mammalian\nSpermatogenesis.” Developmental Cell 54\n(4): 529–547.e12. https://doi.org/10.1016/j.devcel.2020.05.010.\n\n\nSkov, Laurits, Moisès Coll Macià, Elise Anne Lucotte, Maria Izabel Alves\nCavassim, David Castellano, Mikkel Heide Schierup, and Kasper Munch.\n2023. “Extraordinary Selection on the Human X\nChromosome Associated with Archaic Admixture.” Cell\nGenomics 3 (3): 100274. https://doi.org/10.1016/j.xgen.2023.100274.\n\n\nWang, Yao, Hanben Wang, Yu Zhang, Zhenhai Du, Wei Si, Suixing Fan,\nDongdong Qin, et al. 2019. “Reprogramming of Meiotic\nChromatin Architecture During\nSpermatogenesis.” Molecular Cell 73 (3):\n547–561.e6. https://doi.org/10.1016/j.molcel.2018.11.019.\n\n\nZuo, Wu, Guangming Chen, Zhimei Gao, Shuai Li, Yanyan Chen, Chenhui\nHuang, Juan Chen, Zhengjun Chen, Ming Lei, and Qian Bian. 2021.\n“Stage-Resolved Hi-C Analyses Reveal\nMeiotic Chromosome Organizational Features Influencing Homolog\nAlignment.” Nature Communications 12 (1): 5827. https://doi.org/10.1038/s41467-021-26033-0.",
    "crumbs": [
      "References"
    ]
  }
]