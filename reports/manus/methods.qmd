
## Methods

In this project, we formulate two objectives: 

**A**: Reproduce the Hi-C interaction maps and eigendecomposition from [@wang_reprogramming_2019], with some modifications. We briefly use *HiCExplorer*, but change the analyses to use the *Open2C Ecosystem* [@open2c] which have a Pyton API as well as command-line functions, which can be paired very well with Jupyter Notebooks. The majority of the data analysis was run with a *gwf* workflow, and the commands that were visually inspected were run in Jupyter Notebooks. 

**B** Compare with regions of selection that are found in *papio anubis*, and maybe in *human* too. Investigate the biological meaning of the results. 

The whole of this project is carried out with reproducibility in mind, so an effort (and quite a significant amount of time) has been put into documenting code and organizing the project for readbility and transparency through a Quarto project [ref]. Therefore, all code and text  is made available as a Quarto book, rendered directly from the GitHub repository with GitHub Pages []. To make this possible, the Quarto documentation has been extensively studied and discussed with *KMT*. 

### Downloading Data and Project Structure

To reproduce the results from [@wang_reprogramming_2019], I chose to use their raw data directly from the SRA portal [ref]. I filtered the data to contain all their paired-end Hi-C reads, and included only macaque samples. The data set also contains RNAseq data, and the same tissues for both macaque and mouse. The meta data for the data set was extracted into a runtable `SRA-runtable.tsv`. To get an overview of the data accessions used in this analysis, we will first summarize the runtable  that contains the accession numbers and some metadata for each sample (@tbl-runtable-summary). It adds up to ~ 1Tb of compressed `fastq` files, holding ~ 9.5 billion reads.

{{< embed ../../notebooks/03_compartments.ipynb#tbl-runtable-summary >}}



### Handling coolers

##### Merge samples from each source

::: {#fig-flowchart-handling-coolers}

{{< placeholder 500 100 format=svg >}}

A flowchart showing the pipeline from `.fastq` to `.mcool`. Probably BioRender or Inkscape.
:::

We will use `cooler merge` to merge all samples in each sub-folder (cell type) to just one interaction matrix for each cell type. The reason for that is that we choose to trust @wang_reprogramming_2019 when they say that compartments are highly reproducible between replicates, and by merging all replicates, we will have a more robust signal. 

Thus, we will merge all samples from the same source_name into a single cooler file. The coolers are produced to only contain the real chromosomes (1-22, X, Y), and not the mitochondrial DNA or the unplaced contigs (~2,900), as they would not bring any information to the analysis.

First, we will create a dictionary with the paths to the coolers for each sample. We use `glob` to fetch all the coolers in each sub-folder that remain after filtering and (automatic) quality control (those are the ones with `nodups` in their names). 

